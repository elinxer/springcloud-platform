// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: VehicleControl.proto

package com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body;

public final class RemoteContrlMessageProtoc {
  private RemoteContrlMessageProtoc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eMessageType}
   */
  public enum eMessageType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MSG_NULL = 0;</code>
     */
    MSG_NULL(0),
    /**
     * <pre>
     * 命令类消息带数据的-例如设置拖拉机按照指定速度行驶。
     * </pre>
     *
     * <code>MSG_COMMAND = 1;</code>
     */
    MSG_COMMAND(1),
    /**
     * <pre>
     * 回应类消息-针对 请求/命令/广播类消息进行应答。
     * </pre>
     *
     * <code>MSG_RESPONSE = 2;</code>
     */
    MSG_RESPONSE(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>MSG_NULL = 0;</code>
     */
    public static final int MSG_NULL_VALUE = 0;
    /**
     * <pre>
     * 命令类消息带数据的-例如设置拖拉机按照指定速度行驶。
     * </pre>
     *
     * <code>MSG_COMMAND = 1;</code>
     */
    public static final int MSG_COMMAND_VALUE = 1;
    /**
     * <pre>
     * 回应类消息-针对 请求/命令/广播类消息进行应答。
     * </pre>
     *
     * <code>MSG_RESPONSE = 2;</code>
     */
    public static final int MSG_RESPONSE_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static eMessageType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static eMessageType forNumber(int value) {
      switch (value) {
        case 0: return MSG_NULL;
        case 1: return MSG_COMMAND;
        case 2: return MSG_RESPONSE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<eMessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        eMessageType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<eMessageType>() {
            public eMessageType findValueByNumber(int number) {
              return eMessageType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.getDescriptor().getEnumTypes().get(0);
    }

    private static final eMessageType[] VALUES = values();

    public static eMessageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private eMessageType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eMessageType)
  }

  /**
   * Protobuf enum {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlRespType}
   */
  public enum eCtrlRespType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RESP_NONE = 0;</code>
     */
    RESP_NONE(0),
    /**
     * <code>NOMAL_RESP = 1;</code>
     */
    NOMAL_RESP(1),
    /**
     * <code>MDC_TIMEOUT_ERR_RESP = 2;</code>
     */
    MDC_TIMEOUT_ERR_RESP(2),
    /**
     * <code>SEND_MDC_ERR_RESP = 3;</code>
     */
    SEND_MDC_ERR_RESP(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>RESP_NONE = 0;</code>
     */
    public static final int RESP_NONE_VALUE = 0;
    /**
     * <code>NOMAL_RESP = 1;</code>
     */
    public static final int NOMAL_RESP_VALUE = 1;
    /**
     * <code>MDC_TIMEOUT_ERR_RESP = 2;</code>
     */
    public static final int MDC_TIMEOUT_ERR_RESP_VALUE = 2;
    /**
     * <code>SEND_MDC_ERR_RESP = 3;</code>
     */
    public static final int SEND_MDC_ERR_RESP_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static eCtrlRespType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static eCtrlRespType forNumber(int value) {
      switch (value) {
        case 0: return RESP_NONE;
        case 1: return NOMAL_RESP;
        case 2: return MDC_TIMEOUT_ERR_RESP;
        case 3: return SEND_MDC_ERR_RESP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<eCtrlRespType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        eCtrlRespType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<eCtrlRespType>() {
            public eCtrlRespType findValueByNumber(int number) {
              return eCtrlRespType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.getDescriptor().getEnumTypes().get(1);
    }

    private static final eCtrlRespType[] VALUES = values();

    public static eCtrlRespType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private eCtrlRespType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlRespType)
  }

  /**
   * Protobuf enum {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlType}
   */
  public enum eCtrlType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 空命令
     * </pre>
     *
     * <code>CMD_NULL = 0;</code>
     */
    CMD_NULL(0),
    /**
     * <pre>
     * 设置自动驾驶指令
     * </pre>
     *
     * <code>CMD_SET_AUTOPILOT_MODE = 1;</code>
     */
    CMD_SET_AUTOPILOT_MODE(1),
    /**
     * <pre>
     * 设置工作模式 STANDLONE MASTER SLAVE 
     * </pre>
     *
     * <code>CMD_SET_WORK_MODE = 2;</code>
     */
    CMD_SET_WORK_MODE(2),
    /**
     * <pre>
     * 设置交互模式 CLOUD
     * </pre>
     *
     * <code>CMD_SET_HMI = 3;</code>
     */
    CMD_SET_HMI(3),
    /**
     * <pre>
     * 删除任务
     * </pre>
     *
     * <code>CMD_SET_CANCEL_TASK = 4;</code>
     */
    CMD_SET_CANCEL_TASK(4),
    /**
     * <pre>
     * 检查是否可以更新路径
     * </pre>
     *
     * <code>CMD_UPDATE_ROUTE_PATH = 5;</code>
     */
    CMD_UPDATE_ROUTE_PATH(5),
    /**
     * <pre>
     * 设置全局路径
     * </pre>
     *
     * <code>CMD_SET_ROUTE_PATH = 6;</code>
     */
    CMD_SET_ROUTE_PATH(6),
    /**
     * <pre>
     * 设置规划关键参数（包括AB/ABCD）
     * </pre>
     *
     * <code>CMD_SET_ROUTE_PARAM = 7;</code>
     */
    CMD_SET_ROUTE_PARAM(7),
    /**
     * <pre>
     * 任务完成确认 仅在自动驾驶端自动切换到任务完成时有效，其他情况下如需停止，调用CANCEL TASK
     * </pre>
     *
     * <code>CMD_SET_TASK_FINISH_CONFIRM = 8;</code>
     */
    CMD_SET_TASK_FINISH_CONFIRM(8),
    /**
     * <pre>
     * 任务删除确认 
     * </pre>
     *
     * <code>CMD_SET_CANCEL_TASK_CONFIRM = 9;</code>
     */
    CMD_SET_CANCEL_TASK_CONFIRM(9),
    /**
     * <pre>
     * 设置基准线平移
     * </pre>
     *
     * <code>CMD_SET_BASE_LINE_TRANSLATION = 12;</code>
     */
    CMD_SET_BASE_LINE_TRANSLATION(12),
    /**
     * <pre>
     * 设置交接行
     * </pre>
     *
     * <code>CMD_SET_TRANSFER_LINE = 13;</code>
     */
    CMD_SET_TRANSFER_LINE(13),
    /**
     * <pre>
     * 配置参数
     * </pre>
     *
     * <code>CMD_SET_CONFIG_PARAM = 15;</code>
     */
    CMD_SET_CONFIG_PARAM(15),
    /**
     * <pre>
     * 请求版本信息
     * </pre>
     *
     * <code>CMD_REQ_VERSION_INFO = 16;</code>
     */
    CMD_REQ_VERSION_INFO(16),
    /**
     * <pre>
     * 请求基础状态信息 单机用 
     * </pre>
     *
     * <code>CMD_REQ_BASIC_STATE_INFO = 17;</code>
     */
    CMD_REQ_BASIC_STATE_INFO(17),
    /**
     * <pre>
     * 请求NCU配置参数
     * </pre>
     *
     * <code>CMD_REQ_CONFIG_PARAM = 18;</code>
     */
    CMD_REQ_CONFIG_PARAM(18),
    /**
     * <pre>
     * 手动控制
     * </pre>
     *
     * <code>CMD_MANUAL_CONTROL = 20;</code>
     */
    CMD_MANUAL_CONTROL(20),
    /**
     * <pre>
     * 传感器校准
     * </pre>
     *
     * <code>CMD_CALIBRATION = 21;</code>
     */
    CMD_CALIBRATION(21),
    /**
     * <pre>
     * 交互终端请求确实是否可以进行传感器校准  如返回OK，则直接发送校准指令即可
     * </pre>
     *
     * <code>CMD_CONFIRM_CALIBRATION = 22;</code>
     */
    CMD_CONFIRM_CALIBRATION(22),
    /**
     * <pre>
     * 终端设置
     * </pre>
     *
     * <code>CTRL_TYPE_TBOX_PARAM_SET = 40;</code>
     */
    CTRL_TYPE_TBOX_PARAM_SET(40),
    /**
     * <pre>
     * 终端查询
     * </pre>
     *
     * <code>CTRL_TYPE_TBOX_PARAM_GET = 41;</code>
     */
    CTRL_TYPE_TBOX_PARAM_GET(41),
    /**
     * <pre>
     * 确认是否继续上一任务  NCU-&gt;交互终端
     * </pre>
     *
     * <code>CMD_REQ_CONFIRM_CONTINUE_LAST_TASK = 50;</code>
     */
    CMD_REQ_CONFIRM_CONTINUE_LAST_TASK(50),
    /**
     * <pre>
     * 请求确认是否结束任务
     * </pre>
     *
     * <code>CMD_REQ_TASK_FINISH_CONFIRM = 51;</code>
     */
    CMD_REQ_TASK_FINISH_CONFIRM(51),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 空命令
     * </pre>
     *
     * <code>CMD_NULL = 0;</code>
     */
    public static final int CMD_NULL_VALUE = 0;
    /**
     * <pre>
     * 设置自动驾驶指令
     * </pre>
     *
     * <code>CMD_SET_AUTOPILOT_MODE = 1;</code>
     */
    public static final int CMD_SET_AUTOPILOT_MODE_VALUE = 1;
    /**
     * <pre>
     * 设置工作模式 STANDLONE MASTER SLAVE 
     * </pre>
     *
     * <code>CMD_SET_WORK_MODE = 2;</code>
     */
    public static final int CMD_SET_WORK_MODE_VALUE = 2;
    /**
     * <pre>
     * 设置交互模式 CLOUD
     * </pre>
     *
     * <code>CMD_SET_HMI = 3;</code>
     */
    public static final int CMD_SET_HMI_VALUE = 3;
    /**
     * <pre>
     * 删除任务
     * </pre>
     *
     * <code>CMD_SET_CANCEL_TASK = 4;</code>
     */
    public static final int CMD_SET_CANCEL_TASK_VALUE = 4;
    /**
     * <pre>
     * 检查是否可以更新路径
     * </pre>
     *
     * <code>CMD_UPDATE_ROUTE_PATH = 5;</code>
     */
    public static final int CMD_UPDATE_ROUTE_PATH_VALUE = 5;
    /**
     * <pre>
     * 设置全局路径
     * </pre>
     *
     * <code>CMD_SET_ROUTE_PATH = 6;</code>
     */
    public static final int CMD_SET_ROUTE_PATH_VALUE = 6;
    /**
     * <pre>
     * 设置规划关键参数（包括AB/ABCD）
     * </pre>
     *
     * <code>CMD_SET_ROUTE_PARAM = 7;</code>
     */
    public static final int CMD_SET_ROUTE_PARAM_VALUE = 7;
    /**
     * <pre>
     * 任务完成确认 仅在自动驾驶端自动切换到任务完成时有效，其他情况下如需停止，调用CANCEL TASK
     * </pre>
     *
     * <code>CMD_SET_TASK_FINISH_CONFIRM = 8;</code>
     */
    public static final int CMD_SET_TASK_FINISH_CONFIRM_VALUE = 8;
    /**
     * <pre>
     * 任务删除确认 
     * </pre>
     *
     * <code>CMD_SET_CANCEL_TASK_CONFIRM = 9;</code>
     */
    public static final int CMD_SET_CANCEL_TASK_CONFIRM_VALUE = 9;
    /**
     * <pre>
     * 设置基准线平移
     * </pre>
     *
     * <code>CMD_SET_BASE_LINE_TRANSLATION = 12;</code>
     */
    public static final int CMD_SET_BASE_LINE_TRANSLATION_VALUE = 12;
    /**
     * <pre>
     * 设置交接行
     * </pre>
     *
     * <code>CMD_SET_TRANSFER_LINE = 13;</code>
     */
    public static final int CMD_SET_TRANSFER_LINE_VALUE = 13;
    /**
     * <pre>
     * 配置参数
     * </pre>
     *
     * <code>CMD_SET_CONFIG_PARAM = 15;</code>
     */
    public static final int CMD_SET_CONFIG_PARAM_VALUE = 15;
    /**
     * <pre>
     * 请求版本信息
     * </pre>
     *
     * <code>CMD_REQ_VERSION_INFO = 16;</code>
     */
    public static final int CMD_REQ_VERSION_INFO_VALUE = 16;
    /**
     * <pre>
     * 请求基础状态信息 单机用 
     * </pre>
     *
     * <code>CMD_REQ_BASIC_STATE_INFO = 17;</code>
     */
    public static final int CMD_REQ_BASIC_STATE_INFO_VALUE = 17;
    /**
     * <pre>
     * 请求NCU配置参数
     * </pre>
     *
     * <code>CMD_REQ_CONFIG_PARAM = 18;</code>
     */
    public static final int CMD_REQ_CONFIG_PARAM_VALUE = 18;
    /**
     * <pre>
     * 手动控制
     * </pre>
     *
     * <code>CMD_MANUAL_CONTROL = 20;</code>
     */
    public static final int CMD_MANUAL_CONTROL_VALUE = 20;
    /**
     * <pre>
     * 传感器校准
     * </pre>
     *
     * <code>CMD_CALIBRATION = 21;</code>
     */
    public static final int CMD_CALIBRATION_VALUE = 21;
    /**
     * <pre>
     * 交互终端请求确实是否可以进行传感器校准  如返回OK，则直接发送校准指令即可
     * </pre>
     *
     * <code>CMD_CONFIRM_CALIBRATION = 22;</code>
     */
    public static final int CMD_CONFIRM_CALIBRATION_VALUE = 22;
    /**
     * <pre>
     * 终端设置
     * </pre>
     *
     * <code>CTRL_TYPE_TBOX_PARAM_SET = 40;</code>
     */
    public static final int CTRL_TYPE_TBOX_PARAM_SET_VALUE = 40;
    /**
     * <pre>
     * 终端查询
     * </pre>
     *
     * <code>CTRL_TYPE_TBOX_PARAM_GET = 41;</code>
     */
    public static final int CTRL_TYPE_TBOX_PARAM_GET_VALUE = 41;
    /**
     * <pre>
     * 确认是否继续上一任务  NCU-&gt;交互终端
     * </pre>
     *
     * <code>CMD_REQ_CONFIRM_CONTINUE_LAST_TASK = 50;</code>
     */
    public static final int CMD_REQ_CONFIRM_CONTINUE_LAST_TASK_VALUE = 50;
    /**
     * <pre>
     * 请求确认是否结束任务
     * </pre>
     *
     * <code>CMD_REQ_TASK_FINISH_CONFIRM = 51;</code>
     */
    public static final int CMD_REQ_TASK_FINISH_CONFIRM_VALUE = 51;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static eCtrlType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static eCtrlType forNumber(int value) {
      switch (value) {
        case 0: return CMD_NULL;
        case 1: return CMD_SET_AUTOPILOT_MODE;
        case 2: return CMD_SET_WORK_MODE;
        case 3: return CMD_SET_HMI;
        case 4: return CMD_SET_CANCEL_TASK;
        case 5: return CMD_UPDATE_ROUTE_PATH;
        case 6: return CMD_SET_ROUTE_PATH;
        case 7: return CMD_SET_ROUTE_PARAM;
        case 8: return CMD_SET_TASK_FINISH_CONFIRM;
        case 9: return CMD_SET_CANCEL_TASK_CONFIRM;
        case 12: return CMD_SET_BASE_LINE_TRANSLATION;
        case 13: return CMD_SET_TRANSFER_LINE;
        case 15: return CMD_SET_CONFIG_PARAM;
        case 16: return CMD_REQ_VERSION_INFO;
        case 17: return CMD_REQ_BASIC_STATE_INFO;
        case 18: return CMD_REQ_CONFIG_PARAM;
        case 20: return CMD_MANUAL_CONTROL;
        case 21: return CMD_CALIBRATION;
        case 22: return CMD_CONFIRM_CALIBRATION;
        case 40: return CTRL_TYPE_TBOX_PARAM_SET;
        case 41: return CTRL_TYPE_TBOX_PARAM_GET;
        case 50: return CMD_REQ_CONFIRM_CONTINUE_LAST_TASK;
        case 51: return CMD_REQ_TASK_FINISH_CONFIRM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<eCtrlType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        eCtrlType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<eCtrlType>() {
            public eCtrlType findValueByNumber(int number) {
              return eCtrlType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.getDescriptor().getEnumTypes().get(2);
    }

    private static final eCtrlType[] VALUES = values();

    public static eCtrlType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private eCtrlType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlType)
  }

  /**
   * Protobuf enum {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutopilotCmd}
   */
  public enum AutopilotCmd
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>AUTOPILOT_NULL = 0;</code>
     */
    AUTOPILOT_NULL(0),
    /**
     * <code>AUTOPILOT_NA = 1;</code>
     */
    AUTOPILOT_NA(1),
    /**
     * <code>AUTOPILOT_START = 2;</code>
     */
    AUTOPILOT_START(2),
    /**
     * <code>AUTOPILOT_STOP = 3;</code>
     */
    AUTOPILOT_STOP(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>AUTOPILOT_NULL = 0;</code>
     */
    public static final int AUTOPILOT_NULL_VALUE = 0;
    /**
     * <code>AUTOPILOT_NA = 1;</code>
     */
    public static final int AUTOPILOT_NA_VALUE = 1;
    /**
     * <code>AUTOPILOT_START = 2;</code>
     */
    public static final int AUTOPILOT_START_VALUE = 2;
    /**
     * <code>AUTOPILOT_STOP = 3;</code>
     */
    public static final int AUTOPILOT_STOP_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AutopilotCmd valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AutopilotCmd forNumber(int value) {
      switch (value) {
        case 0: return AUTOPILOT_NULL;
        case 1: return AUTOPILOT_NA;
        case 2: return AUTOPILOT_START;
        case 3: return AUTOPILOT_STOP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AutopilotCmd>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AutopilotCmd> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AutopilotCmd>() {
            public AutopilotCmd findValueByNumber(int number) {
              return AutopilotCmd.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.getDescriptor().getEnumTypes().get(3);
    }

    private static final AutopilotCmd[] VALUES = values();

    public static AutopilotCmd valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AutopilotCmd(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutopilotCmd)
  }

  /**
   * Protobuf enum {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkMode}
   */
  public enum WorkMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>WORK_MODE_NULL = 0;</code>
     */
    WORK_MODE_NULL(0),
    /**
     * <code>WORK_MODE_NA = 1;</code>
     */
    WORK_MODE_NA(1),
    /**
     * <code>WORK_MODE_STANDALONE = 2;</code>
     */
    WORK_MODE_STANDALONE(2),
    /**
     * <code>WORK_MODE_MASTER = 3;</code>
     */
    WORK_MODE_MASTER(3),
    /**
     * <code>WORK_MODE_SLAVE = 4;</code>
     */
    WORK_MODE_SLAVE(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>WORK_MODE_NULL = 0;</code>
     */
    public static final int WORK_MODE_NULL_VALUE = 0;
    /**
     * <code>WORK_MODE_NA = 1;</code>
     */
    public static final int WORK_MODE_NA_VALUE = 1;
    /**
     * <code>WORK_MODE_STANDALONE = 2;</code>
     */
    public static final int WORK_MODE_STANDALONE_VALUE = 2;
    /**
     * <code>WORK_MODE_MASTER = 3;</code>
     */
    public static final int WORK_MODE_MASTER_VALUE = 3;
    /**
     * <code>WORK_MODE_SLAVE = 4;</code>
     */
    public static final int WORK_MODE_SLAVE_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static WorkMode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static WorkMode forNumber(int value) {
      switch (value) {
        case 0: return WORK_MODE_NULL;
        case 1: return WORK_MODE_NA;
        case 2: return WORK_MODE_STANDALONE;
        case 3: return WORK_MODE_MASTER;
        case 4: return WORK_MODE_SLAVE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<WorkMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        WorkMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WorkMode>() {
            public WorkMode findValueByNumber(int number) {
              return WorkMode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.getDescriptor().getEnumTypes().get(4);
    }

    private static final WorkMode[] VALUES = values();

    public static WorkMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private WorkMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkMode)
  }

  /**
   * Protobuf enum {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiType}
   */
  public enum HmiType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>HMI_NULL = 0;</code>
     */
    HMI_NULL(0),
    /**
     * <code>HMI_CLOUD = 1;</code>
     */
    HMI_CLOUD(1),
    /**
     * <code>HMI_CLOUD_OFFLINE = 2;</code>
     */
    HMI_CLOUD_OFFLINE(2),
    /**
     * <code>HMI_APP = 3;</code>
     */
    HMI_APP(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>HMI_NULL = 0;</code>
     */
    public static final int HMI_NULL_VALUE = 0;
    /**
     * <code>HMI_CLOUD = 1;</code>
     */
    public static final int HMI_CLOUD_VALUE = 1;
    /**
     * <code>HMI_CLOUD_OFFLINE = 2;</code>
     */
    public static final int HMI_CLOUD_OFFLINE_VALUE = 2;
    /**
     * <code>HMI_APP = 3;</code>
     */
    public static final int HMI_APP_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static HmiType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static HmiType forNumber(int value) {
      switch (value) {
        case 0: return HMI_NULL;
        case 1: return HMI_CLOUD;
        case 2: return HMI_CLOUD_OFFLINE;
        case 3: return HMI_APP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<HmiType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        HmiType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<HmiType>() {
            public HmiType findValueByNumber(int number) {
              return HmiType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.getDescriptor().getEnumTypes().get(5);
    }

    private static final HmiType[] VALUES = values();

    public static HmiType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private HmiType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiType)
  }

  /**
   * Protobuf enum {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigType}
   */
  public enum ConfigType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CFG_NULL = 0;</code>
     */
    CFG_NULL(0),
    /**
     * <pre>
     * 设置GNSS板卡信息
     * </pre>
     *
     * <code>GNSS = 1;</code>
     */
    GNSS(1),
    /**
     * <pre>
     * 设置定位配置信息
     * </pre>
     *
     * <code>LOCALIZATION = 2;</code>
     */
    LOCALIZATION(2),
    /**
     * <pre>
     * 设置控制配置参数信息
     * </pre>
     *
     * <code>CONTROL = 3;</code>
     */
    CONTROL(3),
    /**
     * <pre>
     * 设置地盘配置参数信息
     * </pre>
     *
     * <code>CHASSIS = 4;</code>
     */
    CHASSIS(4),
    /**
     * <pre>
     * 设置决策信息
     * </pre>
     *
     * <code>PLANNING = 5;</code>
     */
    PLANNING(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>CFG_NULL = 0;</code>
     */
    public static final int CFG_NULL_VALUE = 0;
    /**
     * <pre>
     * 设置GNSS板卡信息
     * </pre>
     *
     * <code>GNSS = 1;</code>
     */
    public static final int GNSS_VALUE = 1;
    /**
     * <pre>
     * 设置定位配置信息
     * </pre>
     *
     * <code>LOCALIZATION = 2;</code>
     */
    public static final int LOCALIZATION_VALUE = 2;
    /**
     * <pre>
     * 设置控制配置参数信息
     * </pre>
     *
     * <code>CONTROL = 3;</code>
     */
    public static final int CONTROL_VALUE = 3;
    /**
     * <pre>
     * 设置地盘配置参数信息
     * </pre>
     *
     * <code>CHASSIS = 4;</code>
     */
    public static final int CHASSIS_VALUE = 4;
    /**
     * <pre>
     * 设置决策信息
     * </pre>
     *
     * <code>PLANNING = 5;</code>
     */
    public static final int PLANNING_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ConfigType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ConfigType forNumber(int value) {
      switch (value) {
        case 0: return CFG_NULL;
        case 1: return GNSS;
        case 2: return LOCALIZATION;
        case 3: return CONTROL;
        case 4: return CHASSIS;
        case 5: return PLANNING;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ConfigType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ConfigType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ConfigType>() {
            public ConfigType findValueByNumber(int number) {
              return ConfigType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.getDescriptor().getEnumTypes().get(6);
    }

    private static final ConfigType[] VALUES = values();

    public static ConfigType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ConfigType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigType)
  }

  /**
   * Protobuf enum {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelType}
   */
  public enum VersionModelType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>VERSION_NULL = 0;</code>
     */
    VERSION_NULL(0),
    /**
     * <pre>
     *导航系统
     * </pre>
     *
     * <code>NCU = 1;</code>
     */
    NCU(1),
    /**
     * <pre>
     *安全MCU
     * </pre>
     *
     * <code>MCU = 2;</code>
     */
    MCU(2),
    /**
     * <pre>
     *操作系统
     * </pre>
     *
     * <code>SYSTEM = 3;</code>
     */
    SYSTEM(3),
    /**
     * <pre>
     *云
     * </pre>
     *
     * <code>CLOUD = 4;</code>
     */
    CLOUD(4),
    /**
     * <pre>
     *感知
     * </pre>
     *
     * <code>PERCEPTION = 5;</code>
     */
    PERCEPTION(5),
    /**
     * <pre>
     *轮角传感器
     * </pre>
     *
     * <code>WHEEL_ANGLE = 6;</code>
     */
    WHEEL_ANGLE(6),
    /**
     * <pre>
     *转向电机
     * </pre>
     *
     * <code>STEER_MOTOR = 7;</code>
     */
    STEER_MOTOR(7),
    /**
     * <pre>
     *控制器
     * </pre>
     *
     * <code>CONTROLLER = 8;</code>
     */
    CONTROLLER(8),
    /**
     * <pre>
     *GNSS 板卡型号
     * </pre>
     *
     * <code>GNSS_BOARD = 9;</code>
     */
    GNSS_BOARD(9),
    /**
     * <pre>
     *电台型号
     * </pre>
     *
     * <code>RADIO_BOARD = 10;</code>
     */
    RADIO_BOARD(10),
    /**
     * <pre>
     *TBOX
     * </pre>
     *
     * <code>TBOX = 11;</code>
     */
    TBOX(11),
    /**
     * <pre>
     *底盘型号
     * </pre>
     *
     * <code>HY_CHASSIS = 12;</code>
     */
    HY_CHASSIS(12),
    /**
     * <pre>
     *农机具
     * </pre>
     *
     * <code>IMPLEMENT = 13;</code>
     */
    IMPLEMENT(13),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>VERSION_NULL = 0;</code>
     */
    public static final int VERSION_NULL_VALUE = 0;
    /**
     * <pre>
     *导航系统
     * </pre>
     *
     * <code>NCU = 1;</code>
     */
    public static final int NCU_VALUE = 1;
    /**
     * <pre>
     *安全MCU
     * </pre>
     *
     * <code>MCU = 2;</code>
     */
    public static final int MCU_VALUE = 2;
    /**
     * <pre>
     *操作系统
     * </pre>
     *
     * <code>SYSTEM = 3;</code>
     */
    public static final int SYSTEM_VALUE = 3;
    /**
     * <pre>
     *云
     * </pre>
     *
     * <code>CLOUD = 4;</code>
     */
    public static final int CLOUD_VALUE = 4;
    /**
     * <pre>
     *感知
     * </pre>
     *
     * <code>PERCEPTION = 5;</code>
     */
    public static final int PERCEPTION_VALUE = 5;
    /**
     * <pre>
     *轮角传感器
     * </pre>
     *
     * <code>WHEEL_ANGLE = 6;</code>
     */
    public static final int WHEEL_ANGLE_VALUE = 6;
    /**
     * <pre>
     *转向电机
     * </pre>
     *
     * <code>STEER_MOTOR = 7;</code>
     */
    public static final int STEER_MOTOR_VALUE = 7;
    /**
     * <pre>
     *控制器
     * </pre>
     *
     * <code>CONTROLLER = 8;</code>
     */
    public static final int CONTROLLER_VALUE = 8;
    /**
     * <pre>
     *GNSS 板卡型号
     * </pre>
     *
     * <code>GNSS_BOARD = 9;</code>
     */
    public static final int GNSS_BOARD_VALUE = 9;
    /**
     * <pre>
     *电台型号
     * </pre>
     *
     * <code>RADIO_BOARD = 10;</code>
     */
    public static final int RADIO_BOARD_VALUE = 10;
    /**
     * <pre>
     *TBOX
     * </pre>
     *
     * <code>TBOX = 11;</code>
     */
    public static final int TBOX_VALUE = 11;
    /**
     * <pre>
     *底盘型号
     * </pre>
     *
     * <code>HY_CHASSIS = 12;</code>
     */
    public static final int HY_CHASSIS_VALUE = 12;
    /**
     * <pre>
     *农机具
     * </pre>
     *
     * <code>IMPLEMENT = 13;</code>
     */
    public static final int IMPLEMENT_VALUE = 13;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static VersionModelType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static VersionModelType forNumber(int value) {
      switch (value) {
        case 0: return VERSION_NULL;
        case 1: return NCU;
        case 2: return MCU;
        case 3: return SYSTEM;
        case 4: return CLOUD;
        case 5: return PERCEPTION;
        case 6: return WHEEL_ANGLE;
        case 7: return STEER_MOTOR;
        case 8: return CONTROLLER;
        case 9: return GNSS_BOARD;
        case 10: return RADIO_BOARD;
        case 11: return TBOX;
        case 12: return HY_CHASSIS;
        case 13: return IMPLEMENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<VersionModelType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        VersionModelType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<VersionModelType>() {
            public VersionModelType findValueByNumber(int number) {
              return VersionModelType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.getDescriptor().getEnumTypes().get(7);
    }

    private static final VersionModelType[] VALUES = values();

    public static VersionModelType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private VersionModelType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelType)
  }

  /**
   * Protobuf enum {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationType}
   */
  public enum CalibrationType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TYPE_NULL = 0;</code>
     */
    TYPE_NULL(0),
    /**
     * <pre>
     * GNSS天线校准
     * </pre>
     *
     * <code>TYPE_GNSS_ANT = 1;</code>
     */
    TYPE_GNSS_ANT(1),
    /**
     * <pre>
     * 轮角校准
     * </pre>
     *
     * <code>TYPE_WHEEL_ANGLE = 2;</code>
     */
    TYPE_WHEEL_ANGLE(2),
    /**
     * <pre>
     * 转向电机校准
     * </pre>
     *
     * <code>TYPE_STEER_MOTOR = 3;</code>
     */
    TYPE_STEER_MOTOR(3),
    /**
     * <pre>
     * 液压转向校准
     * </pre>
     *
     * <code>TYPE_HYDRAULIC_STEER = 4;</code>
     */
    TYPE_HYDRAULIC_STEER(4),
    /**
     * <pre>
     * </pre>
     *
     * <code>TYPE_IMU = 5;</code>
     */
    TYPE_IMU(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>TYPE_NULL = 0;</code>
     */
    public static final int TYPE_NULL_VALUE = 0;
    /**
     * <pre>
     * GNSS天线校准
     * </pre>
     *
     * <code>TYPE_GNSS_ANT = 1;</code>
     */
    public static final int TYPE_GNSS_ANT_VALUE = 1;
    /**
     * <pre>
     * 轮角校准
     * </pre>
     *
     * <code>TYPE_WHEEL_ANGLE = 2;</code>
     */
    public static final int TYPE_WHEEL_ANGLE_VALUE = 2;
    /**
     * <pre>
     * 转向电机校准
     * </pre>
     *
     * <code>TYPE_STEER_MOTOR = 3;</code>
     */
    public static final int TYPE_STEER_MOTOR_VALUE = 3;
    /**
     * <pre>
     * 液压转向校准
     * </pre>
     *
     * <code>TYPE_HYDRAULIC_STEER = 4;</code>
     */
    public static final int TYPE_HYDRAULIC_STEER_VALUE = 4;
    /**
     * <pre>
     * </pre>
     *
     * <code>TYPE_IMU = 5;</code>
     */
    public static final int TYPE_IMU_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CalibrationType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CalibrationType forNumber(int value) {
      switch (value) {
        case 0: return TYPE_NULL;
        case 1: return TYPE_GNSS_ANT;
        case 2: return TYPE_WHEEL_ANGLE;
        case 3: return TYPE_STEER_MOTOR;
        case 4: return TYPE_HYDRAULIC_STEER;
        case 5: return TYPE_IMU;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CalibrationType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CalibrationType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CalibrationType>() {
            public CalibrationType findValueByNumber(int number) {
              return CalibrationType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.getDescriptor().getEnumTypes().get(8);
    }

    private static final CalibrationType[] VALUES = values();

    public static CalibrationType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CalibrationType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationType)
  }

  /**
   * Protobuf enum {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslationResponse}
   */
  public enum BaseLineTranslationResponse
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 无指令
     * </pre>
     *
     * <code>TRANS_NULL = 0;</code>
     */
    TRANS_NULL(0),
    /**
     * <pre>
     * 手动进行基准线平移 参数无效
     * </pre>
     *
     * <code>TRANS_ASSIGNED = 1;</code>
     */
    TRANS_ASSIGNED(1),
    /**
     * <pre>
     * 自动进行基准线平移 参数有效
     * </pre>
     *
     * <code>TRANS_UNASSIGNED = 2;</code>
     */
    TRANS_UNASSIGNED(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 无指令
     * </pre>
     *
     * <code>TRANS_NULL = 0;</code>
     */
    public static final int TRANS_NULL_VALUE = 0;
    /**
     * <pre>
     * 手动进行基准线平移 参数无效
     * </pre>
     *
     * <code>TRANS_ASSIGNED = 1;</code>
     */
    public static final int TRANS_ASSIGNED_VALUE = 1;
    /**
     * <pre>
     * 自动进行基准线平移 参数有效
     * </pre>
     *
     * <code>TRANS_UNASSIGNED = 2;</code>
     */
    public static final int TRANS_UNASSIGNED_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BaseLineTranslationResponse valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static BaseLineTranslationResponse forNumber(int value) {
      switch (value) {
        case 0: return TRANS_NULL;
        case 1: return TRANS_ASSIGNED;
        case 2: return TRANS_UNASSIGNED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BaseLineTranslationResponse>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BaseLineTranslationResponse> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BaseLineTranslationResponse>() {
            public BaseLineTranslationResponse findValueByNumber(int number) {
              return BaseLineTranslationResponse.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.getDescriptor().getEnumTypes().get(9);
    }

    private static final BaseLineTranslationResponse[] VALUES = values();

    public static BaseLineTranslationResponse valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private BaseLineTranslationResponse(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslationResponse)
  }

  /**
   * Protobuf enum {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLineResponse}
   */
  public enum TransferLineResponse
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TRANSFER_LINE_NULL = 0;</code>
     */
    TRANSFER_LINE_NULL(0),
    /**
     * <code>TRANSFER_LINE_ASSIGNED = 1;</code>
     */
    TRANSFER_LINE_ASSIGNED(1),
    /**
     * <code>TRANSFER_LINE_UNASSIGNED = 2;</code>
     */
    TRANSFER_LINE_UNASSIGNED(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>TRANSFER_LINE_NULL = 0;</code>
     */
    public static final int TRANSFER_LINE_NULL_VALUE = 0;
    /**
     * <code>TRANSFER_LINE_ASSIGNED = 1;</code>
     */
    public static final int TRANSFER_LINE_ASSIGNED_VALUE = 1;
    /**
     * <code>TRANSFER_LINE_UNASSIGNED = 2;</code>
     */
    public static final int TRANSFER_LINE_UNASSIGNED_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TransferLineResponse valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TransferLineResponse forNumber(int value) {
      switch (value) {
        case 0: return TRANSFER_LINE_NULL;
        case 1: return TRANSFER_LINE_ASSIGNED;
        case 2: return TRANSFER_LINE_UNASSIGNED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TransferLineResponse>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TransferLineResponse> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TransferLineResponse>() {
            public TransferLineResponse findValueByNumber(int number) {
              return TransferLineResponse.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.getDescriptor().getEnumTypes().get(10);
    }

    private static final TransferLineResponse[] VALUES = values();

    public static TransferLineResponse valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TransferLineResponse(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLineResponse)
  }

  /**
   * Protobuf enum {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTaskContinue}
   */
  public enum LastTaskContinue
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TASK_NULL = 0;</code>
     */
    TASK_NULL(0),
    /**
     * <pre>
     *任务继续
     * </pre>
     *
     * <code>TASK_CONTINUE = 1;</code>
     */
    TASK_CONTINUE(1),
    /**
     * <pre>
     *任务删除
     * </pre>
     *
     * <code>TASK_CANCEL = 2;</code>
     */
    TASK_CANCEL(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>TASK_NULL = 0;</code>
     */
    public static final int TASK_NULL_VALUE = 0;
    /**
     * <pre>
     *任务继续
     * </pre>
     *
     * <code>TASK_CONTINUE = 1;</code>
     */
    public static final int TASK_CONTINUE_VALUE = 1;
    /**
     * <pre>
     *任务删除
     * </pre>
     *
     * <code>TASK_CANCEL = 2;</code>
     */
    public static final int TASK_CANCEL_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LastTaskContinue valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LastTaskContinue forNumber(int value) {
      switch (value) {
        case 0: return TASK_NULL;
        case 1: return TASK_CONTINUE;
        case 2: return TASK_CANCEL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LastTaskContinue>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LastTaskContinue> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LastTaskContinue>() {
            public LastTaskContinue findValueByNumber(int number) {
              return LastTaskContinue.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.getDescriptor().getEnumTypes().get(11);
    }

    private static final LastTaskContinue[] VALUES = values();

    public static LastTaskContinue valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LastTaskContinue(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTaskContinue)
  }

  /**
   * Protobuf enum {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParamResponse}
   */
  public enum RouteParamResponse
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ROUTE_PARAM_NULL = 0;</code>
     */
    ROUTE_PARAM_NULL(0),
    /**
     * <code>ROUTE_PARAM_ASSIGNED = 1;</code>
     */
    ROUTE_PARAM_ASSIGNED(1),
    /**
     * <code>ROUTE_PARAM_UNASSIGNED = 2;</code>
     */
    ROUTE_PARAM_UNASSIGNED(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ROUTE_PARAM_NULL = 0;</code>
     */
    public static final int ROUTE_PARAM_NULL_VALUE = 0;
    /**
     * <code>ROUTE_PARAM_ASSIGNED = 1;</code>
     */
    public static final int ROUTE_PARAM_ASSIGNED_VALUE = 1;
    /**
     * <code>ROUTE_PARAM_UNASSIGNED = 2;</code>
     */
    public static final int ROUTE_PARAM_UNASSIGNED_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RouteParamResponse valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RouteParamResponse forNumber(int value) {
      switch (value) {
        case 0: return ROUTE_PARAM_NULL;
        case 1: return ROUTE_PARAM_ASSIGNED;
        case 2: return ROUTE_PARAM_UNASSIGNED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RouteParamResponse>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RouteParamResponse> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RouteParamResponse>() {
            public RouteParamResponse findValueByNumber(int number) {
              return RouteParamResponse.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.getDescriptor().getEnumTypes().get(12);
    }

    private static final RouteParamResponse[] VALUES = values();

    public static RouteParamResponse valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RouteParamResponse(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParamResponse)
  }

  public interface RemoteContrlMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eMessageType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eMessageType type = 1;</code>
     * @return The type.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eMessageType getType();

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest req = 2;</code>
     * @return Whether the req field is set.
     */
    boolean hasReq();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest req = 2;</code>
     * @return The req.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest getReq();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest req = 2;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequestOrBuilder getReqOrBuilder();

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse response = 3;</code>
     * @return Whether the response field is set.
     */
    boolean hasResponse();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse response = 3;</code>
     * @return The response.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse getResponse();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse response = 3;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponseOrBuilder getResponseOrBuilder();
  }
  /**
   * <pre>
   *############################################################################
   * </pre>
   *
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessage}
   */
  public static final class RemoteContrlMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessage)
      RemoteContrlMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RemoteContrlMessage.newBuilder() to construct.
    private RemoteContrlMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RemoteContrlMessage() {
      type_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RemoteContrlMessage();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RemoteContrlMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.Builder subBuilder = null;
              if (req_ != null) {
                subBuilder = req_.toBuilder();
              }
              req_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(req_);
                req_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.Builder subBuilder = null;
              if (response_ != null) {
                subBuilder = response_.toBuilder();
              }
              response_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(response_);
                response_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_RemoteContrlMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_RemoteContrlMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eMessageType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eMessageType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eMessageType getType() {
      @SuppressWarnings("deprecation")
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eMessageType result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eMessageType.valueOf(type_);
      return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eMessageType.UNRECOGNIZED : result;
    }

    public static final int REQ_FIELD_NUMBER = 2;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest req_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest req = 2;</code>
     * @return Whether the req field is set.
     */
    @java.lang.Override
    public boolean hasReq() {
      return req_ != null;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest req = 2;</code>
     * @return The req.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest getReq() {
      return req_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.getDefaultInstance() : req_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest req = 2;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequestOrBuilder getReqOrBuilder() {
      return getReq();
    }

    public static final int RESPONSE_FIELD_NUMBER = 3;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse response_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse response = 3;</code>
     * @return Whether the response field is set.
     */
    @java.lang.Override
    public boolean hasResponse() {
      return response_ != null;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse response = 3;</code>
     * @return The response.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse getResponse() {
      return response_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.getDefaultInstance() : response_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse response = 3;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponseOrBuilder getResponseOrBuilder() {
      return getResponse();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eMessageType.MSG_NULL.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (req_ != null) {
        output.writeMessage(2, getReq());
      }
      if (response_ != null) {
        output.writeMessage(3, getResponse());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eMessageType.MSG_NULL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (req_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getReq());
      }
      if (response_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getResponse());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage) obj;

      if (type_ != other.type_) return false;
      if (hasReq() != other.hasReq()) return false;
      if (hasReq()) {
        if (!getReq()
            .equals(other.getReq())) return false;
      }
      if (hasResponse() != other.hasResponse()) return false;
      if (hasResponse()) {
        if (!getResponse()
            .equals(other.getResponse())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (hasReq()) {
        hash = (37 * hash) + REQ_FIELD_NUMBER;
        hash = (53 * hash) + getReq().hashCode();
      }
      if (hasResponse()) {
        hash = (37 * hash) + RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + getResponse().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *############################################################################
     * </pre>
     *
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessage)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_RemoteContrlMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_RemoteContrlMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        if (reqBuilder_ == null) {
          req_ = null;
        } else {
          req_ = null;
          reqBuilder_ = null;
        }
        if (responseBuilder_ == null) {
          response_ = null;
        } else {
          response_ = null;
          responseBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_RemoteContrlMessage_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage(this);
        result.type_ = type_;
        if (reqBuilder_ == null) {
          result.req_ = req_;
        } else {
          result.req_ = reqBuilder_.build();
        }
        if (responseBuilder_ == null) {
          result.response_ = response_;
        } else {
          result.response_ = responseBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.hasReq()) {
          mergeReq(other.getReq());
        }
        if (other.hasResponse()) {
          mergeResponse(other.getResponse());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eMessageType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eMessageType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eMessageType type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eMessageType getType() {
        @SuppressWarnings("deprecation")
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eMessageType result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eMessageType.valueOf(type_);
        return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eMessageType.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eMessageType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eMessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eMessageType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest req_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequestOrBuilder> reqBuilder_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest req = 2;</code>
       * @return Whether the req field is set.
       */
      public boolean hasReq() {
        return reqBuilder_ != null || req_ != null;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest req = 2;</code>
       * @return The req.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest getReq() {
        if (reqBuilder_ == null) {
          return req_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.getDefaultInstance() : req_;
        } else {
          return reqBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest req = 2;</code>
       */
      public Builder setReq(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest value) {
        if (reqBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          req_ = value;
          onChanged();
        } else {
          reqBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest req = 2;</code>
       */
      public Builder setReq(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.Builder builderForValue) {
        if (reqBuilder_ == null) {
          req_ = builderForValue.build();
          onChanged();
        } else {
          reqBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest req = 2;</code>
       */
      public Builder mergeReq(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest value) {
        if (reqBuilder_ == null) {
          if (req_ != null) {
            req_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.newBuilder(req_).mergeFrom(value).buildPartial();
          } else {
            req_ = value;
          }
          onChanged();
        } else {
          reqBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest req = 2;</code>
       */
      public Builder clearReq() {
        if (reqBuilder_ == null) {
          req_ = null;
          onChanged();
        } else {
          req_ = null;
          reqBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest req = 2;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.Builder getReqBuilder() {
        
        onChanged();
        return getReqFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest req = 2;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequestOrBuilder getReqOrBuilder() {
        if (reqBuilder_ != null) {
          return reqBuilder_.getMessageOrBuilder();
        } else {
          return req_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.getDefaultInstance() : req_;
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest req = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequestOrBuilder> 
          getReqFieldBuilder() {
        if (reqBuilder_ == null) {
          reqBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequestOrBuilder>(
                  getReq(),
                  getParentForChildren(),
                  isClean());
          req_ = null;
        }
        return reqBuilder_;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse response_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponseOrBuilder> responseBuilder_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse response = 3;</code>
       * @return Whether the response field is set.
       */
      public boolean hasResponse() {
        return responseBuilder_ != null || response_ != null;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse response = 3;</code>
       * @return The response.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse getResponse() {
        if (responseBuilder_ == null) {
          return response_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.getDefaultInstance() : response_;
        } else {
          return responseBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse response = 3;</code>
       */
      public Builder setResponse(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse value) {
        if (responseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          response_ = value;
          onChanged();
        } else {
          responseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse response = 3;</code>
       */
      public Builder setResponse(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.Builder builderForValue) {
        if (responseBuilder_ == null) {
          response_ = builderForValue.build();
          onChanged();
        } else {
          responseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse response = 3;</code>
       */
      public Builder mergeResponse(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse value) {
        if (responseBuilder_ == null) {
          if (response_ != null) {
            response_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.newBuilder(response_).mergeFrom(value).buildPartial();
          } else {
            response_ = value;
          }
          onChanged();
        } else {
          responseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse response = 3;</code>
       */
      public Builder clearResponse() {
        if (responseBuilder_ == null) {
          response_ = null;
          onChanged();
        } else {
          response_ = null;
          responseBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse response = 3;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.Builder getResponseBuilder() {
        
        onChanged();
        return getResponseFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse response = 3;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponseOrBuilder getResponseOrBuilder() {
        if (responseBuilder_ != null) {
          return responseBuilder_.getMessageOrBuilder();
        } else {
          return response_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.getDefaultInstance() : response_;
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse response = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponseOrBuilder> 
          getResponseFieldBuilder() {
        if (responseBuilder_ == null) {
          responseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponseOrBuilder>(
                  getResponse(),
                  getParentForChildren(),
                  isClean());
          response_ = null;
        }
        return responseBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessage)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessage)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RemoteContrlMessage>
        PARSER = new com.google.protobuf.AbstractParser<RemoteContrlMessage>() {
      @java.lang.Override
      public RemoteContrlMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RemoteContrlMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RemoteContrlMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RemoteContrlMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RemoteContrlMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VehicleControlRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header header = 1;</code>
     * @return Whether the header field is set.
     */
    boolean hasHeader();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header header = 1;</code>
     * @return The header.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header getHeader();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header header = 1;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit control_units = 2;</code>
     */
    java.util.List<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit> 
        getControlUnitsList();
    /**
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit control_units = 2;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit getControlUnits(int index);
    /**
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit control_units = 2;</code>
     */
    int getControlUnitsCount();
    /**
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit control_units = 2;</code>
     */
    java.util.List<? extends com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnitOrBuilder> 
        getControlUnitsOrBuilderList();
    /**
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit control_units = 2;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnitOrBuilder getControlUnitsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest}
   */
  public static final class VehicleControlRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest)
      VehicleControlRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VehicleControlRequest.newBuilder() to construct.
    private VehicleControlRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VehicleControlRequest() {
      controlUnits_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new VehicleControlRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private VehicleControlRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                controlUnits_ = new java.util.ArrayList<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit>();
                mutable_bitField0_ |= 0x00000001;
              }
              controlUnits_.add(
                  input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          controlUnits_ = java.util.Collections.unmodifiableList(controlUnits_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.Builder.class);
    }

    public interface ControlUnitOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlType ctrlType = 1;</code>
       * @return The enum numeric value on the wire for ctrlType.
       */
      int getCtrlTypeValue();
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlType ctrlType = 1;</code>
       * @return The ctrlType.
       */
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlType getCtrlType();

      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CtrlValue ctrlValue = 2;</code>
       * @return Whether the ctrlValue field is set.
       */
      boolean hasCtrlValue();
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CtrlValue ctrlValue = 2;</code>
       * @return The ctrlValue.
       */
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue getCtrlValue();
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CtrlValue ctrlValue = 2;</code>
       */
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValueOrBuilder getCtrlValueOrBuilder();
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit}
     */
    public static final class ControlUnit extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit)
        ControlUnitOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ControlUnit.newBuilder() to construct.
      private ControlUnit(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ControlUnit() {
        ctrlType_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ControlUnit();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private ControlUnit(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int rawValue = input.readEnum();

                ctrlType_ = rawValue;
                break;
              }
              case 18: {
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue.Builder subBuilder = null;
                if (ctrlValue_ != null) {
                  subBuilder = ctrlValue_.toBuilder();
                }
                ctrlValue_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(ctrlValue_);
                  ctrlValue_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlRequest_ControlUnit_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlRequest_ControlUnit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit.Builder.class);
      }

      public static final int CTRLTYPE_FIELD_NUMBER = 1;
      private int ctrlType_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlType ctrlType = 1;</code>
       * @return The enum numeric value on the wire for ctrlType.
       */
      @java.lang.Override public int getCtrlTypeValue() {
        return ctrlType_;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlType ctrlType = 1;</code>
       * @return The ctrlType.
       */
      @java.lang.Override public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlType getCtrlType() {
        @SuppressWarnings("deprecation")
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlType result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlType.valueOf(ctrlType_);
        return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlType.UNRECOGNIZED : result;
      }

      public static final int CTRLVALUE_FIELD_NUMBER = 2;
      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue ctrlValue_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CtrlValue ctrlValue = 2;</code>
       * @return Whether the ctrlValue field is set.
       */
      @java.lang.Override
      public boolean hasCtrlValue() {
        return ctrlValue_ != null;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CtrlValue ctrlValue = 2;</code>
       * @return The ctrlValue.
       */
      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue getCtrlValue() {
        return ctrlValue_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue.getDefaultInstance() : ctrlValue_;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CtrlValue ctrlValue = 2;</code>
       */
      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValueOrBuilder getCtrlValueOrBuilder() {
        return getCtrlValue();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (ctrlType_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlType.CMD_NULL.getNumber()) {
          output.writeEnum(1, ctrlType_);
        }
        if (ctrlValue_ != null) {
          output.writeMessage(2, getCtrlValue());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (ctrlType_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlType.CMD_NULL.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, ctrlType_);
        }
        if (ctrlValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getCtrlValue());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit)) {
          return super.equals(obj);
        }
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit) obj;

        if (ctrlType_ != other.ctrlType_) return false;
        if (hasCtrlValue() != other.hasCtrlValue()) return false;
        if (hasCtrlValue()) {
          if (!getCtrlValue()
              .equals(other.getCtrlValue())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + CTRLTYPE_FIELD_NUMBER;
        hash = (53 * hash) + ctrlType_;
        if (hasCtrlValue()) {
          hash = (37 * hash) + CTRLVALUE_FIELD_NUMBER;
          hash = (53 * hash) + getCtrlValue().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit)
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnitOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlRequest_ControlUnit_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlRequest_ControlUnit_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit.Builder.class);
        }

        // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          ctrlType_ = 0;

          if (ctrlValueBuilder_ == null) {
            ctrlValue_ = null;
          } else {
            ctrlValue_ = null;
            ctrlValueBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlRequest_ControlUnit_descriptor;
        }

        @java.lang.Override
        public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit getDefaultInstanceForType() {
          return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit.getDefaultInstance();
        }

        @java.lang.Override
        public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit build() {
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit buildPartial() {
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit(this);
          result.ctrlType_ = ctrlType_;
          if (ctrlValueBuilder_ == null) {
            result.ctrlValue_ = ctrlValue_;
          } else {
            result.ctrlValue_ = ctrlValueBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit) {
            return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit other) {
          if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit.getDefaultInstance()) return this;
          if (other.ctrlType_ != 0) {
            setCtrlTypeValue(other.getCtrlTypeValue());
          }
          if (other.hasCtrlValue()) {
            mergeCtrlValue(other.getCtrlValue());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int ctrlType_ = 0;
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlType ctrlType = 1;</code>
         * @return The enum numeric value on the wire for ctrlType.
         */
        @java.lang.Override public int getCtrlTypeValue() {
          return ctrlType_;
        }
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlType ctrlType = 1;</code>
         * @param value The enum numeric value on the wire for ctrlType to set.
         * @return This builder for chaining.
         */
        public Builder setCtrlTypeValue(int value) {
          
          ctrlType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlType ctrlType = 1;</code>
         * @return The ctrlType.
         */
        @java.lang.Override
        public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlType getCtrlType() {
          @SuppressWarnings("deprecation")
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlType result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlType.valueOf(ctrlType_);
          return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlType.UNRECOGNIZED : result;
        }
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlType ctrlType = 1;</code>
         * @param value The ctrlType to set.
         * @return This builder for chaining.
         */
        public Builder setCtrlType(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          ctrlType_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlType ctrlType = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearCtrlType() {
          
          ctrlType_ = 0;
          onChanged();
          return this;
        }

        private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue ctrlValue_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValueOrBuilder> ctrlValueBuilder_;
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CtrlValue ctrlValue = 2;</code>
         * @return Whether the ctrlValue field is set.
         */
        public boolean hasCtrlValue() {
          return ctrlValueBuilder_ != null || ctrlValue_ != null;
        }
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CtrlValue ctrlValue = 2;</code>
         * @return The ctrlValue.
         */
        public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue getCtrlValue() {
          if (ctrlValueBuilder_ == null) {
            return ctrlValue_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue.getDefaultInstance() : ctrlValue_;
          } else {
            return ctrlValueBuilder_.getMessage();
          }
        }
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CtrlValue ctrlValue = 2;</code>
         */
        public Builder setCtrlValue(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue value) {
          if (ctrlValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ctrlValue_ = value;
            onChanged();
          } else {
            ctrlValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CtrlValue ctrlValue = 2;</code>
         */
        public Builder setCtrlValue(
            com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue.Builder builderForValue) {
          if (ctrlValueBuilder_ == null) {
            ctrlValue_ = builderForValue.build();
            onChanged();
          } else {
            ctrlValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CtrlValue ctrlValue = 2;</code>
         */
        public Builder mergeCtrlValue(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue value) {
          if (ctrlValueBuilder_ == null) {
            if (ctrlValue_ != null) {
              ctrlValue_ =
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue.newBuilder(ctrlValue_).mergeFrom(value).buildPartial();
            } else {
              ctrlValue_ = value;
            }
            onChanged();
          } else {
            ctrlValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CtrlValue ctrlValue = 2;</code>
         */
        public Builder clearCtrlValue() {
          if (ctrlValueBuilder_ == null) {
            ctrlValue_ = null;
            onChanged();
          } else {
            ctrlValue_ = null;
            ctrlValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CtrlValue ctrlValue = 2;</code>
         */
        public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue.Builder getCtrlValueBuilder() {
          
          onChanged();
          return getCtrlValueFieldBuilder().getBuilder();
        }
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CtrlValue ctrlValue = 2;</code>
         */
        public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValueOrBuilder getCtrlValueOrBuilder() {
          if (ctrlValueBuilder_ != null) {
            return ctrlValueBuilder_.getMessageOrBuilder();
          } else {
            return ctrlValue_ == null ?
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue.getDefaultInstance() : ctrlValue_;
          }
        }
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CtrlValue ctrlValue = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValueOrBuilder> 
            getCtrlValueFieldBuilder() {
          if (ctrlValueBuilder_ == null) {
            ctrlValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValueOrBuilder>(
                    getCtrlValue(),
                    getParentForChildren(),
                    isClean());
            ctrlValue_ = null;
          }
          return ctrlValueBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit)
      }

      // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit)
      private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit();
      }

      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ControlUnit>
          PARSER = new com.google.protobuf.AbstractParser<ControlUnit>() {
        @java.lang.Override
        public ControlUnit parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ControlUnit(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<ControlUnit> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ControlUnit> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int HEADER_FIELD_NUMBER = 1;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header header_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header header = 1;</code>
     * @return Whether the header field is set.
     */
    @java.lang.Override
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header header = 1;</code>
     * @return The header.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header getHeader() {
      return header_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.getDefaultInstance() : header_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header header = 1;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HeaderOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    public static final int CONTROL_UNITS_FIELD_NUMBER = 2;
    private java.util.List<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit> controlUnits_;
    /**
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit control_units = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit> getControlUnitsList() {
      return controlUnits_;
    }
    /**
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit control_units = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnitOrBuilder> 
        getControlUnitsOrBuilderList() {
      return controlUnits_;
    }
    /**
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit control_units = 2;</code>
     */
    @java.lang.Override
    public int getControlUnitsCount() {
      return controlUnits_.size();
    }
    /**
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit control_units = 2;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit getControlUnits(int index) {
      return controlUnits_.get(index);
    }
    /**
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit control_units = 2;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnitOrBuilder getControlUnitsOrBuilder(
        int index) {
      return controlUnits_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      for (int i = 0; i < controlUnits_.size(); i++) {
        output.writeMessage(2, controlUnits_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      for (int i = 0; i < controlUnits_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, controlUnits_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest) obj;

      if (hasHeader() != other.hasHeader()) return false;
      if (hasHeader()) {
        if (!getHeader()
            .equals(other.getHeader())) return false;
      }
      if (!getControlUnitsList()
          .equals(other.getControlUnitsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      if (getControlUnitsCount() > 0) {
        hash = (37 * hash) + CONTROL_UNITS_FIELD_NUMBER;
        hash = (53 * hash) + getControlUnitsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getControlUnitsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        if (controlUnitsBuilder_ == null) {
          controlUnits_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          controlUnitsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlRequest_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest(this);
        int from_bitField0_ = bitField0_;
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (controlUnitsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            controlUnits_ = java.util.Collections.unmodifiableList(controlUnits_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.controlUnits_ = controlUnits_;
        } else {
          result.controlUnits_ = controlUnitsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (controlUnitsBuilder_ == null) {
          if (!other.controlUnits_.isEmpty()) {
            if (controlUnits_.isEmpty()) {
              controlUnits_ = other.controlUnits_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureControlUnitsIsMutable();
              controlUnits_.addAll(other.controlUnits_);
            }
            onChanged();
          }
        } else {
          if (!other.controlUnits_.isEmpty()) {
            if (controlUnitsBuilder_.isEmpty()) {
              controlUnitsBuilder_.dispose();
              controlUnitsBuilder_ = null;
              controlUnits_ = other.controlUnits_;
              bitField0_ = (bitField0_ & ~0x00000001);
              controlUnitsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getControlUnitsFieldBuilder() : null;
            } else {
              controlUnitsBuilder_.addAllMessages(other.controlUnits_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header header_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HeaderOrBuilder> headerBuilder_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header header = 1;</code>
       * @return Whether the header field is set.
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header header = 1;</code>
       * @return The header.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header header = 1;</code>
       */
      public Builder setHeader(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header header = 1;</code>
       */
      public Builder setHeader(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header header = 1;</code>
       */
      public Builder mergeHeader(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header header = 1;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.Builder getHeaderBuilder() {
        
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header header = 1;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private java.util.List<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit> controlUnits_ =
        java.util.Collections.emptyList();
      private void ensureControlUnitsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          controlUnits_ = new java.util.ArrayList<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit>(controlUnits_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnitOrBuilder> controlUnitsBuilder_;

      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit control_units = 2;</code>
       */
      public java.util.List<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit> getControlUnitsList() {
        if (controlUnitsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(controlUnits_);
        } else {
          return controlUnitsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit control_units = 2;</code>
       */
      public int getControlUnitsCount() {
        if (controlUnitsBuilder_ == null) {
          return controlUnits_.size();
        } else {
          return controlUnitsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit control_units = 2;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit getControlUnits(int index) {
        if (controlUnitsBuilder_ == null) {
          return controlUnits_.get(index);
        } else {
          return controlUnitsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit control_units = 2;</code>
       */
      public Builder setControlUnits(
          int index, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit value) {
        if (controlUnitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureControlUnitsIsMutable();
          controlUnits_.set(index, value);
          onChanged();
        } else {
          controlUnitsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit control_units = 2;</code>
       */
      public Builder setControlUnits(
          int index, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit.Builder builderForValue) {
        if (controlUnitsBuilder_ == null) {
          ensureControlUnitsIsMutable();
          controlUnits_.set(index, builderForValue.build());
          onChanged();
        } else {
          controlUnitsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit control_units = 2;</code>
       */
      public Builder addControlUnits(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit value) {
        if (controlUnitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureControlUnitsIsMutable();
          controlUnits_.add(value);
          onChanged();
        } else {
          controlUnitsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit control_units = 2;</code>
       */
      public Builder addControlUnits(
          int index, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit value) {
        if (controlUnitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureControlUnitsIsMutable();
          controlUnits_.add(index, value);
          onChanged();
        } else {
          controlUnitsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit control_units = 2;</code>
       */
      public Builder addControlUnits(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit.Builder builderForValue) {
        if (controlUnitsBuilder_ == null) {
          ensureControlUnitsIsMutable();
          controlUnits_.add(builderForValue.build());
          onChanged();
        } else {
          controlUnitsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit control_units = 2;</code>
       */
      public Builder addControlUnits(
          int index, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit.Builder builderForValue) {
        if (controlUnitsBuilder_ == null) {
          ensureControlUnitsIsMutable();
          controlUnits_.add(index, builderForValue.build());
          onChanged();
        } else {
          controlUnitsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit control_units = 2;</code>
       */
      public Builder addAllControlUnits(
          java.lang.Iterable<? extends com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit> values) {
        if (controlUnitsBuilder_ == null) {
          ensureControlUnitsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, controlUnits_);
          onChanged();
        } else {
          controlUnitsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit control_units = 2;</code>
       */
      public Builder clearControlUnits() {
        if (controlUnitsBuilder_ == null) {
          controlUnits_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          controlUnitsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit control_units = 2;</code>
       */
      public Builder removeControlUnits(int index) {
        if (controlUnitsBuilder_ == null) {
          ensureControlUnitsIsMutable();
          controlUnits_.remove(index);
          onChanged();
        } else {
          controlUnitsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit control_units = 2;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit.Builder getControlUnitsBuilder(
          int index) {
        return getControlUnitsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit control_units = 2;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnitOrBuilder getControlUnitsOrBuilder(
          int index) {
        if (controlUnitsBuilder_ == null) {
          return controlUnits_.get(index);  } else {
          return controlUnitsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit control_units = 2;</code>
       */
      public java.util.List<? extends com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnitOrBuilder> 
           getControlUnitsOrBuilderList() {
        if (controlUnitsBuilder_ != null) {
          return controlUnitsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(controlUnits_);
        }
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit control_units = 2;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit.Builder addControlUnitsBuilder() {
        return getControlUnitsFieldBuilder().addBuilder(
            com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit.getDefaultInstance());
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit control_units = 2;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit.Builder addControlUnitsBuilder(
          int index) {
        return getControlUnitsFieldBuilder().addBuilder(
            index, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit.getDefaultInstance());
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest.ControlUnit control_units = 2;</code>
       */
      public java.util.List<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit.Builder> 
           getControlUnitsBuilderList() {
        return getControlUnitsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnitOrBuilder> 
          getControlUnitsFieldBuilder() {
        if (controlUnitsBuilder_ == null) {
          controlUnitsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnit.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest.ControlUnitOrBuilder>(
                  controlUnits_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          controlUnits_ = null;
        }
        return controlUnitsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlRequest)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VehicleControlRequest>
        PARSER = new com.google.protobuf.AbstractParser<VehicleControlRequest>() {
      @java.lang.Override
      public VehicleControlRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VehicleControlRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VehicleControlRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VehicleControlRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VehicleControlResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header header = 1;</code>
     * @return Whether the header field is set.
     */
    boolean hasHeader();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header header = 1;</code>
     * @return The header.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header getHeader();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header header = 1;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit control_result_units = 2;</code>
     */
    java.util.List<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit> 
        getControlResultUnitsList();
    /**
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit control_result_units = 2;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit getControlResultUnits(int index);
    /**
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit control_result_units = 2;</code>
     */
    int getControlResultUnitsCount();
    /**
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit control_result_units = 2;</code>
     */
    java.util.List<? extends com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnitOrBuilder> 
        getControlResultUnitsOrBuilderList();
    /**
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit control_result_units = 2;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnitOrBuilder getControlResultUnitsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse}
   */
  public static final class VehicleControlResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse)
      VehicleControlResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VehicleControlResponse.newBuilder() to construct.
    private VehicleControlResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VehicleControlResponse() {
      controlResultUnits_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new VehicleControlResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private VehicleControlResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                controlResultUnits_ = new java.util.ArrayList<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit>();
                mutable_bitField0_ |= 0x00000001;
              }
              controlResultUnits_.add(
                  input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          controlResultUnits_ = java.util.Collections.unmodifiableList(controlResultUnits_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.Builder.class);
    }

    public interface ControlResultUnitOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlType ctrlType = 1;</code>
       * @return The enum numeric value on the wire for ctrlType.
       */
      int getCtrlTypeValue();
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlType ctrlType = 1;</code>
       * @return The ctrlType.
       */
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlType getCtrlType();

      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ResponseValue resValue = 2;</code>
       * @return Whether the resValue field is set.
       */
      boolean hasResValue();
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ResponseValue resValue = 2;</code>
       * @return The resValue.
       */
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue getResValue();
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ResponseValue resValue = 2;</code>
       */
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValueOrBuilder getResValueOrBuilder();

      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlRespType respType = 3;</code>
       * @return The enum numeric value on the wire for respType.
       */
      int getRespTypeValue();
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlRespType respType = 3;</code>
       * @return The respType.
       */
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlRespType getRespType();
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit}
     */
    public static final class ControlResultUnit extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit)
        ControlResultUnitOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ControlResultUnit.newBuilder() to construct.
      private ControlResultUnit(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ControlResultUnit() {
        ctrlType_ = 0;
        respType_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ControlResultUnit();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private ControlResultUnit(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int rawValue = input.readEnum();

                ctrlType_ = rawValue;
                break;
              }
              case 18: {
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue.Builder subBuilder = null;
                if (resValue_ != null) {
                  subBuilder = resValue_.toBuilder();
                }
                resValue_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(resValue_);
                  resValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 24: {
                int rawValue = input.readEnum();

                respType_ = rawValue;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlResponse_ControlResultUnit_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlResponse_ControlResultUnit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit.Builder.class);
      }

      public static final int CTRLTYPE_FIELD_NUMBER = 1;
      private int ctrlType_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlType ctrlType = 1;</code>
       * @return The enum numeric value on the wire for ctrlType.
       */
      @java.lang.Override public int getCtrlTypeValue() {
        return ctrlType_;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlType ctrlType = 1;</code>
       * @return The ctrlType.
       */
      @java.lang.Override public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlType getCtrlType() {
        @SuppressWarnings("deprecation")
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlType result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlType.valueOf(ctrlType_);
        return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlType.UNRECOGNIZED : result;
      }

      public static final int RESVALUE_FIELD_NUMBER = 2;
      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue resValue_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ResponseValue resValue = 2;</code>
       * @return Whether the resValue field is set.
       */
      @java.lang.Override
      public boolean hasResValue() {
        return resValue_ != null;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ResponseValue resValue = 2;</code>
       * @return The resValue.
       */
      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue getResValue() {
        return resValue_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue.getDefaultInstance() : resValue_;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ResponseValue resValue = 2;</code>
       */
      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValueOrBuilder getResValueOrBuilder() {
        return getResValue();
      }

      public static final int RESPTYPE_FIELD_NUMBER = 3;
      private int respType_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlRespType respType = 3;</code>
       * @return The enum numeric value on the wire for respType.
       */
      @java.lang.Override public int getRespTypeValue() {
        return respType_;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlRespType respType = 3;</code>
       * @return The respType.
       */
      @java.lang.Override public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlRespType getRespType() {
        @SuppressWarnings("deprecation")
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlRespType result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlRespType.valueOf(respType_);
        return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlRespType.UNRECOGNIZED : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (ctrlType_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlType.CMD_NULL.getNumber()) {
          output.writeEnum(1, ctrlType_);
        }
        if (resValue_ != null) {
          output.writeMessage(2, getResValue());
        }
        if (respType_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlRespType.RESP_NONE.getNumber()) {
          output.writeEnum(3, respType_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (ctrlType_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlType.CMD_NULL.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, ctrlType_);
        }
        if (resValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getResValue());
        }
        if (respType_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlRespType.RESP_NONE.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, respType_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit)) {
          return super.equals(obj);
        }
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit) obj;

        if (ctrlType_ != other.ctrlType_) return false;
        if (hasResValue() != other.hasResValue()) return false;
        if (hasResValue()) {
          if (!getResValue()
              .equals(other.getResValue())) return false;
        }
        if (respType_ != other.respType_) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + CTRLTYPE_FIELD_NUMBER;
        hash = (53 * hash) + ctrlType_;
        if (hasResValue()) {
          hash = (37 * hash) + RESVALUE_FIELD_NUMBER;
          hash = (53 * hash) + getResValue().hashCode();
        }
        hash = (37 * hash) + RESPTYPE_FIELD_NUMBER;
        hash = (53 * hash) + respType_;
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit)
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnitOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlResponse_ControlResultUnit_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlResponse_ControlResultUnit_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit.Builder.class);
        }

        // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          ctrlType_ = 0;

          if (resValueBuilder_ == null) {
            resValue_ = null;
          } else {
            resValue_ = null;
            resValueBuilder_ = null;
          }
          respType_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlResponse_ControlResultUnit_descriptor;
        }

        @java.lang.Override
        public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit getDefaultInstanceForType() {
          return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit.getDefaultInstance();
        }

        @java.lang.Override
        public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit build() {
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit buildPartial() {
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit(this);
          result.ctrlType_ = ctrlType_;
          if (resValueBuilder_ == null) {
            result.resValue_ = resValue_;
          } else {
            result.resValue_ = resValueBuilder_.build();
          }
          result.respType_ = respType_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit) {
            return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit other) {
          if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit.getDefaultInstance()) return this;
          if (other.ctrlType_ != 0) {
            setCtrlTypeValue(other.getCtrlTypeValue());
          }
          if (other.hasResValue()) {
            mergeResValue(other.getResValue());
          }
          if (other.respType_ != 0) {
            setRespTypeValue(other.getRespTypeValue());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int ctrlType_ = 0;
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlType ctrlType = 1;</code>
         * @return The enum numeric value on the wire for ctrlType.
         */
        @java.lang.Override public int getCtrlTypeValue() {
          return ctrlType_;
        }
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlType ctrlType = 1;</code>
         * @param value The enum numeric value on the wire for ctrlType to set.
         * @return This builder for chaining.
         */
        public Builder setCtrlTypeValue(int value) {
          
          ctrlType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlType ctrlType = 1;</code>
         * @return The ctrlType.
         */
        @java.lang.Override
        public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlType getCtrlType() {
          @SuppressWarnings("deprecation")
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlType result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlType.valueOf(ctrlType_);
          return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlType.UNRECOGNIZED : result;
        }
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlType ctrlType = 1;</code>
         * @param value The ctrlType to set.
         * @return This builder for chaining.
         */
        public Builder setCtrlType(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          ctrlType_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlType ctrlType = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearCtrlType() {
          
          ctrlType_ = 0;
          onChanged();
          return this;
        }

        private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue resValue_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValueOrBuilder> resValueBuilder_;
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ResponseValue resValue = 2;</code>
         * @return Whether the resValue field is set.
         */
        public boolean hasResValue() {
          return resValueBuilder_ != null || resValue_ != null;
        }
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ResponseValue resValue = 2;</code>
         * @return The resValue.
         */
        public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue getResValue() {
          if (resValueBuilder_ == null) {
            return resValue_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue.getDefaultInstance() : resValue_;
          } else {
            return resValueBuilder_.getMessage();
          }
        }
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ResponseValue resValue = 2;</code>
         */
        public Builder setResValue(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue value) {
          if (resValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            resValue_ = value;
            onChanged();
          } else {
            resValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ResponseValue resValue = 2;</code>
         */
        public Builder setResValue(
            com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue.Builder builderForValue) {
          if (resValueBuilder_ == null) {
            resValue_ = builderForValue.build();
            onChanged();
          } else {
            resValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ResponseValue resValue = 2;</code>
         */
        public Builder mergeResValue(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue value) {
          if (resValueBuilder_ == null) {
            if (resValue_ != null) {
              resValue_ =
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue.newBuilder(resValue_).mergeFrom(value).buildPartial();
            } else {
              resValue_ = value;
            }
            onChanged();
          } else {
            resValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ResponseValue resValue = 2;</code>
         */
        public Builder clearResValue() {
          if (resValueBuilder_ == null) {
            resValue_ = null;
            onChanged();
          } else {
            resValue_ = null;
            resValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ResponseValue resValue = 2;</code>
         */
        public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue.Builder getResValueBuilder() {
          
          onChanged();
          return getResValueFieldBuilder().getBuilder();
        }
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ResponseValue resValue = 2;</code>
         */
        public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValueOrBuilder getResValueOrBuilder() {
          if (resValueBuilder_ != null) {
            return resValueBuilder_.getMessageOrBuilder();
          } else {
            return resValue_ == null ?
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue.getDefaultInstance() : resValue_;
          }
        }
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ResponseValue resValue = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValueOrBuilder> 
            getResValueFieldBuilder() {
          if (resValueBuilder_ == null) {
            resValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValueOrBuilder>(
                    getResValue(),
                    getParentForChildren(),
                    isClean());
            resValue_ = null;
          }
          return resValueBuilder_;
        }

        private int respType_ = 0;
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlRespType respType = 3;</code>
         * @return The enum numeric value on the wire for respType.
         */
        @java.lang.Override public int getRespTypeValue() {
          return respType_;
        }
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlRespType respType = 3;</code>
         * @param value The enum numeric value on the wire for respType to set.
         * @return This builder for chaining.
         */
        public Builder setRespTypeValue(int value) {
          
          respType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlRespType respType = 3;</code>
         * @return The respType.
         */
        @java.lang.Override
        public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlRespType getRespType() {
          @SuppressWarnings("deprecation")
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlRespType result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlRespType.valueOf(respType_);
          return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlRespType.UNRECOGNIZED : result;
        }
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlRespType respType = 3;</code>
         * @param value The respType to set.
         * @return This builder for chaining.
         */
        public Builder setRespType(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.eCtrlRespType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          respType_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.eCtrlRespType respType = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearRespType() {
          
          respType_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit)
      }

      // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit)
      private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit();
      }

      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ControlResultUnit>
          PARSER = new com.google.protobuf.AbstractParser<ControlResultUnit>() {
        @java.lang.Override
        public ControlResultUnit parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ControlResultUnit(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<ControlResultUnit> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ControlResultUnit> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int HEADER_FIELD_NUMBER = 1;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header header_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header header = 1;</code>
     * @return Whether the header field is set.
     */
    @java.lang.Override
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header header = 1;</code>
     * @return The header.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header getHeader() {
      return header_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.getDefaultInstance() : header_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header header = 1;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HeaderOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    public static final int CONTROL_RESULT_UNITS_FIELD_NUMBER = 2;
    private java.util.List<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit> controlResultUnits_;
    /**
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit control_result_units = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit> getControlResultUnitsList() {
      return controlResultUnits_;
    }
    /**
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit control_result_units = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnitOrBuilder> 
        getControlResultUnitsOrBuilderList() {
      return controlResultUnits_;
    }
    /**
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit control_result_units = 2;</code>
     */
    @java.lang.Override
    public int getControlResultUnitsCount() {
      return controlResultUnits_.size();
    }
    /**
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit control_result_units = 2;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit getControlResultUnits(int index) {
      return controlResultUnits_.get(index);
    }
    /**
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit control_result_units = 2;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnitOrBuilder getControlResultUnitsOrBuilder(
        int index) {
      return controlResultUnits_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      for (int i = 0; i < controlResultUnits_.size(); i++) {
        output.writeMessage(2, controlResultUnits_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      for (int i = 0; i < controlResultUnits_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, controlResultUnits_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse) obj;

      if (hasHeader() != other.hasHeader()) return false;
      if (hasHeader()) {
        if (!getHeader()
            .equals(other.getHeader())) return false;
      }
      if (!getControlResultUnitsList()
          .equals(other.getControlResultUnitsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      if (getControlResultUnitsCount() > 0) {
        hash = (37 * hash) + CONTROL_RESULT_UNITS_FIELD_NUMBER;
        hash = (53 * hash) + getControlResultUnitsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getControlResultUnitsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        if (controlResultUnitsBuilder_ == null) {
          controlResultUnits_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          controlResultUnitsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlResponse_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse(this);
        int from_bitField0_ = bitField0_;
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (controlResultUnitsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            controlResultUnits_ = java.util.Collections.unmodifiableList(controlResultUnits_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.controlResultUnits_ = controlResultUnits_;
        } else {
          result.controlResultUnits_ = controlResultUnitsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (controlResultUnitsBuilder_ == null) {
          if (!other.controlResultUnits_.isEmpty()) {
            if (controlResultUnits_.isEmpty()) {
              controlResultUnits_ = other.controlResultUnits_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureControlResultUnitsIsMutable();
              controlResultUnits_.addAll(other.controlResultUnits_);
            }
            onChanged();
          }
        } else {
          if (!other.controlResultUnits_.isEmpty()) {
            if (controlResultUnitsBuilder_.isEmpty()) {
              controlResultUnitsBuilder_.dispose();
              controlResultUnitsBuilder_ = null;
              controlResultUnits_ = other.controlResultUnits_;
              bitField0_ = (bitField0_ & ~0x00000001);
              controlResultUnitsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getControlResultUnitsFieldBuilder() : null;
            } else {
              controlResultUnitsBuilder_.addAllMessages(other.controlResultUnits_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header header_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HeaderOrBuilder> headerBuilder_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header header = 1;</code>
       * @return Whether the header field is set.
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header header = 1;</code>
       * @return The header.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header header = 1;</code>
       */
      public Builder setHeader(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header header = 1;</code>
       */
      public Builder setHeader(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header header = 1;</code>
       */
      public Builder mergeHeader(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header header = 1;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.Builder getHeaderBuilder() {
        
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header header = 1;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private java.util.List<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit> controlResultUnits_ =
        java.util.Collections.emptyList();
      private void ensureControlResultUnitsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          controlResultUnits_ = new java.util.ArrayList<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit>(controlResultUnits_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnitOrBuilder> controlResultUnitsBuilder_;

      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit control_result_units = 2;</code>
       */
      public java.util.List<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit> getControlResultUnitsList() {
        if (controlResultUnitsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(controlResultUnits_);
        } else {
          return controlResultUnitsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit control_result_units = 2;</code>
       */
      public int getControlResultUnitsCount() {
        if (controlResultUnitsBuilder_ == null) {
          return controlResultUnits_.size();
        } else {
          return controlResultUnitsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit control_result_units = 2;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit getControlResultUnits(int index) {
        if (controlResultUnitsBuilder_ == null) {
          return controlResultUnits_.get(index);
        } else {
          return controlResultUnitsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit control_result_units = 2;</code>
       */
      public Builder setControlResultUnits(
          int index, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit value) {
        if (controlResultUnitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureControlResultUnitsIsMutable();
          controlResultUnits_.set(index, value);
          onChanged();
        } else {
          controlResultUnitsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit control_result_units = 2;</code>
       */
      public Builder setControlResultUnits(
          int index, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit.Builder builderForValue) {
        if (controlResultUnitsBuilder_ == null) {
          ensureControlResultUnitsIsMutable();
          controlResultUnits_.set(index, builderForValue.build());
          onChanged();
        } else {
          controlResultUnitsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit control_result_units = 2;</code>
       */
      public Builder addControlResultUnits(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit value) {
        if (controlResultUnitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureControlResultUnitsIsMutable();
          controlResultUnits_.add(value);
          onChanged();
        } else {
          controlResultUnitsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit control_result_units = 2;</code>
       */
      public Builder addControlResultUnits(
          int index, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit value) {
        if (controlResultUnitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureControlResultUnitsIsMutable();
          controlResultUnits_.add(index, value);
          onChanged();
        } else {
          controlResultUnitsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit control_result_units = 2;</code>
       */
      public Builder addControlResultUnits(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit.Builder builderForValue) {
        if (controlResultUnitsBuilder_ == null) {
          ensureControlResultUnitsIsMutable();
          controlResultUnits_.add(builderForValue.build());
          onChanged();
        } else {
          controlResultUnitsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit control_result_units = 2;</code>
       */
      public Builder addControlResultUnits(
          int index, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit.Builder builderForValue) {
        if (controlResultUnitsBuilder_ == null) {
          ensureControlResultUnitsIsMutable();
          controlResultUnits_.add(index, builderForValue.build());
          onChanged();
        } else {
          controlResultUnitsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit control_result_units = 2;</code>
       */
      public Builder addAllControlResultUnits(
          java.lang.Iterable<? extends com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit> values) {
        if (controlResultUnitsBuilder_ == null) {
          ensureControlResultUnitsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, controlResultUnits_);
          onChanged();
        } else {
          controlResultUnitsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit control_result_units = 2;</code>
       */
      public Builder clearControlResultUnits() {
        if (controlResultUnitsBuilder_ == null) {
          controlResultUnits_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          controlResultUnitsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit control_result_units = 2;</code>
       */
      public Builder removeControlResultUnits(int index) {
        if (controlResultUnitsBuilder_ == null) {
          ensureControlResultUnitsIsMutable();
          controlResultUnits_.remove(index);
          onChanged();
        } else {
          controlResultUnitsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit control_result_units = 2;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit.Builder getControlResultUnitsBuilder(
          int index) {
        return getControlResultUnitsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit control_result_units = 2;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnitOrBuilder getControlResultUnitsOrBuilder(
          int index) {
        if (controlResultUnitsBuilder_ == null) {
          return controlResultUnits_.get(index);  } else {
          return controlResultUnitsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit control_result_units = 2;</code>
       */
      public java.util.List<? extends com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnitOrBuilder> 
           getControlResultUnitsOrBuilderList() {
        if (controlResultUnitsBuilder_ != null) {
          return controlResultUnitsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(controlResultUnits_);
        }
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit control_result_units = 2;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit.Builder addControlResultUnitsBuilder() {
        return getControlResultUnitsFieldBuilder().addBuilder(
            com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit.getDefaultInstance());
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit control_result_units = 2;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit.Builder addControlResultUnitsBuilder(
          int index) {
        return getControlResultUnitsFieldBuilder().addBuilder(
            index, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit.getDefaultInstance());
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse.ControlResultUnit control_result_units = 2;</code>
       */
      public java.util.List<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit.Builder> 
           getControlResultUnitsBuilderList() {
        return getControlResultUnitsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnitOrBuilder> 
          getControlResultUnitsFieldBuilder() {
        if (controlResultUnitsBuilder_ == null) {
          controlResultUnitsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnit.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse.ControlResultUnitOrBuilder>(
                  controlResultUnits_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          controlResultUnits_ = null;
        }
        return controlResultUnitsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VehicleControlResponse)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VehicleControlResponse>
        PARSER = new com.google.protobuf.AbstractParser<VehicleControlResponse>() {
      @java.lang.Override
      public VehicleControlResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VehicleControlResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VehicleControlResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VehicleControlResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VehicleControlResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *数据上报协议版本信息
     * </pre>
     *
     * <code>uint32 version = 1;</code>
     * @return The version.
     */
    int getVersion();

    /**
     * <pre>
     *时间戳，精确到ms
     * </pre>
     *
     * <code>uint64 unix_timestamp = 2;</code>
     * @return The unixTimestamp.
     */
    long getUnixTimestamp();

    /**
     * <pre>
     *消息序列号
     * </pre>
     *
     * <code>int32 seq = 3;</code>
     * @return The seq.
     */
    int getSeq();

    /**
     * <code>int32 session_id = 4;</code>
     * @return The sessionId.
     */
    int getSessionId();

    /**
     * <code>string task_id = 5;</code>
     * @return The taskId.
     */
    java.lang.String getTaskId();
    /**
     * <code>string task_id = 5;</code>
     * @return The bytes for taskId.
     */
    com.google.protobuf.ByteString
        getTaskIdBytes();

    /**
     * <code>string message_id = 6;</code>
     * @return The messageId.
     */
    java.lang.String getMessageId();
    /**
     * <code>string message_id = 6;</code>
     * @return The bytes for messageId.
     */
    com.google.protobuf.ByteString
        getMessageIdBytes();

    /**
     * <code>string operate_id = 7;</code>
     * @return The operateId.
     */
    java.lang.String getOperateId();
    /**
     * <code>string operate_id = 7;</code>
     * @return The bytes for operateId.
     */
    com.google.protobuf.ByteString
        getOperateIdBytes();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header}
   */
  public static final class Header extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header)
      HeaderOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Header.newBuilder() to construct.
    private Header(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Header() {
      taskId_ = "";
      messageId_ = "";
      operateId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Header();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Header(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              version_ = input.readUInt32();
              break;
            }
            case 16: {

              unixTimestamp_ = input.readUInt64();
              break;
            }
            case 24: {

              seq_ = input.readInt32();
              break;
            }
            case 32: {

              sessionId_ = input.readInt32();
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              taskId_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              messageId_ = s;
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              operateId_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Header_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Header_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.Builder.class);
    }

    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <pre>
     *数据上报协议版本信息
     * </pre>
     *
     * <code>uint32 version = 1;</code>
     * @return The version.
     */
    @java.lang.Override
    public int getVersion() {
      return version_;
    }

    public static final int UNIX_TIMESTAMP_FIELD_NUMBER = 2;
    private long unixTimestamp_;
    /**
     * <pre>
     *时间戳，精确到ms
     * </pre>
     *
     * <code>uint64 unix_timestamp = 2;</code>
     * @return The unixTimestamp.
     */
    @java.lang.Override
    public long getUnixTimestamp() {
      return unixTimestamp_;
    }

    public static final int SEQ_FIELD_NUMBER = 3;
    private int seq_;
    /**
     * <pre>
     *消息序列号
     * </pre>
     *
     * <code>int32 seq = 3;</code>
     * @return The seq.
     */
    @java.lang.Override
    public int getSeq() {
      return seq_;
    }

    public static final int SESSION_ID_FIELD_NUMBER = 4;
    private int sessionId_;
    /**
     * <code>int32 session_id = 4;</code>
     * @return The sessionId.
     */
    @java.lang.Override
    public int getSessionId() {
      return sessionId_;
    }

    public static final int TASK_ID_FIELD_NUMBER = 5;
    private volatile java.lang.Object taskId_;
    /**
     * <code>string task_id = 5;</code>
     * @return The taskId.
     */
    @java.lang.Override
    public java.lang.String getTaskId() {
      java.lang.Object ref = taskId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        taskId_ = s;
        return s;
      }
    }
    /**
     * <code>string task_id = 5;</code>
     * @return The bytes for taskId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTaskIdBytes() {
      java.lang.Object ref = taskId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        taskId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MESSAGE_ID_FIELD_NUMBER = 6;
    private volatile java.lang.Object messageId_;
    /**
     * <code>string message_id = 6;</code>
     * @return The messageId.
     */
    @java.lang.Override
    public java.lang.String getMessageId() {
      java.lang.Object ref = messageId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        messageId_ = s;
        return s;
      }
    }
    /**
     * <code>string message_id = 6;</code>
     * @return The bytes for messageId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMessageIdBytes() {
      java.lang.Object ref = messageId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        messageId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OPERATE_ID_FIELD_NUMBER = 7;
    private volatile java.lang.Object operateId_;
    /**
     * <code>string operate_id = 7;</code>
     * @return The operateId.
     */
    @java.lang.Override
    public java.lang.String getOperateId() {
      java.lang.Object ref = operateId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        operateId_ = s;
        return s;
      }
    }
    /**
     * <code>string operate_id = 7;</code>
     * @return The bytes for operateId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOperateIdBytes() {
      java.lang.Object ref = operateId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        operateId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (version_ != 0) {
        output.writeUInt32(1, version_);
      }
      if (unixTimestamp_ != 0L) {
        output.writeUInt64(2, unixTimestamp_);
      }
      if (seq_ != 0) {
        output.writeInt32(3, seq_);
      }
      if (sessionId_ != 0) {
        output.writeInt32(4, sessionId_);
      }
      if (!getTaskIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, taskId_);
      }
      if (!getMessageIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, messageId_);
      }
      if (!getOperateIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, operateId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (version_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, version_);
      }
      if (unixTimestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, unixTimestamp_);
      }
      if (seq_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, seq_);
      }
      if (sessionId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, sessionId_);
      }
      if (!getTaskIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, taskId_);
      }
      if (!getMessageIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, messageId_);
      }
      if (!getOperateIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, operateId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header) obj;

      if (getVersion()
          != other.getVersion()) return false;
      if (getUnixTimestamp()
          != other.getUnixTimestamp()) return false;
      if (getSeq()
          != other.getSeq()) return false;
      if (getSessionId()
          != other.getSessionId()) return false;
      if (!getTaskId()
          .equals(other.getTaskId())) return false;
      if (!getMessageId()
          .equals(other.getMessageId())) return false;
      if (!getOperateId()
          .equals(other.getOperateId())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion();
      hash = (37 * hash) + UNIX_TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getUnixTimestamp());
      hash = (37 * hash) + SEQ_FIELD_NUMBER;
      hash = (53 * hash) + getSeq();
      hash = (37 * hash) + SESSION_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSessionId();
      hash = (37 * hash) + TASK_ID_FIELD_NUMBER;
      hash = (53 * hash) + getTaskId().hashCode();
      hash = (37 * hash) + MESSAGE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getMessageId().hashCode();
      hash = (37 * hash) + OPERATE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getOperateId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Header_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Header_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        version_ = 0;

        unixTimestamp_ = 0L;

        seq_ = 0;

        sessionId_ = 0;

        taskId_ = "";

        messageId_ = "";

        operateId_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Header_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header(this);
        result.version_ = version_;
        result.unixTimestamp_ = unixTimestamp_;
        result.seq_ = seq_;
        result.sessionId_ = sessionId_;
        result.taskId_ = taskId_;
        result.messageId_ = messageId_;
        result.operateId_ = operateId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.getDefaultInstance()) return this;
        if (other.getVersion() != 0) {
          setVersion(other.getVersion());
        }
        if (other.getUnixTimestamp() != 0L) {
          setUnixTimestamp(other.getUnixTimestamp());
        }
        if (other.getSeq() != 0) {
          setSeq(other.getSeq());
        }
        if (other.getSessionId() != 0) {
          setSessionId(other.getSessionId());
        }
        if (!other.getTaskId().isEmpty()) {
          taskId_ = other.taskId_;
          onChanged();
        }
        if (!other.getMessageId().isEmpty()) {
          messageId_ = other.messageId_;
          onChanged();
        }
        if (!other.getOperateId().isEmpty()) {
          operateId_ = other.operateId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int version_ ;
      /**
       * <pre>
       *数据上报协议版本信息
       * </pre>
       *
       * <code>uint32 version = 1;</code>
       * @return The version.
       */
      @java.lang.Override
      public int getVersion() {
        return version_;
      }
      /**
       * <pre>
       *数据上报协议版本信息
       * </pre>
       *
       * <code>uint32 version = 1;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(int value) {
        
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *数据上报协议版本信息
       * </pre>
       *
       * <code>uint32 version = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = 0;
        onChanged();
        return this;
      }

      private long unixTimestamp_ ;
      /**
       * <pre>
       *时间戳，精确到ms
       * </pre>
       *
       * <code>uint64 unix_timestamp = 2;</code>
       * @return The unixTimestamp.
       */
      @java.lang.Override
      public long getUnixTimestamp() {
        return unixTimestamp_;
      }
      /**
       * <pre>
       *时间戳，精确到ms
       * </pre>
       *
       * <code>uint64 unix_timestamp = 2;</code>
       * @param value The unixTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setUnixTimestamp(long value) {
        
        unixTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *时间戳，精确到ms
       * </pre>
       *
       * <code>uint64 unix_timestamp = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearUnixTimestamp() {
        
        unixTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private int seq_ ;
      /**
       * <pre>
       *消息序列号
       * </pre>
       *
       * <code>int32 seq = 3;</code>
       * @return The seq.
       */
      @java.lang.Override
      public int getSeq() {
        return seq_;
      }
      /**
       * <pre>
       *消息序列号
       * </pre>
       *
       * <code>int32 seq = 3;</code>
       * @param value The seq to set.
       * @return This builder for chaining.
       */
      public Builder setSeq(int value) {
        
        seq_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息序列号
       * </pre>
       *
       * <code>int32 seq = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSeq() {
        
        seq_ = 0;
        onChanged();
        return this;
      }

      private int sessionId_ ;
      /**
       * <code>int32 session_id = 4;</code>
       * @return The sessionId.
       */
      @java.lang.Override
      public int getSessionId() {
        return sessionId_;
      }
      /**
       * <code>int32 session_id = 4;</code>
       * @param value The sessionId to set.
       * @return This builder for chaining.
       */
      public Builder setSessionId(int value) {
        
        sessionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 session_id = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSessionId() {
        
        sessionId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object taskId_ = "";
      /**
       * <code>string task_id = 5;</code>
       * @return The taskId.
       */
      public java.lang.String getTaskId() {
        java.lang.Object ref = taskId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          taskId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string task_id = 5;</code>
       * @return The bytes for taskId.
       */
      public com.google.protobuf.ByteString
          getTaskIdBytes() {
        java.lang.Object ref = taskId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          taskId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string task_id = 5;</code>
       * @param value The taskId to set.
       * @return This builder for chaining.
       */
      public Builder setTaskId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        taskId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string task_id = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearTaskId() {
        
        taskId_ = getDefaultInstance().getTaskId();
        onChanged();
        return this;
      }
      /**
       * <code>string task_id = 5;</code>
       * @param value The bytes for taskId to set.
       * @return This builder for chaining.
       */
      public Builder setTaskIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        taskId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object messageId_ = "";
      /**
       * <code>string message_id = 6;</code>
       * @return The messageId.
       */
      public java.lang.String getMessageId() {
        java.lang.Object ref = messageId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          messageId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string message_id = 6;</code>
       * @return The bytes for messageId.
       */
      public com.google.protobuf.ByteString
          getMessageIdBytes() {
        java.lang.Object ref = messageId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          messageId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string message_id = 6;</code>
       * @param value The messageId to set.
       * @return This builder for chaining.
       */
      public Builder setMessageId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        messageId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string message_id = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearMessageId() {
        
        messageId_ = getDefaultInstance().getMessageId();
        onChanged();
        return this;
      }
      /**
       * <code>string message_id = 6;</code>
       * @param value The bytes for messageId to set.
       * @return This builder for chaining.
       */
      public Builder setMessageIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        messageId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object operateId_ = "";
      /**
       * <code>string operate_id = 7;</code>
       * @return The operateId.
       */
      public java.lang.String getOperateId() {
        java.lang.Object ref = operateId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          operateId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string operate_id = 7;</code>
       * @return The bytes for operateId.
       */
      public com.google.protobuf.ByteString
          getOperateIdBytes() {
        java.lang.Object ref = operateId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          operateId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string operate_id = 7;</code>
       * @param value The operateId to set.
       * @return This builder for chaining.
       */
      public Builder setOperateId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        operateId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string operate_id = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearOperateId() {
        
        operateId_ = getDefaultInstance().getOperateId();
        onChanged();
        return this;
      }
      /**
       * <code>string operate_id = 7;</code>
       * @param value The bytes for operateId to set.
       * @return This builder for chaining.
       */
      public Builder setOperateIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        operateId_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Header>
        PARSER = new com.google.protobuf.AbstractParser<Header>() {
      @java.lang.Override
      public Header parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Header(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Header> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Header> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CtrlValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CtrlValue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 设置自动驾驶指令
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutopilotCmd autopilot_cmd = 1;</code>
     * @return The enum numeric value on the wire for autopilotCmd.
     */
    int getAutopilotCmdValue();
    /**
     * <pre>
     * 设置自动驾驶指令
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutopilotCmd autopilot_cmd = 1;</code>
     * @return The autopilotCmd.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutopilotCmd getAutopilotCmd();

    /**
     * <pre>
     * 设置工作模式 STANDLONE MASTER SLAVE 
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkMode work_mode = 2;</code>
     * @return The enum numeric value on the wire for workMode.
     */
    int getWorkModeValue();
    /**
     * <pre>
     * 设置工作模式 STANDLONE MASTER SLAVE 
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkMode work_mode = 2;</code>
     * @return The workMode.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkMode getWorkMode();

    /**
     * <pre>
     * 设置交互模式 CLOUD
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiType hmi_type = 3;</code>
     * @return The enum numeric value on the wire for hmiType.
     */
    int getHmiTypeValue();
    /**
     * <pre>
     * 设置交互模式 CLOUD
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiType hmi_type = 3;</code>
     * @return The hmiType.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiType getHmiType();

    /**
     * <pre>
     * 检查是否可以更新路径
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath update_route_path = 5;</code>
     * @return Whether the updateRoutePath field is set.
     */
    boolean hasUpdateRoutePath();
    /**
     * <pre>
     * 检查是否可以更新路径
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath update_route_path = 5;</code>
     * @return The updateRoutePath.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath getUpdateRoutePath();
    /**
     * <pre>
     * 检查是否可以更新路径
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath update_route_path = 5;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathOrBuilder getUpdateRoutePathOrBuilder();

    /**
     * <pre>
     * 设置全局路径
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath route_path = 6;</code>
     * @return Whether the routePath field is set.
     */
    boolean hasRoutePath();
    /**
     * <pre>
     * 设置全局路径
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath route_path = 6;</code>
     * @return The routePath.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath getRoutePath();
    /**
     * <pre>
     * 设置全局路径
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath route_path = 6;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePathOrBuilder getRoutePathOrBuilder();

    /**
     * <pre>
     * 设置规划关键参数（包括AB/ABCD）
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 7;</code>
     * @return Whether the routeParam field is set.
     */
    boolean hasRouteParam();
    /**
     * <pre>
     * 设置规划关键参数（包括AB/ABCD）
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 7;</code>
     * @return The routeParam.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam getRouteParam();
    /**
     * <pre>
     * 设置规划关键参数（包括AB/ABCD）
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 7;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamOrBuilder getRouteParamOrBuilder();

    /**
     * <pre>
     * 设置基准线平移
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation base_line_translation = 12;</code>
     * @return Whether the baseLineTranslation field is set.
     */
    boolean hasBaseLineTranslation();
    /**
     * <pre>
     * 设置基准线平移
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation base_line_translation = 12;</code>
     * @return The baseLineTranslation.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation getBaseLineTranslation();
    /**
     * <pre>
     * 设置基准线平移
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation base_line_translation = 12;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslationOrBuilder getBaseLineTranslationOrBuilder();

    /**
     * <pre>
     * 设置交接行
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLine transfer_line = 13;</code>
     * @return Whether the transferLine field is set.
     */
    boolean hasTransferLine();
    /**
     * <pre>
     * 设置交接行
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLine transfer_line = 13;</code>
     * @return The transferLine.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine getTransferLine();
    /**
     * <pre>
     * 设置交接行
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLine transfer_line = 13;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLineOrBuilder getTransferLineOrBuilder();

    /**
     * <pre>
     * 配置参数
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam set_config_param = 15;</code>
     * @return Whether the setConfigParam field is set.
     */
    boolean hasSetConfigParam();
    /**
     * <pre>
     * 配置参数
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam set_config_param = 15;</code>
     * @return The setConfigParam.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam getSetConfigParam();
    /**
     * <pre>
     * 配置参数
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam set_config_param = 15;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParamOrBuilder getSetConfigParamOrBuilder();

    /**
     * <pre>
     * 请求版本信息
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelType version_model_type = 16;</code>
     * @return The enum numeric value on the wire for versionModelType.
     */
    int getVersionModelTypeValue();
    /**
     * <pre>
     * 请求版本信息
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelType version_model_type = 16;</code>
     * @return The versionModelType.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelType getVersionModelType();

    /**
     * <pre>
     * 请求NCU配置参数
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigType req_config_param_type = 18;</code>
     * @return The enum numeric value on the wire for reqConfigParamType.
     */
    int getReqConfigParamTypeValue();
    /**
     * <pre>
     * 请求NCU配置参数
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigType req_config_param_type = 18;</code>
     * @return The reqConfigParamType.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigType getReqConfigParamType();

    /**
     * <pre>
     * 手动控制
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl manual_control = 20;</code>
     * @return Whether the manualControl field is set.
     */
    boolean hasManualControl();
    /**
     * <pre>
     * 手动控制
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl manual_control = 20;</code>
     * @return The manualControl.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl getManualControl();
    /**
     * <pre>
     * 手动控制
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl manual_control = 20;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlOrBuilder getManualControlOrBuilder();

    /**
     * <pre>
     * 传感器校准
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Calibration calibration = 21;</code>
     * @return Whether the calibration field is set.
     */
    boolean hasCalibration();
    /**
     * <pre>
     * 传感器校准
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Calibration calibration = 21;</code>
     * @return The calibration.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration getCalibration();
    /**
     * <pre>
     * 传感器校准
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Calibration calibration = 21;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationOrBuilder getCalibrationOrBuilder();

    /**
     * <pre>
     * TBOX参数设置，详见参数设置表
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSet tbox_set_parm = 40;</code>
     * @return Whether the tboxSetParm field is set.
     */
    boolean hasTboxSetParm();
    /**
     * <pre>
     * TBOX参数设置，详见参数设置表
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSet tbox_set_parm = 40;</code>
     * @return The tboxSetParm.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet getTboxSetParm();
    /**
     * <pre>
     * TBOX参数设置，详见参数设置表
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSet tbox_set_parm = 40;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetOrBuilder getTboxSetParmOrBuilder();

    /**
     * <pre>
     * TBOX参数查询
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGet tbox_get_parm = 41;</code>
     * @return Whether the tboxGetParm field is set.
     */
    boolean hasTboxGetParm();
    /**
     * <pre>
     * TBOX参数查询
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGet tbox_get_parm = 41;</code>
     * @return The tboxGetParm.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet getTboxGetParm();
    /**
     * <pre>
     * TBOX参数查询
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGet tbox_get_parm = 41;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetOrBuilder getTboxGetParmOrBuilder();

    /**
     * <pre>
     * 确认是否继续上一任务  NCU-&gt;交互终端
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTask last_task = 50;</code>
     * @return Whether the lastTask field is set.
     */
    boolean hasLastTask();
    /**
     * <pre>
     * 确认是否继续上一任务  NCU-&gt;交互终端
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTask last_task = 50;</code>
     * @return The lastTask.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask getLastTask();
    /**
     * <pre>
     * 确认是否继续上一任务  NCU-&gt;交互终端
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTask last_task = 50;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTaskOrBuilder getLastTaskOrBuilder();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CtrlValue}
   */
  public static final class CtrlValue extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CtrlValue)
      CtrlValueOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CtrlValue.newBuilder() to construct.
    private CtrlValue(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CtrlValue() {
      autopilotCmd_ = 0;
      workMode_ = 0;
      hmiType_ = 0;
      versionModelType_ = 0;
      reqConfigParamType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CtrlValue();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CtrlValue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              autopilotCmd_ = rawValue;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              workMode_ = rawValue;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              hmiType_ = rawValue;
              break;
            }
            case 42: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.Builder subBuilder = null;
              if (updateRoutePath_ != null) {
                subBuilder = updateRoutePath_.toBuilder();
              }
              updateRoutePath_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(updateRoutePath_);
                updateRoutePath_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.Builder subBuilder = null;
              if (routePath_ != null) {
                subBuilder = routePath_.toBuilder();
              }
              routePath_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(routePath_);
                routePath_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.Builder subBuilder = null;
              if (routeParam_ != null) {
                subBuilder = routeParam_.toBuilder();
              }
              routeParam_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(routeParam_);
                routeParam_ = subBuilder.buildPartial();
              }

              break;
            }
            case 98: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.Builder subBuilder = null;
              if (baseLineTranslation_ != null) {
                subBuilder = baseLineTranslation_.toBuilder();
              }
              baseLineTranslation_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(baseLineTranslation_);
                baseLineTranslation_ = subBuilder.buildPartial();
              }

              break;
            }
            case 106: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine.Builder subBuilder = null;
              if (transferLine_ != null) {
                subBuilder = transferLine_.toBuilder();
              }
              transferLine_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(transferLine_);
                transferLine_ = subBuilder.buildPartial();
              }

              break;
            }
            case 122: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam.Builder subBuilder = null;
              if (setConfigParam_ != null) {
                subBuilder = setConfigParam_.toBuilder();
              }
              setConfigParam_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(setConfigParam_);
                setConfigParam_ = subBuilder.buildPartial();
              }

              break;
            }
            case 128: {
              int rawValue = input.readEnum();

              versionModelType_ = rawValue;
              break;
            }
            case 144: {
              int rawValue = input.readEnum();

              reqConfigParamType_ = rawValue;
              break;
            }
            case 162: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.Builder subBuilder = null;
              if (manualControl_ != null) {
                subBuilder = manualControl_.toBuilder();
              }
              manualControl_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(manualControl_);
                manualControl_ = subBuilder.buildPartial();
              }

              break;
            }
            case 170: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration.Builder subBuilder = null;
              if (calibration_ != null) {
                subBuilder = calibration_.toBuilder();
              }
              calibration_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(calibration_);
                calibration_ = subBuilder.buildPartial();
              }

              break;
            }
            case 322: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet.Builder subBuilder = null;
              if (tboxSetParm_ != null) {
                subBuilder = tboxSetParm_.toBuilder();
              }
              tboxSetParm_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tboxSetParm_);
                tboxSetParm_ = subBuilder.buildPartial();
              }

              break;
            }
            case 330: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet.Builder subBuilder = null;
              if (tboxGetParm_ != null) {
                subBuilder = tboxGetParm_.toBuilder();
              }
              tboxGetParm_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tboxGetParm_);
                tboxGetParm_ = subBuilder.buildPartial();
              }

              break;
            }
            case 402: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask.Builder subBuilder = null;
              if (lastTask_ != null) {
                subBuilder = lastTask_.toBuilder();
              }
              lastTask_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(lastTask_);
                lastTask_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_CtrlValue_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_CtrlValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue.Builder.class);
    }

    public static final int AUTOPILOT_CMD_FIELD_NUMBER = 1;
    private int autopilotCmd_;
    /**
     * <pre>
     * 设置自动驾驶指令
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutopilotCmd autopilot_cmd = 1;</code>
     * @return The enum numeric value on the wire for autopilotCmd.
     */
    @java.lang.Override public int getAutopilotCmdValue() {
      return autopilotCmd_;
    }
    /**
     * <pre>
     * 设置自动驾驶指令
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutopilotCmd autopilot_cmd = 1;</code>
     * @return The autopilotCmd.
     */
    @java.lang.Override public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutopilotCmd getAutopilotCmd() {
      @SuppressWarnings("deprecation")
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutopilotCmd result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutopilotCmd.valueOf(autopilotCmd_);
      return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutopilotCmd.UNRECOGNIZED : result;
    }

    public static final int WORK_MODE_FIELD_NUMBER = 2;
    private int workMode_;
    /**
     * <pre>
     * 设置工作模式 STANDLONE MASTER SLAVE 
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkMode work_mode = 2;</code>
     * @return The enum numeric value on the wire for workMode.
     */
    @java.lang.Override public int getWorkModeValue() {
      return workMode_;
    }
    /**
     * <pre>
     * 设置工作模式 STANDLONE MASTER SLAVE 
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkMode work_mode = 2;</code>
     * @return The workMode.
     */
    @java.lang.Override public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkMode getWorkMode() {
      @SuppressWarnings("deprecation")
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkMode result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkMode.valueOf(workMode_);
      return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkMode.UNRECOGNIZED : result;
    }

    public static final int HMI_TYPE_FIELD_NUMBER = 3;
    private int hmiType_;
    /**
     * <pre>
     * 设置交互模式 CLOUD
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiType hmi_type = 3;</code>
     * @return The enum numeric value on the wire for hmiType.
     */
    @java.lang.Override public int getHmiTypeValue() {
      return hmiType_;
    }
    /**
     * <pre>
     * 设置交互模式 CLOUD
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiType hmi_type = 3;</code>
     * @return The hmiType.
     */
    @java.lang.Override public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiType getHmiType() {
      @SuppressWarnings("deprecation")
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiType result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiType.valueOf(hmiType_);
      return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiType.UNRECOGNIZED : result;
    }

    public static final int UPDATE_ROUTE_PATH_FIELD_NUMBER = 5;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath updateRoutePath_;
    /**
     * <pre>
     * 检查是否可以更新路径
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath update_route_path = 5;</code>
     * @return Whether the updateRoutePath field is set.
     */
    @java.lang.Override
    public boolean hasUpdateRoutePath() {
      return updateRoutePath_ != null;
    }
    /**
     * <pre>
     * 检查是否可以更新路径
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath update_route_path = 5;</code>
     * @return The updateRoutePath.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath getUpdateRoutePath() {
      return updateRoutePath_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.getDefaultInstance() : updateRoutePath_;
    }
    /**
     * <pre>
     * 检查是否可以更新路径
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath update_route_path = 5;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathOrBuilder getUpdateRoutePathOrBuilder() {
      return getUpdateRoutePath();
    }

    public static final int ROUTE_PATH_FIELD_NUMBER = 6;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath routePath_;
    /**
     * <pre>
     * 设置全局路径
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath route_path = 6;</code>
     * @return Whether the routePath field is set.
     */
    @java.lang.Override
    public boolean hasRoutePath() {
      return routePath_ != null;
    }
    /**
     * <pre>
     * 设置全局路径
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath route_path = 6;</code>
     * @return The routePath.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath getRoutePath() {
      return routePath_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.getDefaultInstance() : routePath_;
    }
    /**
     * <pre>
     * 设置全局路径
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath route_path = 6;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePathOrBuilder getRoutePathOrBuilder() {
      return getRoutePath();
    }

    public static final int ROUTE_PARAM_FIELD_NUMBER = 7;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam routeParam_;
    /**
     * <pre>
     * 设置规划关键参数（包括AB/ABCD）
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 7;</code>
     * @return Whether the routeParam field is set.
     */
    @java.lang.Override
    public boolean hasRouteParam() {
      return routeParam_ != null;
    }
    /**
     * <pre>
     * 设置规划关键参数（包括AB/ABCD）
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 7;</code>
     * @return The routeParam.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam getRouteParam() {
      return routeParam_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.getDefaultInstance() : routeParam_;
    }
    /**
     * <pre>
     * 设置规划关键参数（包括AB/ABCD）
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 7;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamOrBuilder getRouteParamOrBuilder() {
      return getRouteParam();
    }

    public static final int BASE_LINE_TRANSLATION_FIELD_NUMBER = 12;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation baseLineTranslation_;
    /**
     * <pre>
     * 设置基准线平移
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation base_line_translation = 12;</code>
     * @return Whether the baseLineTranslation field is set.
     */
    @java.lang.Override
    public boolean hasBaseLineTranslation() {
      return baseLineTranslation_ != null;
    }
    /**
     * <pre>
     * 设置基准线平移
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation base_line_translation = 12;</code>
     * @return The baseLineTranslation.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation getBaseLineTranslation() {
      return baseLineTranslation_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.getDefaultInstance() : baseLineTranslation_;
    }
    /**
     * <pre>
     * 设置基准线平移
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation base_line_translation = 12;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslationOrBuilder getBaseLineTranslationOrBuilder() {
      return getBaseLineTranslation();
    }

    public static final int TRANSFER_LINE_FIELD_NUMBER = 13;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine transferLine_;
    /**
     * <pre>
     * 设置交接行
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLine transfer_line = 13;</code>
     * @return Whether the transferLine field is set.
     */
    @java.lang.Override
    public boolean hasTransferLine() {
      return transferLine_ != null;
    }
    /**
     * <pre>
     * 设置交接行
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLine transfer_line = 13;</code>
     * @return The transferLine.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine getTransferLine() {
      return transferLine_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine.getDefaultInstance() : transferLine_;
    }
    /**
     * <pre>
     * 设置交接行
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLine transfer_line = 13;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLineOrBuilder getTransferLineOrBuilder() {
      return getTransferLine();
    }

    public static final int SET_CONFIG_PARAM_FIELD_NUMBER = 15;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam setConfigParam_;
    /**
     * <pre>
     * 配置参数
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam set_config_param = 15;</code>
     * @return Whether the setConfigParam field is set.
     */
    @java.lang.Override
    public boolean hasSetConfigParam() {
      return setConfigParam_ != null;
    }
    /**
     * <pre>
     * 配置参数
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam set_config_param = 15;</code>
     * @return The setConfigParam.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam getSetConfigParam() {
      return setConfigParam_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam.getDefaultInstance() : setConfigParam_;
    }
    /**
     * <pre>
     * 配置参数
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam set_config_param = 15;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParamOrBuilder getSetConfigParamOrBuilder() {
      return getSetConfigParam();
    }

    public static final int VERSION_MODEL_TYPE_FIELD_NUMBER = 16;
    private int versionModelType_;
    /**
     * <pre>
     * 请求版本信息
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelType version_model_type = 16;</code>
     * @return The enum numeric value on the wire for versionModelType.
     */
    @java.lang.Override public int getVersionModelTypeValue() {
      return versionModelType_;
    }
    /**
     * <pre>
     * 请求版本信息
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelType version_model_type = 16;</code>
     * @return The versionModelType.
     */
    @java.lang.Override public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelType getVersionModelType() {
      @SuppressWarnings("deprecation")
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelType result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelType.valueOf(versionModelType_);
      return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelType.UNRECOGNIZED : result;
    }

    public static final int REQ_CONFIG_PARAM_TYPE_FIELD_NUMBER = 18;
    private int reqConfigParamType_;
    /**
     * <pre>
     * 请求NCU配置参数
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigType req_config_param_type = 18;</code>
     * @return The enum numeric value on the wire for reqConfigParamType.
     */
    @java.lang.Override public int getReqConfigParamTypeValue() {
      return reqConfigParamType_;
    }
    /**
     * <pre>
     * 请求NCU配置参数
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigType req_config_param_type = 18;</code>
     * @return The reqConfigParamType.
     */
    @java.lang.Override public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigType getReqConfigParamType() {
      @SuppressWarnings("deprecation")
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigType result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigType.valueOf(reqConfigParamType_);
      return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigType.UNRECOGNIZED : result;
    }

    public static final int MANUAL_CONTROL_FIELD_NUMBER = 20;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl manualControl_;
    /**
     * <pre>
     * 手动控制
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl manual_control = 20;</code>
     * @return Whether the manualControl field is set.
     */
    @java.lang.Override
    public boolean hasManualControl() {
      return manualControl_ != null;
    }
    /**
     * <pre>
     * 手动控制
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl manual_control = 20;</code>
     * @return The manualControl.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl getManualControl() {
      return manualControl_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.getDefaultInstance() : manualControl_;
    }
    /**
     * <pre>
     * 手动控制
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl manual_control = 20;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlOrBuilder getManualControlOrBuilder() {
      return getManualControl();
    }

    public static final int CALIBRATION_FIELD_NUMBER = 21;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration calibration_;
    /**
     * <pre>
     * 传感器校准
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Calibration calibration = 21;</code>
     * @return Whether the calibration field is set.
     */
    @java.lang.Override
    public boolean hasCalibration() {
      return calibration_ != null;
    }
    /**
     * <pre>
     * 传感器校准
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Calibration calibration = 21;</code>
     * @return The calibration.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration getCalibration() {
      return calibration_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration.getDefaultInstance() : calibration_;
    }
    /**
     * <pre>
     * 传感器校准
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Calibration calibration = 21;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationOrBuilder getCalibrationOrBuilder() {
      return getCalibration();
    }

    public static final int TBOX_SET_PARM_FIELD_NUMBER = 40;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet tboxSetParm_;
    /**
     * <pre>
     * TBOX参数设置，详见参数设置表
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSet tbox_set_parm = 40;</code>
     * @return Whether the tboxSetParm field is set.
     */
    @java.lang.Override
    public boolean hasTboxSetParm() {
      return tboxSetParm_ != null;
    }
    /**
     * <pre>
     * TBOX参数设置，详见参数设置表
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSet tbox_set_parm = 40;</code>
     * @return The tboxSetParm.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet getTboxSetParm() {
      return tboxSetParm_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet.getDefaultInstance() : tboxSetParm_;
    }
    /**
     * <pre>
     * TBOX参数设置，详见参数设置表
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSet tbox_set_parm = 40;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetOrBuilder getTboxSetParmOrBuilder() {
      return getTboxSetParm();
    }

    public static final int TBOX_GET_PARM_FIELD_NUMBER = 41;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet tboxGetParm_;
    /**
     * <pre>
     * TBOX参数查询
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGet tbox_get_parm = 41;</code>
     * @return Whether the tboxGetParm field is set.
     */
    @java.lang.Override
    public boolean hasTboxGetParm() {
      return tboxGetParm_ != null;
    }
    /**
     * <pre>
     * TBOX参数查询
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGet tbox_get_parm = 41;</code>
     * @return The tboxGetParm.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet getTboxGetParm() {
      return tboxGetParm_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet.getDefaultInstance() : tboxGetParm_;
    }
    /**
     * <pre>
     * TBOX参数查询
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGet tbox_get_parm = 41;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetOrBuilder getTboxGetParmOrBuilder() {
      return getTboxGetParm();
    }

    public static final int LAST_TASK_FIELD_NUMBER = 50;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask lastTask_;
    /**
     * <pre>
     * 确认是否继续上一任务  NCU-&gt;交互终端
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTask last_task = 50;</code>
     * @return Whether the lastTask field is set.
     */
    @java.lang.Override
    public boolean hasLastTask() {
      return lastTask_ != null;
    }
    /**
     * <pre>
     * 确认是否继续上一任务  NCU-&gt;交互终端
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTask last_task = 50;</code>
     * @return The lastTask.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask getLastTask() {
      return lastTask_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask.getDefaultInstance() : lastTask_;
    }
    /**
     * <pre>
     * 确认是否继续上一任务  NCU-&gt;交互终端
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTask last_task = 50;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTaskOrBuilder getLastTaskOrBuilder() {
      return getLastTask();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (autopilotCmd_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutopilotCmd.AUTOPILOT_NULL.getNumber()) {
        output.writeEnum(1, autopilotCmd_);
      }
      if (workMode_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkMode.WORK_MODE_NULL.getNumber()) {
        output.writeEnum(2, workMode_);
      }
      if (hmiType_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiType.HMI_NULL.getNumber()) {
        output.writeEnum(3, hmiType_);
      }
      if (updateRoutePath_ != null) {
        output.writeMessage(5, getUpdateRoutePath());
      }
      if (routePath_ != null) {
        output.writeMessage(6, getRoutePath());
      }
      if (routeParam_ != null) {
        output.writeMessage(7, getRouteParam());
      }
      if (baseLineTranslation_ != null) {
        output.writeMessage(12, getBaseLineTranslation());
      }
      if (transferLine_ != null) {
        output.writeMessage(13, getTransferLine());
      }
      if (setConfigParam_ != null) {
        output.writeMessage(15, getSetConfigParam());
      }
      if (versionModelType_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelType.VERSION_NULL.getNumber()) {
        output.writeEnum(16, versionModelType_);
      }
      if (reqConfigParamType_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigType.CFG_NULL.getNumber()) {
        output.writeEnum(18, reqConfigParamType_);
      }
      if (manualControl_ != null) {
        output.writeMessage(20, getManualControl());
      }
      if (calibration_ != null) {
        output.writeMessage(21, getCalibration());
      }
      if (tboxSetParm_ != null) {
        output.writeMessage(40, getTboxSetParm());
      }
      if (tboxGetParm_ != null) {
        output.writeMessage(41, getTboxGetParm());
      }
      if (lastTask_ != null) {
        output.writeMessage(50, getLastTask());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (autopilotCmd_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutopilotCmd.AUTOPILOT_NULL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, autopilotCmd_);
      }
      if (workMode_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkMode.WORK_MODE_NULL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, workMode_);
      }
      if (hmiType_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiType.HMI_NULL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, hmiType_);
      }
      if (updateRoutePath_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getUpdateRoutePath());
      }
      if (routePath_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getRoutePath());
      }
      if (routeParam_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getRouteParam());
      }
      if (baseLineTranslation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getBaseLineTranslation());
      }
      if (transferLine_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getTransferLine());
      }
      if (setConfigParam_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getSetConfigParam());
      }
      if (versionModelType_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelType.VERSION_NULL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(16, versionModelType_);
      }
      if (reqConfigParamType_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigType.CFG_NULL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(18, reqConfigParamType_);
      }
      if (manualControl_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, getManualControl());
      }
      if (calibration_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, getCalibration());
      }
      if (tboxSetParm_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(40, getTboxSetParm());
      }
      if (tboxGetParm_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(41, getTboxGetParm());
      }
      if (lastTask_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(50, getLastTask());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue) obj;

      if (autopilotCmd_ != other.autopilotCmd_) return false;
      if (workMode_ != other.workMode_) return false;
      if (hmiType_ != other.hmiType_) return false;
      if (hasUpdateRoutePath() != other.hasUpdateRoutePath()) return false;
      if (hasUpdateRoutePath()) {
        if (!getUpdateRoutePath()
            .equals(other.getUpdateRoutePath())) return false;
      }
      if (hasRoutePath() != other.hasRoutePath()) return false;
      if (hasRoutePath()) {
        if (!getRoutePath()
            .equals(other.getRoutePath())) return false;
      }
      if (hasRouteParam() != other.hasRouteParam()) return false;
      if (hasRouteParam()) {
        if (!getRouteParam()
            .equals(other.getRouteParam())) return false;
      }
      if (hasBaseLineTranslation() != other.hasBaseLineTranslation()) return false;
      if (hasBaseLineTranslation()) {
        if (!getBaseLineTranslation()
            .equals(other.getBaseLineTranslation())) return false;
      }
      if (hasTransferLine() != other.hasTransferLine()) return false;
      if (hasTransferLine()) {
        if (!getTransferLine()
            .equals(other.getTransferLine())) return false;
      }
      if (hasSetConfigParam() != other.hasSetConfigParam()) return false;
      if (hasSetConfigParam()) {
        if (!getSetConfigParam()
            .equals(other.getSetConfigParam())) return false;
      }
      if (versionModelType_ != other.versionModelType_) return false;
      if (reqConfigParamType_ != other.reqConfigParamType_) return false;
      if (hasManualControl() != other.hasManualControl()) return false;
      if (hasManualControl()) {
        if (!getManualControl()
            .equals(other.getManualControl())) return false;
      }
      if (hasCalibration() != other.hasCalibration()) return false;
      if (hasCalibration()) {
        if (!getCalibration()
            .equals(other.getCalibration())) return false;
      }
      if (hasTboxSetParm() != other.hasTboxSetParm()) return false;
      if (hasTboxSetParm()) {
        if (!getTboxSetParm()
            .equals(other.getTboxSetParm())) return false;
      }
      if (hasTboxGetParm() != other.hasTboxGetParm()) return false;
      if (hasTboxGetParm()) {
        if (!getTboxGetParm()
            .equals(other.getTboxGetParm())) return false;
      }
      if (hasLastTask() != other.hasLastTask()) return false;
      if (hasLastTask()) {
        if (!getLastTask()
            .equals(other.getLastTask())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AUTOPILOT_CMD_FIELD_NUMBER;
      hash = (53 * hash) + autopilotCmd_;
      hash = (37 * hash) + WORK_MODE_FIELD_NUMBER;
      hash = (53 * hash) + workMode_;
      hash = (37 * hash) + HMI_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + hmiType_;
      if (hasUpdateRoutePath()) {
        hash = (37 * hash) + UPDATE_ROUTE_PATH_FIELD_NUMBER;
        hash = (53 * hash) + getUpdateRoutePath().hashCode();
      }
      if (hasRoutePath()) {
        hash = (37 * hash) + ROUTE_PATH_FIELD_NUMBER;
        hash = (53 * hash) + getRoutePath().hashCode();
      }
      if (hasRouteParam()) {
        hash = (37 * hash) + ROUTE_PARAM_FIELD_NUMBER;
        hash = (53 * hash) + getRouteParam().hashCode();
      }
      if (hasBaseLineTranslation()) {
        hash = (37 * hash) + BASE_LINE_TRANSLATION_FIELD_NUMBER;
        hash = (53 * hash) + getBaseLineTranslation().hashCode();
      }
      if (hasTransferLine()) {
        hash = (37 * hash) + TRANSFER_LINE_FIELD_NUMBER;
        hash = (53 * hash) + getTransferLine().hashCode();
      }
      if (hasSetConfigParam()) {
        hash = (37 * hash) + SET_CONFIG_PARAM_FIELD_NUMBER;
        hash = (53 * hash) + getSetConfigParam().hashCode();
      }
      hash = (37 * hash) + VERSION_MODEL_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + versionModelType_;
      hash = (37 * hash) + REQ_CONFIG_PARAM_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + reqConfigParamType_;
      if (hasManualControl()) {
        hash = (37 * hash) + MANUAL_CONTROL_FIELD_NUMBER;
        hash = (53 * hash) + getManualControl().hashCode();
      }
      if (hasCalibration()) {
        hash = (37 * hash) + CALIBRATION_FIELD_NUMBER;
        hash = (53 * hash) + getCalibration().hashCode();
      }
      if (hasTboxSetParm()) {
        hash = (37 * hash) + TBOX_SET_PARM_FIELD_NUMBER;
        hash = (53 * hash) + getTboxSetParm().hashCode();
      }
      if (hasTboxGetParm()) {
        hash = (37 * hash) + TBOX_GET_PARM_FIELD_NUMBER;
        hash = (53 * hash) + getTboxGetParm().hashCode();
      }
      if (hasLastTask()) {
        hash = (37 * hash) + LAST_TASK_FIELD_NUMBER;
        hash = (53 * hash) + getLastTask().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CtrlValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CtrlValue)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_CtrlValue_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_CtrlValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        autopilotCmd_ = 0;

        workMode_ = 0;

        hmiType_ = 0;

        if (updateRoutePathBuilder_ == null) {
          updateRoutePath_ = null;
        } else {
          updateRoutePath_ = null;
          updateRoutePathBuilder_ = null;
        }
        if (routePathBuilder_ == null) {
          routePath_ = null;
        } else {
          routePath_ = null;
          routePathBuilder_ = null;
        }
        if (routeParamBuilder_ == null) {
          routeParam_ = null;
        } else {
          routeParam_ = null;
          routeParamBuilder_ = null;
        }
        if (baseLineTranslationBuilder_ == null) {
          baseLineTranslation_ = null;
        } else {
          baseLineTranslation_ = null;
          baseLineTranslationBuilder_ = null;
        }
        if (transferLineBuilder_ == null) {
          transferLine_ = null;
        } else {
          transferLine_ = null;
          transferLineBuilder_ = null;
        }
        if (setConfigParamBuilder_ == null) {
          setConfigParam_ = null;
        } else {
          setConfigParam_ = null;
          setConfigParamBuilder_ = null;
        }
        versionModelType_ = 0;

        reqConfigParamType_ = 0;

        if (manualControlBuilder_ == null) {
          manualControl_ = null;
        } else {
          manualControl_ = null;
          manualControlBuilder_ = null;
        }
        if (calibrationBuilder_ == null) {
          calibration_ = null;
        } else {
          calibration_ = null;
          calibrationBuilder_ = null;
        }
        if (tboxSetParmBuilder_ == null) {
          tboxSetParm_ = null;
        } else {
          tboxSetParm_ = null;
          tboxSetParmBuilder_ = null;
        }
        if (tboxGetParmBuilder_ == null) {
          tboxGetParm_ = null;
        } else {
          tboxGetParm_ = null;
          tboxGetParmBuilder_ = null;
        }
        if (lastTaskBuilder_ == null) {
          lastTask_ = null;
        } else {
          lastTask_ = null;
          lastTaskBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_CtrlValue_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue(this);
        result.autopilotCmd_ = autopilotCmd_;
        result.workMode_ = workMode_;
        result.hmiType_ = hmiType_;
        if (updateRoutePathBuilder_ == null) {
          result.updateRoutePath_ = updateRoutePath_;
        } else {
          result.updateRoutePath_ = updateRoutePathBuilder_.build();
        }
        if (routePathBuilder_ == null) {
          result.routePath_ = routePath_;
        } else {
          result.routePath_ = routePathBuilder_.build();
        }
        if (routeParamBuilder_ == null) {
          result.routeParam_ = routeParam_;
        } else {
          result.routeParam_ = routeParamBuilder_.build();
        }
        if (baseLineTranslationBuilder_ == null) {
          result.baseLineTranslation_ = baseLineTranslation_;
        } else {
          result.baseLineTranslation_ = baseLineTranslationBuilder_.build();
        }
        if (transferLineBuilder_ == null) {
          result.transferLine_ = transferLine_;
        } else {
          result.transferLine_ = transferLineBuilder_.build();
        }
        if (setConfigParamBuilder_ == null) {
          result.setConfigParam_ = setConfigParam_;
        } else {
          result.setConfigParam_ = setConfigParamBuilder_.build();
        }
        result.versionModelType_ = versionModelType_;
        result.reqConfigParamType_ = reqConfigParamType_;
        if (manualControlBuilder_ == null) {
          result.manualControl_ = manualControl_;
        } else {
          result.manualControl_ = manualControlBuilder_.build();
        }
        if (calibrationBuilder_ == null) {
          result.calibration_ = calibration_;
        } else {
          result.calibration_ = calibrationBuilder_.build();
        }
        if (tboxSetParmBuilder_ == null) {
          result.tboxSetParm_ = tboxSetParm_;
        } else {
          result.tboxSetParm_ = tboxSetParmBuilder_.build();
        }
        if (tboxGetParmBuilder_ == null) {
          result.tboxGetParm_ = tboxGetParm_;
        } else {
          result.tboxGetParm_ = tboxGetParmBuilder_.build();
        }
        if (lastTaskBuilder_ == null) {
          result.lastTask_ = lastTask_;
        } else {
          result.lastTask_ = lastTaskBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue.getDefaultInstance()) return this;
        if (other.autopilotCmd_ != 0) {
          setAutopilotCmdValue(other.getAutopilotCmdValue());
        }
        if (other.workMode_ != 0) {
          setWorkModeValue(other.getWorkModeValue());
        }
        if (other.hmiType_ != 0) {
          setHmiTypeValue(other.getHmiTypeValue());
        }
        if (other.hasUpdateRoutePath()) {
          mergeUpdateRoutePath(other.getUpdateRoutePath());
        }
        if (other.hasRoutePath()) {
          mergeRoutePath(other.getRoutePath());
        }
        if (other.hasRouteParam()) {
          mergeRouteParam(other.getRouteParam());
        }
        if (other.hasBaseLineTranslation()) {
          mergeBaseLineTranslation(other.getBaseLineTranslation());
        }
        if (other.hasTransferLine()) {
          mergeTransferLine(other.getTransferLine());
        }
        if (other.hasSetConfigParam()) {
          mergeSetConfigParam(other.getSetConfigParam());
        }
        if (other.versionModelType_ != 0) {
          setVersionModelTypeValue(other.getVersionModelTypeValue());
        }
        if (other.reqConfigParamType_ != 0) {
          setReqConfigParamTypeValue(other.getReqConfigParamTypeValue());
        }
        if (other.hasManualControl()) {
          mergeManualControl(other.getManualControl());
        }
        if (other.hasCalibration()) {
          mergeCalibration(other.getCalibration());
        }
        if (other.hasTboxSetParm()) {
          mergeTboxSetParm(other.getTboxSetParm());
        }
        if (other.hasTboxGetParm()) {
          mergeTboxGetParm(other.getTboxGetParm());
        }
        if (other.hasLastTask()) {
          mergeLastTask(other.getLastTask());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int autopilotCmd_ = 0;
      /**
       * <pre>
       * 设置自动驾驶指令
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutopilotCmd autopilot_cmd = 1;</code>
       * @return The enum numeric value on the wire for autopilotCmd.
       */
      @java.lang.Override public int getAutopilotCmdValue() {
        return autopilotCmd_;
      }
      /**
       * <pre>
       * 设置自动驾驶指令
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutopilotCmd autopilot_cmd = 1;</code>
       * @param value The enum numeric value on the wire for autopilotCmd to set.
       * @return This builder for chaining.
       */
      public Builder setAutopilotCmdValue(int value) {
        
        autopilotCmd_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 设置自动驾驶指令
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutopilotCmd autopilot_cmd = 1;</code>
       * @return The autopilotCmd.
       */
      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutopilotCmd getAutopilotCmd() {
        @SuppressWarnings("deprecation")
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutopilotCmd result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutopilotCmd.valueOf(autopilotCmd_);
        return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutopilotCmd.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * 设置自动驾驶指令
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutopilotCmd autopilot_cmd = 1;</code>
       * @param value The autopilotCmd to set.
       * @return This builder for chaining.
       */
      public Builder setAutopilotCmd(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutopilotCmd value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        autopilotCmd_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 设置自动驾驶指令
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutopilotCmd autopilot_cmd = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAutopilotCmd() {
        
        autopilotCmd_ = 0;
        onChanged();
        return this;
      }

      private int workMode_ = 0;
      /**
       * <pre>
       * 设置工作模式 STANDLONE MASTER SLAVE 
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkMode work_mode = 2;</code>
       * @return The enum numeric value on the wire for workMode.
       */
      @java.lang.Override public int getWorkModeValue() {
        return workMode_;
      }
      /**
       * <pre>
       * 设置工作模式 STANDLONE MASTER SLAVE 
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkMode work_mode = 2;</code>
       * @param value The enum numeric value on the wire for workMode to set.
       * @return This builder for chaining.
       */
      public Builder setWorkModeValue(int value) {
        
        workMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 设置工作模式 STANDLONE MASTER SLAVE 
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkMode work_mode = 2;</code>
       * @return The workMode.
       */
      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkMode getWorkMode() {
        @SuppressWarnings("deprecation")
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkMode result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkMode.valueOf(workMode_);
        return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkMode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * 设置工作模式 STANDLONE MASTER SLAVE 
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkMode work_mode = 2;</code>
       * @param value The workMode to set.
       * @return This builder for chaining.
       */
      public Builder setWorkMode(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        workMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 设置工作模式 STANDLONE MASTER SLAVE 
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkMode work_mode = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearWorkMode() {
        
        workMode_ = 0;
        onChanged();
        return this;
      }

      private int hmiType_ = 0;
      /**
       * <pre>
       * 设置交互模式 CLOUD
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiType hmi_type = 3;</code>
       * @return The enum numeric value on the wire for hmiType.
       */
      @java.lang.Override public int getHmiTypeValue() {
        return hmiType_;
      }
      /**
       * <pre>
       * 设置交互模式 CLOUD
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiType hmi_type = 3;</code>
       * @param value The enum numeric value on the wire for hmiType to set.
       * @return This builder for chaining.
       */
      public Builder setHmiTypeValue(int value) {
        
        hmiType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 设置交互模式 CLOUD
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiType hmi_type = 3;</code>
       * @return The hmiType.
       */
      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiType getHmiType() {
        @SuppressWarnings("deprecation")
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiType result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiType.valueOf(hmiType_);
        return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * 设置交互模式 CLOUD
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiType hmi_type = 3;</code>
       * @param value The hmiType to set.
       * @return This builder for chaining.
       */
      public Builder setHmiType(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        hmiType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 设置交互模式 CLOUD
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiType hmi_type = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearHmiType() {
        
        hmiType_ = 0;
        onChanged();
        return this;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath updateRoutePath_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathOrBuilder> updateRoutePathBuilder_;
      /**
       * <pre>
       * 检查是否可以更新路径
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath update_route_path = 5;</code>
       * @return Whether the updateRoutePath field is set.
       */
      public boolean hasUpdateRoutePath() {
        return updateRoutePathBuilder_ != null || updateRoutePath_ != null;
      }
      /**
       * <pre>
       * 检查是否可以更新路径
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath update_route_path = 5;</code>
       * @return The updateRoutePath.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath getUpdateRoutePath() {
        if (updateRoutePathBuilder_ == null) {
          return updateRoutePath_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.getDefaultInstance() : updateRoutePath_;
        } else {
          return updateRoutePathBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 检查是否可以更新路径
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath update_route_path = 5;</code>
       */
      public Builder setUpdateRoutePath(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath value) {
        if (updateRoutePathBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updateRoutePath_ = value;
          onChanged();
        } else {
          updateRoutePathBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 检查是否可以更新路径
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath update_route_path = 5;</code>
       */
      public Builder setUpdateRoutePath(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.Builder builderForValue) {
        if (updateRoutePathBuilder_ == null) {
          updateRoutePath_ = builderForValue.build();
          onChanged();
        } else {
          updateRoutePathBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 检查是否可以更新路径
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath update_route_path = 5;</code>
       */
      public Builder mergeUpdateRoutePath(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath value) {
        if (updateRoutePathBuilder_ == null) {
          if (updateRoutePath_ != null) {
            updateRoutePath_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.newBuilder(updateRoutePath_).mergeFrom(value).buildPartial();
          } else {
            updateRoutePath_ = value;
          }
          onChanged();
        } else {
          updateRoutePathBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 检查是否可以更新路径
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath update_route_path = 5;</code>
       */
      public Builder clearUpdateRoutePath() {
        if (updateRoutePathBuilder_ == null) {
          updateRoutePath_ = null;
          onChanged();
        } else {
          updateRoutePath_ = null;
          updateRoutePathBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 检查是否可以更新路径
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath update_route_path = 5;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.Builder getUpdateRoutePathBuilder() {
        
        onChanged();
        return getUpdateRoutePathFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 检查是否可以更新路径
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath update_route_path = 5;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathOrBuilder getUpdateRoutePathOrBuilder() {
        if (updateRoutePathBuilder_ != null) {
          return updateRoutePathBuilder_.getMessageOrBuilder();
        } else {
          return updateRoutePath_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.getDefaultInstance() : updateRoutePath_;
        }
      }
      /**
       * <pre>
       * 检查是否可以更新路径
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath update_route_path = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathOrBuilder> 
          getUpdateRoutePathFieldBuilder() {
        if (updateRoutePathBuilder_ == null) {
          updateRoutePathBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathOrBuilder>(
                  getUpdateRoutePath(),
                  getParentForChildren(),
                  isClean());
          updateRoutePath_ = null;
        }
        return updateRoutePathBuilder_;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath routePath_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePathOrBuilder> routePathBuilder_;
      /**
       * <pre>
       * 设置全局路径
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath route_path = 6;</code>
       * @return Whether the routePath field is set.
       */
      public boolean hasRoutePath() {
        return routePathBuilder_ != null || routePath_ != null;
      }
      /**
       * <pre>
       * 设置全局路径
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath route_path = 6;</code>
       * @return The routePath.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath getRoutePath() {
        if (routePathBuilder_ == null) {
          return routePath_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.getDefaultInstance() : routePath_;
        } else {
          return routePathBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 设置全局路径
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath route_path = 6;</code>
       */
      public Builder setRoutePath(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath value) {
        if (routePathBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          routePath_ = value;
          onChanged();
        } else {
          routePathBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 设置全局路径
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath route_path = 6;</code>
       */
      public Builder setRoutePath(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.Builder builderForValue) {
        if (routePathBuilder_ == null) {
          routePath_ = builderForValue.build();
          onChanged();
        } else {
          routePathBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 设置全局路径
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath route_path = 6;</code>
       */
      public Builder mergeRoutePath(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath value) {
        if (routePathBuilder_ == null) {
          if (routePath_ != null) {
            routePath_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.newBuilder(routePath_).mergeFrom(value).buildPartial();
          } else {
            routePath_ = value;
          }
          onChanged();
        } else {
          routePathBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 设置全局路径
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath route_path = 6;</code>
       */
      public Builder clearRoutePath() {
        if (routePathBuilder_ == null) {
          routePath_ = null;
          onChanged();
        } else {
          routePath_ = null;
          routePathBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 设置全局路径
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath route_path = 6;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.Builder getRoutePathBuilder() {
        
        onChanged();
        return getRoutePathFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 设置全局路径
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath route_path = 6;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePathOrBuilder getRoutePathOrBuilder() {
        if (routePathBuilder_ != null) {
          return routePathBuilder_.getMessageOrBuilder();
        } else {
          return routePath_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.getDefaultInstance() : routePath_;
        }
      }
      /**
       * <pre>
       * 设置全局路径
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath route_path = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePathOrBuilder> 
          getRoutePathFieldBuilder() {
        if (routePathBuilder_ == null) {
          routePathBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePathOrBuilder>(
                  getRoutePath(),
                  getParentForChildren(),
                  isClean());
          routePath_ = null;
        }
        return routePathBuilder_;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam routeParam_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamOrBuilder> routeParamBuilder_;
      /**
       * <pre>
       * 设置规划关键参数（包括AB/ABCD）
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 7;</code>
       * @return Whether the routeParam field is set.
       */
      public boolean hasRouteParam() {
        return routeParamBuilder_ != null || routeParam_ != null;
      }
      /**
       * <pre>
       * 设置规划关键参数（包括AB/ABCD）
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 7;</code>
       * @return The routeParam.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam getRouteParam() {
        if (routeParamBuilder_ == null) {
          return routeParam_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.getDefaultInstance() : routeParam_;
        } else {
          return routeParamBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 设置规划关键参数（包括AB/ABCD）
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 7;</code>
       */
      public Builder setRouteParam(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam value) {
        if (routeParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          routeParam_ = value;
          onChanged();
        } else {
          routeParamBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 设置规划关键参数（包括AB/ABCD）
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 7;</code>
       */
      public Builder setRouteParam(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.Builder builderForValue) {
        if (routeParamBuilder_ == null) {
          routeParam_ = builderForValue.build();
          onChanged();
        } else {
          routeParamBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 设置规划关键参数（包括AB/ABCD）
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 7;</code>
       */
      public Builder mergeRouteParam(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam value) {
        if (routeParamBuilder_ == null) {
          if (routeParam_ != null) {
            routeParam_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.newBuilder(routeParam_).mergeFrom(value).buildPartial();
          } else {
            routeParam_ = value;
          }
          onChanged();
        } else {
          routeParamBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 设置规划关键参数（包括AB/ABCD）
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 7;</code>
       */
      public Builder clearRouteParam() {
        if (routeParamBuilder_ == null) {
          routeParam_ = null;
          onChanged();
        } else {
          routeParam_ = null;
          routeParamBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 设置规划关键参数（包括AB/ABCD）
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 7;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.Builder getRouteParamBuilder() {
        
        onChanged();
        return getRouteParamFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 设置规划关键参数（包括AB/ABCD）
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 7;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamOrBuilder getRouteParamOrBuilder() {
        if (routeParamBuilder_ != null) {
          return routeParamBuilder_.getMessageOrBuilder();
        } else {
          return routeParam_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.getDefaultInstance() : routeParam_;
        }
      }
      /**
       * <pre>
       * 设置规划关键参数（包括AB/ABCD）
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamOrBuilder> 
          getRouteParamFieldBuilder() {
        if (routeParamBuilder_ == null) {
          routeParamBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamOrBuilder>(
                  getRouteParam(),
                  getParentForChildren(),
                  isClean());
          routeParam_ = null;
        }
        return routeParamBuilder_;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation baseLineTranslation_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslationOrBuilder> baseLineTranslationBuilder_;
      /**
       * <pre>
       * 设置基准线平移
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation base_line_translation = 12;</code>
       * @return Whether the baseLineTranslation field is set.
       */
      public boolean hasBaseLineTranslation() {
        return baseLineTranslationBuilder_ != null || baseLineTranslation_ != null;
      }
      /**
       * <pre>
       * 设置基准线平移
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation base_line_translation = 12;</code>
       * @return The baseLineTranslation.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation getBaseLineTranslation() {
        if (baseLineTranslationBuilder_ == null) {
          return baseLineTranslation_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.getDefaultInstance() : baseLineTranslation_;
        } else {
          return baseLineTranslationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 设置基准线平移
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation base_line_translation = 12;</code>
       */
      public Builder setBaseLineTranslation(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation value) {
        if (baseLineTranslationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          baseLineTranslation_ = value;
          onChanged();
        } else {
          baseLineTranslationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 设置基准线平移
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation base_line_translation = 12;</code>
       */
      public Builder setBaseLineTranslation(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.Builder builderForValue) {
        if (baseLineTranslationBuilder_ == null) {
          baseLineTranslation_ = builderForValue.build();
          onChanged();
        } else {
          baseLineTranslationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 设置基准线平移
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation base_line_translation = 12;</code>
       */
      public Builder mergeBaseLineTranslation(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation value) {
        if (baseLineTranslationBuilder_ == null) {
          if (baseLineTranslation_ != null) {
            baseLineTranslation_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.newBuilder(baseLineTranslation_).mergeFrom(value).buildPartial();
          } else {
            baseLineTranslation_ = value;
          }
          onChanged();
        } else {
          baseLineTranslationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 设置基准线平移
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation base_line_translation = 12;</code>
       */
      public Builder clearBaseLineTranslation() {
        if (baseLineTranslationBuilder_ == null) {
          baseLineTranslation_ = null;
          onChanged();
        } else {
          baseLineTranslation_ = null;
          baseLineTranslationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 设置基准线平移
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation base_line_translation = 12;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.Builder getBaseLineTranslationBuilder() {
        
        onChanged();
        return getBaseLineTranslationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 设置基准线平移
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation base_line_translation = 12;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslationOrBuilder getBaseLineTranslationOrBuilder() {
        if (baseLineTranslationBuilder_ != null) {
          return baseLineTranslationBuilder_.getMessageOrBuilder();
        } else {
          return baseLineTranslation_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.getDefaultInstance() : baseLineTranslation_;
        }
      }
      /**
       * <pre>
       * 设置基准线平移
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation base_line_translation = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslationOrBuilder> 
          getBaseLineTranslationFieldBuilder() {
        if (baseLineTranslationBuilder_ == null) {
          baseLineTranslationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslationOrBuilder>(
                  getBaseLineTranslation(),
                  getParentForChildren(),
                  isClean());
          baseLineTranslation_ = null;
        }
        return baseLineTranslationBuilder_;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine transferLine_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLineOrBuilder> transferLineBuilder_;
      /**
       * <pre>
       * 设置交接行
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLine transfer_line = 13;</code>
       * @return Whether the transferLine field is set.
       */
      public boolean hasTransferLine() {
        return transferLineBuilder_ != null || transferLine_ != null;
      }
      /**
       * <pre>
       * 设置交接行
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLine transfer_line = 13;</code>
       * @return The transferLine.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine getTransferLine() {
        if (transferLineBuilder_ == null) {
          return transferLine_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine.getDefaultInstance() : transferLine_;
        } else {
          return transferLineBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 设置交接行
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLine transfer_line = 13;</code>
       */
      public Builder setTransferLine(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine value) {
        if (transferLineBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          transferLine_ = value;
          onChanged();
        } else {
          transferLineBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 设置交接行
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLine transfer_line = 13;</code>
       */
      public Builder setTransferLine(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine.Builder builderForValue) {
        if (transferLineBuilder_ == null) {
          transferLine_ = builderForValue.build();
          onChanged();
        } else {
          transferLineBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 设置交接行
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLine transfer_line = 13;</code>
       */
      public Builder mergeTransferLine(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine value) {
        if (transferLineBuilder_ == null) {
          if (transferLine_ != null) {
            transferLine_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine.newBuilder(transferLine_).mergeFrom(value).buildPartial();
          } else {
            transferLine_ = value;
          }
          onChanged();
        } else {
          transferLineBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 设置交接行
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLine transfer_line = 13;</code>
       */
      public Builder clearTransferLine() {
        if (transferLineBuilder_ == null) {
          transferLine_ = null;
          onChanged();
        } else {
          transferLine_ = null;
          transferLineBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 设置交接行
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLine transfer_line = 13;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine.Builder getTransferLineBuilder() {
        
        onChanged();
        return getTransferLineFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 设置交接行
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLine transfer_line = 13;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLineOrBuilder getTransferLineOrBuilder() {
        if (transferLineBuilder_ != null) {
          return transferLineBuilder_.getMessageOrBuilder();
        } else {
          return transferLine_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine.getDefaultInstance() : transferLine_;
        }
      }
      /**
       * <pre>
       * 设置交接行
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLine transfer_line = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLineOrBuilder> 
          getTransferLineFieldBuilder() {
        if (transferLineBuilder_ == null) {
          transferLineBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLineOrBuilder>(
                  getTransferLine(),
                  getParentForChildren(),
                  isClean());
          transferLine_ = null;
        }
        return transferLineBuilder_;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam setConfigParam_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParamOrBuilder> setConfigParamBuilder_;
      /**
       * <pre>
       * 配置参数
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam set_config_param = 15;</code>
       * @return Whether the setConfigParam field is set.
       */
      public boolean hasSetConfigParam() {
        return setConfigParamBuilder_ != null || setConfigParam_ != null;
      }
      /**
       * <pre>
       * 配置参数
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam set_config_param = 15;</code>
       * @return The setConfigParam.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam getSetConfigParam() {
        if (setConfigParamBuilder_ == null) {
          return setConfigParam_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam.getDefaultInstance() : setConfigParam_;
        } else {
          return setConfigParamBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 配置参数
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam set_config_param = 15;</code>
       */
      public Builder setSetConfigParam(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam value) {
        if (setConfigParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          setConfigParam_ = value;
          onChanged();
        } else {
          setConfigParamBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 配置参数
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam set_config_param = 15;</code>
       */
      public Builder setSetConfigParam(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam.Builder builderForValue) {
        if (setConfigParamBuilder_ == null) {
          setConfigParam_ = builderForValue.build();
          onChanged();
        } else {
          setConfigParamBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 配置参数
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam set_config_param = 15;</code>
       */
      public Builder mergeSetConfigParam(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam value) {
        if (setConfigParamBuilder_ == null) {
          if (setConfigParam_ != null) {
            setConfigParam_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam.newBuilder(setConfigParam_).mergeFrom(value).buildPartial();
          } else {
            setConfigParam_ = value;
          }
          onChanged();
        } else {
          setConfigParamBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 配置参数
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam set_config_param = 15;</code>
       */
      public Builder clearSetConfigParam() {
        if (setConfigParamBuilder_ == null) {
          setConfigParam_ = null;
          onChanged();
        } else {
          setConfigParam_ = null;
          setConfigParamBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 配置参数
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam set_config_param = 15;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam.Builder getSetConfigParamBuilder() {
        
        onChanged();
        return getSetConfigParamFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 配置参数
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam set_config_param = 15;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParamOrBuilder getSetConfigParamOrBuilder() {
        if (setConfigParamBuilder_ != null) {
          return setConfigParamBuilder_.getMessageOrBuilder();
        } else {
          return setConfigParam_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam.getDefaultInstance() : setConfigParam_;
        }
      }
      /**
       * <pre>
       * 配置参数
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam set_config_param = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParamOrBuilder> 
          getSetConfigParamFieldBuilder() {
        if (setConfigParamBuilder_ == null) {
          setConfigParamBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParamOrBuilder>(
                  getSetConfigParam(),
                  getParentForChildren(),
                  isClean());
          setConfigParam_ = null;
        }
        return setConfigParamBuilder_;
      }

      private int versionModelType_ = 0;
      /**
       * <pre>
       * 请求版本信息
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelType version_model_type = 16;</code>
       * @return The enum numeric value on the wire for versionModelType.
       */
      @java.lang.Override public int getVersionModelTypeValue() {
        return versionModelType_;
      }
      /**
       * <pre>
       * 请求版本信息
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelType version_model_type = 16;</code>
       * @param value The enum numeric value on the wire for versionModelType to set.
       * @return This builder for chaining.
       */
      public Builder setVersionModelTypeValue(int value) {
        
        versionModelType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 请求版本信息
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelType version_model_type = 16;</code>
       * @return The versionModelType.
       */
      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelType getVersionModelType() {
        @SuppressWarnings("deprecation")
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelType result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelType.valueOf(versionModelType_);
        return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * 请求版本信息
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelType version_model_type = 16;</code>
       * @param value The versionModelType to set.
       * @return This builder for chaining.
       */
      public Builder setVersionModelType(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        versionModelType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 请求版本信息
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelType version_model_type = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersionModelType() {
        
        versionModelType_ = 0;
        onChanged();
        return this;
      }

      private int reqConfigParamType_ = 0;
      /**
       * <pre>
       * 请求NCU配置参数
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigType req_config_param_type = 18;</code>
       * @return The enum numeric value on the wire for reqConfigParamType.
       */
      @java.lang.Override public int getReqConfigParamTypeValue() {
        return reqConfigParamType_;
      }
      /**
       * <pre>
       * 请求NCU配置参数
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigType req_config_param_type = 18;</code>
       * @param value The enum numeric value on the wire for reqConfigParamType to set.
       * @return This builder for chaining.
       */
      public Builder setReqConfigParamTypeValue(int value) {
        
        reqConfigParamType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 请求NCU配置参数
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigType req_config_param_type = 18;</code>
       * @return The reqConfigParamType.
       */
      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigType getReqConfigParamType() {
        @SuppressWarnings("deprecation")
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigType result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigType.valueOf(reqConfigParamType_);
        return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * 请求NCU配置参数
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigType req_config_param_type = 18;</code>
       * @param value The reqConfigParamType to set.
       * @return This builder for chaining.
       */
      public Builder setReqConfigParamType(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        reqConfigParamType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 请求NCU配置参数
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigType req_config_param_type = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearReqConfigParamType() {
        
        reqConfigParamType_ = 0;
        onChanged();
        return this;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl manualControl_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlOrBuilder> manualControlBuilder_;
      /**
       * <pre>
       * 手动控制
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl manual_control = 20;</code>
       * @return Whether the manualControl field is set.
       */
      public boolean hasManualControl() {
        return manualControlBuilder_ != null || manualControl_ != null;
      }
      /**
       * <pre>
       * 手动控制
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl manual_control = 20;</code>
       * @return The manualControl.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl getManualControl() {
        if (manualControlBuilder_ == null) {
          return manualControl_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.getDefaultInstance() : manualControl_;
        } else {
          return manualControlBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 手动控制
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl manual_control = 20;</code>
       */
      public Builder setManualControl(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl value) {
        if (manualControlBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          manualControl_ = value;
          onChanged();
        } else {
          manualControlBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 手动控制
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl manual_control = 20;</code>
       */
      public Builder setManualControl(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.Builder builderForValue) {
        if (manualControlBuilder_ == null) {
          manualControl_ = builderForValue.build();
          onChanged();
        } else {
          manualControlBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 手动控制
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl manual_control = 20;</code>
       */
      public Builder mergeManualControl(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl value) {
        if (manualControlBuilder_ == null) {
          if (manualControl_ != null) {
            manualControl_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.newBuilder(manualControl_).mergeFrom(value).buildPartial();
          } else {
            manualControl_ = value;
          }
          onChanged();
        } else {
          manualControlBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 手动控制
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl manual_control = 20;</code>
       */
      public Builder clearManualControl() {
        if (manualControlBuilder_ == null) {
          manualControl_ = null;
          onChanged();
        } else {
          manualControl_ = null;
          manualControlBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 手动控制
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl manual_control = 20;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.Builder getManualControlBuilder() {
        
        onChanged();
        return getManualControlFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 手动控制
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl manual_control = 20;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlOrBuilder getManualControlOrBuilder() {
        if (manualControlBuilder_ != null) {
          return manualControlBuilder_.getMessageOrBuilder();
        } else {
          return manualControl_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.getDefaultInstance() : manualControl_;
        }
      }
      /**
       * <pre>
       * 手动控制
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl manual_control = 20;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlOrBuilder> 
          getManualControlFieldBuilder() {
        if (manualControlBuilder_ == null) {
          manualControlBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlOrBuilder>(
                  getManualControl(),
                  getParentForChildren(),
                  isClean());
          manualControl_ = null;
        }
        return manualControlBuilder_;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration calibration_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationOrBuilder> calibrationBuilder_;
      /**
       * <pre>
       * 传感器校准
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Calibration calibration = 21;</code>
       * @return Whether the calibration field is set.
       */
      public boolean hasCalibration() {
        return calibrationBuilder_ != null || calibration_ != null;
      }
      /**
       * <pre>
       * 传感器校准
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Calibration calibration = 21;</code>
       * @return The calibration.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration getCalibration() {
        if (calibrationBuilder_ == null) {
          return calibration_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration.getDefaultInstance() : calibration_;
        } else {
          return calibrationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 传感器校准
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Calibration calibration = 21;</code>
       */
      public Builder setCalibration(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration value) {
        if (calibrationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          calibration_ = value;
          onChanged();
        } else {
          calibrationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 传感器校准
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Calibration calibration = 21;</code>
       */
      public Builder setCalibration(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration.Builder builderForValue) {
        if (calibrationBuilder_ == null) {
          calibration_ = builderForValue.build();
          onChanged();
        } else {
          calibrationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 传感器校准
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Calibration calibration = 21;</code>
       */
      public Builder mergeCalibration(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration value) {
        if (calibrationBuilder_ == null) {
          if (calibration_ != null) {
            calibration_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration.newBuilder(calibration_).mergeFrom(value).buildPartial();
          } else {
            calibration_ = value;
          }
          onChanged();
        } else {
          calibrationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 传感器校准
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Calibration calibration = 21;</code>
       */
      public Builder clearCalibration() {
        if (calibrationBuilder_ == null) {
          calibration_ = null;
          onChanged();
        } else {
          calibration_ = null;
          calibrationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 传感器校准
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Calibration calibration = 21;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration.Builder getCalibrationBuilder() {
        
        onChanged();
        return getCalibrationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 传感器校准
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Calibration calibration = 21;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationOrBuilder getCalibrationOrBuilder() {
        if (calibrationBuilder_ != null) {
          return calibrationBuilder_.getMessageOrBuilder();
        } else {
          return calibration_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration.getDefaultInstance() : calibration_;
        }
      }
      /**
       * <pre>
       * 传感器校准
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Calibration calibration = 21;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationOrBuilder> 
          getCalibrationFieldBuilder() {
        if (calibrationBuilder_ == null) {
          calibrationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationOrBuilder>(
                  getCalibration(),
                  getParentForChildren(),
                  isClean());
          calibration_ = null;
        }
        return calibrationBuilder_;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet tboxSetParm_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetOrBuilder> tboxSetParmBuilder_;
      /**
       * <pre>
       * TBOX参数设置，详见参数设置表
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSet tbox_set_parm = 40;</code>
       * @return Whether the tboxSetParm field is set.
       */
      public boolean hasTboxSetParm() {
        return tboxSetParmBuilder_ != null || tboxSetParm_ != null;
      }
      /**
       * <pre>
       * TBOX参数设置，详见参数设置表
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSet tbox_set_parm = 40;</code>
       * @return The tboxSetParm.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet getTboxSetParm() {
        if (tboxSetParmBuilder_ == null) {
          return tboxSetParm_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet.getDefaultInstance() : tboxSetParm_;
        } else {
          return tboxSetParmBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * TBOX参数设置，详见参数设置表
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSet tbox_set_parm = 40;</code>
       */
      public Builder setTboxSetParm(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet value) {
        if (tboxSetParmBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tboxSetParm_ = value;
          onChanged();
        } else {
          tboxSetParmBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * TBOX参数设置，详见参数设置表
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSet tbox_set_parm = 40;</code>
       */
      public Builder setTboxSetParm(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet.Builder builderForValue) {
        if (tboxSetParmBuilder_ == null) {
          tboxSetParm_ = builderForValue.build();
          onChanged();
        } else {
          tboxSetParmBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * TBOX参数设置，详见参数设置表
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSet tbox_set_parm = 40;</code>
       */
      public Builder mergeTboxSetParm(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet value) {
        if (tboxSetParmBuilder_ == null) {
          if (tboxSetParm_ != null) {
            tboxSetParm_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet.newBuilder(tboxSetParm_).mergeFrom(value).buildPartial();
          } else {
            tboxSetParm_ = value;
          }
          onChanged();
        } else {
          tboxSetParmBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * TBOX参数设置，详见参数设置表
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSet tbox_set_parm = 40;</code>
       */
      public Builder clearTboxSetParm() {
        if (tboxSetParmBuilder_ == null) {
          tboxSetParm_ = null;
          onChanged();
        } else {
          tboxSetParm_ = null;
          tboxSetParmBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * TBOX参数设置，详见参数设置表
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSet tbox_set_parm = 40;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet.Builder getTboxSetParmBuilder() {
        
        onChanged();
        return getTboxSetParmFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * TBOX参数设置，详见参数设置表
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSet tbox_set_parm = 40;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetOrBuilder getTboxSetParmOrBuilder() {
        if (tboxSetParmBuilder_ != null) {
          return tboxSetParmBuilder_.getMessageOrBuilder();
        } else {
          return tboxSetParm_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet.getDefaultInstance() : tboxSetParm_;
        }
      }
      /**
       * <pre>
       * TBOX参数设置，详见参数设置表
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSet tbox_set_parm = 40;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetOrBuilder> 
          getTboxSetParmFieldBuilder() {
        if (tboxSetParmBuilder_ == null) {
          tboxSetParmBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetOrBuilder>(
                  getTboxSetParm(),
                  getParentForChildren(),
                  isClean());
          tboxSetParm_ = null;
        }
        return tboxSetParmBuilder_;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet tboxGetParm_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetOrBuilder> tboxGetParmBuilder_;
      /**
       * <pre>
       * TBOX参数查询
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGet tbox_get_parm = 41;</code>
       * @return Whether the tboxGetParm field is set.
       */
      public boolean hasTboxGetParm() {
        return tboxGetParmBuilder_ != null || tboxGetParm_ != null;
      }
      /**
       * <pre>
       * TBOX参数查询
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGet tbox_get_parm = 41;</code>
       * @return The tboxGetParm.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet getTboxGetParm() {
        if (tboxGetParmBuilder_ == null) {
          return tboxGetParm_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet.getDefaultInstance() : tboxGetParm_;
        } else {
          return tboxGetParmBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * TBOX参数查询
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGet tbox_get_parm = 41;</code>
       */
      public Builder setTboxGetParm(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet value) {
        if (tboxGetParmBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tboxGetParm_ = value;
          onChanged();
        } else {
          tboxGetParmBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * TBOX参数查询
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGet tbox_get_parm = 41;</code>
       */
      public Builder setTboxGetParm(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet.Builder builderForValue) {
        if (tboxGetParmBuilder_ == null) {
          tboxGetParm_ = builderForValue.build();
          onChanged();
        } else {
          tboxGetParmBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * TBOX参数查询
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGet tbox_get_parm = 41;</code>
       */
      public Builder mergeTboxGetParm(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet value) {
        if (tboxGetParmBuilder_ == null) {
          if (tboxGetParm_ != null) {
            tboxGetParm_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet.newBuilder(tboxGetParm_).mergeFrom(value).buildPartial();
          } else {
            tboxGetParm_ = value;
          }
          onChanged();
        } else {
          tboxGetParmBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * TBOX参数查询
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGet tbox_get_parm = 41;</code>
       */
      public Builder clearTboxGetParm() {
        if (tboxGetParmBuilder_ == null) {
          tboxGetParm_ = null;
          onChanged();
        } else {
          tboxGetParm_ = null;
          tboxGetParmBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * TBOX参数查询
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGet tbox_get_parm = 41;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet.Builder getTboxGetParmBuilder() {
        
        onChanged();
        return getTboxGetParmFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * TBOX参数查询
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGet tbox_get_parm = 41;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetOrBuilder getTboxGetParmOrBuilder() {
        if (tboxGetParmBuilder_ != null) {
          return tboxGetParmBuilder_.getMessageOrBuilder();
        } else {
          return tboxGetParm_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet.getDefaultInstance() : tboxGetParm_;
        }
      }
      /**
       * <pre>
       * TBOX参数查询
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGet tbox_get_parm = 41;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetOrBuilder> 
          getTboxGetParmFieldBuilder() {
        if (tboxGetParmBuilder_ == null) {
          tboxGetParmBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetOrBuilder>(
                  getTboxGetParm(),
                  getParentForChildren(),
                  isClean());
          tboxGetParm_ = null;
        }
        return tboxGetParmBuilder_;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask lastTask_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTaskOrBuilder> lastTaskBuilder_;
      /**
       * <pre>
       * 确认是否继续上一任务  NCU-&gt;交互终端
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTask last_task = 50;</code>
       * @return Whether the lastTask field is set.
       */
      public boolean hasLastTask() {
        return lastTaskBuilder_ != null || lastTask_ != null;
      }
      /**
       * <pre>
       * 确认是否继续上一任务  NCU-&gt;交互终端
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTask last_task = 50;</code>
       * @return The lastTask.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask getLastTask() {
        if (lastTaskBuilder_ == null) {
          return lastTask_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask.getDefaultInstance() : lastTask_;
        } else {
          return lastTaskBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 确认是否继续上一任务  NCU-&gt;交互终端
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTask last_task = 50;</code>
       */
      public Builder setLastTask(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask value) {
        if (lastTaskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lastTask_ = value;
          onChanged();
        } else {
          lastTaskBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 确认是否继续上一任务  NCU-&gt;交互终端
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTask last_task = 50;</code>
       */
      public Builder setLastTask(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask.Builder builderForValue) {
        if (lastTaskBuilder_ == null) {
          lastTask_ = builderForValue.build();
          onChanged();
        } else {
          lastTaskBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 确认是否继续上一任务  NCU-&gt;交互终端
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTask last_task = 50;</code>
       */
      public Builder mergeLastTask(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask value) {
        if (lastTaskBuilder_ == null) {
          if (lastTask_ != null) {
            lastTask_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask.newBuilder(lastTask_).mergeFrom(value).buildPartial();
          } else {
            lastTask_ = value;
          }
          onChanged();
        } else {
          lastTaskBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 确认是否继续上一任务  NCU-&gt;交互终端
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTask last_task = 50;</code>
       */
      public Builder clearLastTask() {
        if (lastTaskBuilder_ == null) {
          lastTask_ = null;
          onChanged();
        } else {
          lastTask_ = null;
          lastTaskBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 确认是否继续上一任务  NCU-&gt;交互终端
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTask last_task = 50;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask.Builder getLastTaskBuilder() {
        
        onChanged();
        return getLastTaskFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 确认是否继续上一任务  NCU-&gt;交互终端
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTask last_task = 50;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTaskOrBuilder getLastTaskOrBuilder() {
        if (lastTaskBuilder_ != null) {
          return lastTaskBuilder_.getMessageOrBuilder();
        } else {
          return lastTask_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask.getDefaultInstance() : lastTask_;
        }
      }
      /**
       * <pre>
       * 确认是否继续上一任务  NCU-&gt;交互终端
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTask last_task = 50;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTaskOrBuilder> 
          getLastTaskFieldBuilder() {
        if (lastTaskBuilder_ == null) {
          lastTaskBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTaskOrBuilder>(
                  getLastTask(),
                  getParentForChildren(),
                  isClean());
          lastTask_ = null;
        }
        return lastTaskBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CtrlValue)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CtrlValue)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CtrlValue>
        PARSER = new com.google.protobuf.AbstractParser<CtrlValue>() {
      @java.lang.Override
      public CtrlValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CtrlValue(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CtrlValue> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CtrlValue> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CtrlValue getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ResponseValue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutoPilotResponse atuopilot_response = 1;</code>
     * @return Whether the atuopilotResponse field is set.
     */
    boolean hasAtuopilotResponse();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutoPilotResponse atuopilot_response = 1;</code>
     * @return The atuopilotResponse.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse getAtuopilotResponse();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutoPilotResponse atuopilot_response = 1;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponseOrBuilder getAtuopilotResponseOrBuilder();

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkModeResponse work_mode_response = 2;</code>
     * @return Whether the workModeResponse field is set.
     */
    boolean hasWorkModeResponse();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkModeResponse work_mode_response = 2;</code>
     * @return The workModeResponse.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse getWorkModeResponse();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkModeResponse work_mode_response = 2;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponseOrBuilder getWorkModeResponseOrBuilder();

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiResponse hmi_mode_response = 3;</code>
     * @return Whether the hmiModeResponse field is set.
     */
    boolean hasHmiModeResponse();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiResponse hmi_mode_response = 3;</code>
     * @return The hmiModeResponse.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse getHmiModeResponse();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiResponse hmi_mode_response = 3;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponseOrBuilder getHmiModeResponseOrBuilder();

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskResponse cancel_task_response = 4;</code>
     * @return Whether the cancelTaskResponse field is set.
     */
    boolean hasCancelTaskResponse();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskResponse cancel_task_response = 4;</code>
     * @return The cancelTaskResponse.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse getCancelTaskResponse();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskResponse cancel_task_response = 4;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponseOrBuilder getCancelTaskResponseOrBuilder();

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePathResult update_route_path_result = 5;</code>
     * @return Whether the updateRoutePathResult field is set.
     */
    boolean hasUpdateRoutePathResult();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePathResult update_route_path_result = 5;</code>
     * @return The updateRoutePathResult.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult getUpdateRoutePathResult();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePathResult update_route_path_result = 5;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResultOrBuilder getUpdateRoutePathResultOrBuilder();

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath route_path = 6;</code>
     * @return Whether the routePath field is set.
     */
    boolean hasRoutePath();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath route_path = 6;</code>
     * @return The routePath.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath getRoutePath();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath route_path = 6;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePathOrBuilder getRoutePathOrBuilder();

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParamResponse route_param_response = 7;</code>
     * @return The enum numeric value on the wire for routeParamResponse.
     */
    int getRouteParamResponseValue();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParamResponse route_param_response = 7;</code>
     * @return The routeParamResponse.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamResponse getRouteParamResponse();

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse task_finish_confirm_response = 8;</code>
     * @return Whether the taskFinishConfirmResponse field is set.
     */
    boolean hasTaskFinishConfirmResponse();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse task_finish_confirm_response = 8;</code>
     * @return The taskFinishConfirmResponse.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse getTaskFinishConfirmResponse();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse task_finish_confirm_response = 8;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponseOrBuilder getTaskFinishConfirmResponseOrBuilder();

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskConfirmResponse cancel_task_confirm_response = 9;</code>
     * @return Whether the cancelTaskConfirmResponse field is set.
     */
    boolean hasCancelTaskConfirmResponse();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskConfirmResponse cancel_task_confirm_response = 9;</code>
     * @return The cancelTaskConfirmResponse.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse getCancelTaskConfirmResponse();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskConfirmResponse cancel_task_confirm_response = 9;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponseOrBuilder getCancelTaskConfirmResponseOrBuilder();

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslationResponse base_line_tran_response = 12;</code>
     * @return The enum numeric value on the wire for baseLineTranResponse.
     */
    int getBaseLineTranResponseValue();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslationResponse base_line_tran_response = 12;</code>
     * @return The baseLineTranResponse.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslationResponse getBaseLineTranResponse();

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLineResponse transfer_line_response = 13;</code>
     * @return The enum numeric value on the wire for transferLineResponse.
     */
    int getTransferLineResponseValue();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLineResponse transfer_line_response = 13;</code>
     * @return The transferLineResponse.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLineResponse getTransferLineResponse();

    /**
     * <pre>
     *设置和查询配置应答
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam res_config_param = 15;</code>
     * @return Whether the resConfigParam field is set.
     */
    boolean hasResConfigParam();
    /**
     * <pre>
     *设置和查询配置应答
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam res_config_param = 15;</code>
     * @return The resConfigParam.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam getResConfigParam();
    /**
     * <pre>
     *设置和查询配置应答
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam res_config_param = 15;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParamOrBuilder getResConfigParamOrBuilder();

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelInfo version_model_inf = 16;</code>
     * @return Whether the versionModelInf field is set.
     */
    boolean hasVersionModelInf();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelInfo version_model_inf = 16;</code>
     * @return The versionModelInf.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo getVersionModelInf();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelInfo version_model_inf = 16;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfoOrBuilder getVersionModelInfOrBuilder();

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControlResponse manual_control = 20;</code>
     * @return Whether the manualControl field is set.
     */
    boolean hasManualControl();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControlResponse manual_control = 20;</code>
     * @return The manualControl.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse getManualControl();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControlResponse manual_control = 20;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponseOrBuilder getManualControlOrBuilder();

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationResponse calibration_response = 21;</code>
     * @return Whether the calibrationResponse field is set.
     */
    boolean hasCalibrationResponse();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationResponse calibration_response = 21;</code>
     * @return The calibrationResponse.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse getCalibrationResponse();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationResponse calibration_response = 21;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponseOrBuilder getCalibrationResponseOrBuilder();

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationConfirmResult calibration_confirm_result = 22;</code>
     * @return Whether the calibrationConfirmResult field is set.
     */
    boolean hasCalibrationConfirmResult();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationConfirmResult calibration_confirm_result = 22;</code>
     * @return The calibrationConfirmResult.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult getCalibrationConfirmResult();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationConfirmResult calibration_confirm_result = 22;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResultOrBuilder getCalibrationConfirmResultOrBuilder();

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSetResult tbox_set_result = 40;</code>
     * @return Whether the tboxSetResult field is set.
     */
    boolean hasTboxSetResult();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSetResult tbox_set_result = 40;</code>
     * @return The tboxSetResult.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult getTboxSetResult();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSetResult tbox_set_result = 40;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResultOrBuilder getTboxSetResultOrBuilder();

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGetResponse tbox_get_result = 41;</code>
     * @return Whether the tboxGetResult field is set.
     */
    boolean hasTboxGetResult();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGetResponse tbox_get_result = 41;</code>
     * @return The tboxGetResult.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse getTboxGetResult();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGetResponse tbox_get_result = 41;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponseOrBuilder getTboxGetResultOrBuilder();

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTaskContinue last_task_continue = 50;</code>
     * @return The enum numeric value on the wire for lastTaskContinue.
     */
    int getLastTaskContinueValue();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTaskContinue last_task_continue = 50;</code>
     * @return The lastTaskContinue.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTaskContinue getLastTaskContinue();

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse task_finish_confirm = 51;</code>
     * @return Whether the taskFinishConfirm field is set.
     */
    boolean hasTaskFinishConfirm();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse task_finish_confirm = 51;</code>
     * @return The taskFinishConfirm.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse getTaskFinishConfirm();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse task_finish_confirm = 51;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponseOrBuilder getTaskFinishConfirmOrBuilder();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ResponseValue}
   */
  public static final class ResponseValue extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ResponseValue)
      ResponseValueOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ResponseValue.newBuilder() to construct.
    private ResponseValue(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ResponseValue() {
      routeParamResponse_ = 0;
      baseLineTranResponse_ = 0;
      transferLineResponse_ = 0;
      lastTaskContinue_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ResponseValue();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ResponseValue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse.Builder subBuilder = null;
              if (atuopilotResponse_ != null) {
                subBuilder = atuopilotResponse_.toBuilder();
              }
              atuopilotResponse_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(atuopilotResponse_);
                atuopilotResponse_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse.Builder subBuilder = null;
              if (workModeResponse_ != null) {
                subBuilder = workModeResponse_.toBuilder();
              }
              workModeResponse_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(workModeResponse_);
                workModeResponse_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse.Builder subBuilder = null;
              if (hmiModeResponse_ != null) {
                subBuilder = hmiModeResponse_.toBuilder();
              }
              hmiModeResponse_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(hmiModeResponse_);
                hmiModeResponse_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse.Builder subBuilder = null;
              if (cancelTaskResponse_ != null) {
                subBuilder = cancelTaskResponse_.toBuilder();
              }
              cancelTaskResponse_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cancelTaskResponse_);
                cancelTaskResponse_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult.Builder subBuilder = null;
              if (updateRoutePathResult_ != null) {
                subBuilder = updateRoutePathResult_.toBuilder();
              }
              updateRoutePathResult_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(updateRoutePathResult_);
                updateRoutePathResult_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.Builder subBuilder = null;
              if (routePath_ != null) {
                subBuilder = routePath_.toBuilder();
              }
              routePath_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(routePath_);
                routePath_ = subBuilder.buildPartial();
              }

              break;
            }
            case 56: {
              int rawValue = input.readEnum();

              routeParamResponse_ = rawValue;
              break;
            }
            case 66: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse.Builder subBuilder = null;
              if (taskFinishConfirmResponse_ != null) {
                subBuilder = taskFinishConfirmResponse_.toBuilder();
              }
              taskFinishConfirmResponse_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(taskFinishConfirmResponse_);
                taskFinishConfirmResponse_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse.Builder subBuilder = null;
              if (cancelTaskConfirmResponse_ != null) {
                subBuilder = cancelTaskConfirmResponse_.toBuilder();
              }
              cancelTaskConfirmResponse_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cancelTaskConfirmResponse_);
                cancelTaskConfirmResponse_ = subBuilder.buildPartial();
              }

              break;
            }
            case 96: {
              int rawValue = input.readEnum();

              baseLineTranResponse_ = rawValue;
              break;
            }
            case 104: {
              int rawValue = input.readEnum();

              transferLineResponse_ = rawValue;
              break;
            }
            case 122: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam.Builder subBuilder = null;
              if (resConfigParam_ != null) {
                subBuilder = resConfigParam_.toBuilder();
              }
              resConfigParam_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(resConfigParam_);
                resConfigParam_ = subBuilder.buildPartial();
              }

              break;
            }
            case 130: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo.Builder subBuilder = null;
              if (versionModelInf_ != null) {
                subBuilder = versionModelInf_.toBuilder();
              }
              versionModelInf_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(versionModelInf_);
                versionModelInf_ = subBuilder.buildPartial();
              }

              break;
            }
            case 162: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse.Builder subBuilder = null;
              if (manualControl_ != null) {
                subBuilder = manualControl_.toBuilder();
              }
              manualControl_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(manualControl_);
                manualControl_ = subBuilder.buildPartial();
              }

              break;
            }
            case 170: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse.Builder subBuilder = null;
              if (calibrationResponse_ != null) {
                subBuilder = calibrationResponse_.toBuilder();
              }
              calibrationResponse_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(calibrationResponse_);
                calibrationResponse_ = subBuilder.buildPartial();
              }

              break;
            }
            case 178: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult.Builder subBuilder = null;
              if (calibrationConfirmResult_ != null) {
                subBuilder = calibrationConfirmResult_.toBuilder();
              }
              calibrationConfirmResult_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(calibrationConfirmResult_);
                calibrationConfirmResult_ = subBuilder.buildPartial();
              }

              break;
            }
            case 322: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult.Builder subBuilder = null;
              if (tboxSetResult_ != null) {
                subBuilder = tboxSetResult_.toBuilder();
              }
              tboxSetResult_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tboxSetResult_);
                tboxSetResult_ = subBuilder.buildPartial();
              }

              break;
            }
            case 330: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse.Builder subBuilder = null;
              if (tboxGetResult_ != null) {
                subBuilder = tboxGetResult_.toBuilder();
              }
              tboxGetResult_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tboxGetResult_);
                tboxGetResult_ = subBuilder.buildPartial();
              }

              break;
            }
            case 400: {
              int rawValue = input.readEnum();

              lastTaskContinue_ = rawValue;
              break;
            }
            case 410: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse.Builder subBuilder = null;
              if (taskFinishConfirm_ != null) {
                subBuilder = taskFinishConfirm_.toBuilder();
              }
              taskFinishConfirm_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(taskFinishConfirm_);
                taskFinishConfirm_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ResponseValue_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ResponseValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue.Builder.class);
    }

    public static final int ATUOPILOT_RESPONSE_FIELD_NUMBER = 1;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse atuopilotResponse_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutoPilotResponse atuopilot_response = 1;</code>
     * @return Whether the atuopilotResponse field is set.
     */
    @java.lang.Override
    public boolean hasAtuopilotResponse() {
      return atuopilotResponse_ != null;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutoPilotResponse atuopilot_response = 1;</code>
     * @return The atuopilotResponse.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse getAtuopilotResponse() {
      return atuopilotResponse_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse.getDefaultInstance() : atuopilotResponse_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutoPilotResponse atuopilot_response = 1;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponseOrBuilder getAtuopilotResponseOrBuilder() {
      return getAtuopilotResponse();
    }

    public static final int WORK_MODE_RESPONSE_FIELD_NUMBER = 2;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse workModeResponse_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkModeResponse work_mode_response = 2;</code>
     * @return Whether the workModeResponse field is set.
     */
    @java.lang.Override
    public boolean hasWorkModeResponse() {
      return workModeResponse_ != null;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkModeResponse work_mode_response = 2;</code>
     * @return The workModeResponse.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse getWorkModeResponse() {
      return workModeResponse_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse.getDefaultInstance() : workModeResponse_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkModeResponse work_mode_response = 2;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponseOrBuilder getWorkModeResponseOrBuilder() {
      return getWorkModeResponse();
    }

    public static final int HMI_MODE_RESPONSE_FIELD_NUMBER = 3;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse hmiModeResponse_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiResponse hmi_mode_response = 3;</code>
     * @return Whether the hmiModeResponse field is set.
     */
    @java.lang.Override
    public boolean hasHmiModeResponse() {
      return hmiModeResponse_ != null;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiResponse hmi_mode_response = 3;</code>
     * @return The hmiModeResponse.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse getHmiModeResponse() {
      return hmiModeResponse_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse.getDefaultInstance() : hmiModeResponse_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiResponse hmi_mode_response = 3;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponseOrBuilder getHmiModeResponseOrBuilder() {
      return getHmiModeResponse();
    }

    public static final int CANCEL_TASK_RESPONSE_FIELD_NUMBER = 4;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse cancelTaskResponse_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskResponse cancel_task_response = 4;</code>
     * @return Whether the cancelTaskResponse field is set.
     */
    @java.lang.Override
    public boolean hasCancelTaskResponse() {
      return cancelTaskResponse_ != null;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskResponse cancel_task_response = 4;</code>
     * @return The cancelTaskResponse.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse getCancelTaskResponse() {
      return cancelTaskResponse_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse.getDefaultInstance() : cancelTaskResponse_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskResponse cancel_task_response = 4;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponseOrBuilder getCancelTaskResponseOrBuilder() {
      return getCancelTaskResponse();
    }

    public static final int UPDATE_ROUTE_PATH_RESULT_FIELD_NUMBER = 5;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult updateRoutePathResult_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePathResult update_route_path_result = 5;</code>
     * @return Whether the updateRoutePathResult field is set.
     */
    @java.lang.Override
    public boolean hasUpdateRoutePathResult() {
      return updateRoutePathResult_ != null;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePathResult update_route_path_result = 5;</code>
     * @return The updateRoutePathResult.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult getUpdateRoutePathResult() {
      return updateRoutePathResult_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult.getDefaultInstance() : updateRoutePathResult_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePathResult update_route_path_result = 5;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResultOrBuilder getUpdateRoutePathResultOrBuilder() {
      return getUpdateRoutePathResult();
    }

    public static final int ROUTE_PATH_FIELD_NUMBER = 6;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath routePath_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath route_path = 6;</code>
     * @return Whether the routePath field is set.
     */
    @java.lang.Override
    public boolean hasRoutePath() {
      return routePath_ != null;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath route_path = 6;</code>
     * @return The routePath.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath getRoutePath() {
      return routePath_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.getDefaultInstance() : routePath_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath route_path = 6;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePathOrBuilder getRoutePathOrBuilder() {
      return getRoutePath();
    }

    public static final int ROUTE_PARAM_RESPONSE_FIELD_NUMBER = 7;
    private int routeParamResponse_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParamResponse route_param_response = 7;</code>
     * @return The enum numeric value on the wire for routeParamResponse.
     */
    @java.lang.Override public int getRouteParamResponseValue() {
      return routeParamResponse_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParamResponse route_param_response = 7;</code>
     * @return The routeParamResponse.
     */
    @java.lang.Override public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamResponse getRouteParamResponse() {
      @SuppressWarnings("deprecation")
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamResponse result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamResponse.valueOf(routeParamResponse_);
      return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamResponse.UNRECOGNIZED : result;
    }

    public static final int TASK_FINISH_CONFIRM_RESPONSE_FIELD_NUMBER = 8;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse taskFinishConfirmResponse_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse task_finish_confirm_response = 8;</code>
     * @return Whether the taskFinishConfirmResponse field is set.
     */
    @java.lang.Override
    public boolean hasTaskFinishConfirmResponse() {
      return taskFinishConfirmResponse_ != null;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse task_finish_confirm_response = 8;</code>
     * @return The taskFinishConfirmResponse.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse getTaskFinishConfirmResponse() {
      return taskFinishConfirmResponse_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse.getDefaultInstance() : taskFinishConfirmResponse_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse task_finish_confirm_response = 8;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponseOrBuilder getTaskFinishConfirmResponseOrBuilder() {
      return getTaskFinishConfirmResponse();
    }

    public static final int CANCEL_TASK_CONFIRM_RESPONSE_FIELD_NUMBER = 9;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse cancelTaskConfirmResponse_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskConfirmResponse cancel_task_confirm_response = 9;</code>
     * @return Whether the cancelTaskConfirmResponse field is set.
     */
    @java.lang.Override
    public boolean hasCancelTaskConfirmResponse() {
      return cancelTaskConfirmResponse_ != null;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskConfirmResponse cancel_task_confirm_response = 9;</code>
     * @return The cancelTaskConfirmResponse.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse getCancelTaskConfirmResponse() {
      return cancelTaskConfirmResponse_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse.getDefaultInstance() : cancelTaskConfirmResponse_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskConfirmResponse cancel_task_confirm_response = 9;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponseOrBuilder getCancelTaskConfirmResponseOrBuilder() {
      return getCancelTaskConfirmResponse();
    }

    public static final int BASE_LINE_TRAN_RESPONSE_FIELD_NUMBER = 12;
    private int baseLineTranResponse_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslationResponse base_line_tran_response = 12;</code>
     * @return The enum numeric value on the wire for baseLineTranResponse.
     */
    @java.lang.Override public int getBaseLineTranResponseValue() {
      return baseLineTranResponse_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslationResponse base_line_tran_response = 12;</code>
     * @return The baseLineTranResponse.
     */
    @java.lang.Override public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslationResponse getBaseLineTranResponse() {
      @SuppressWarnings("deprecation")
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslationResponse result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslationResponse.valueOf(baseLineTranResponse_);
      return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslationResponse.UNRECOGNIZED : result;
    }

    public static final int TRANSFER_LINE_RESPONSE_FIELD_NUMBER = 13;
    private int transferLineResponse_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLineResponse transfer_line_response = 13;</code>
     * @return The enum numeric value on the wire for transferLineResponse.
     */
    @java.lang.Override public int getTransferLineResponseValue() {
      return transferLineResponse_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLineResponse transfer_line_response = 13;</code>
     * @return The transferLineResponse.
     */
    @java.lang.Override public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLineResponse getTransferLineResponse() {
      @SuppressWarnings("deprecation")
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLineResponse result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLineResponse.valueOf(transferLineResponse_);
      return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLineResponse.UNRECOGNIZED : result;
    }

    public static final int RES_CONFIG_PARAM_FIELD_NUMBER = 15;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam resConfigParam_;
    /**
     * <pre>
     *设置和查询配置应答
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam res_config_param = 15;</code>
     * @return Whether the resConfigParam field is set.
     */
    @java.lang.Override
    public boolean hasResConfigParam() {
      return resConfigParam_ != null;
    }
    /**
     * <pre>
     *设置和查询配置应答
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam res_config_param = 15;</code>
     * @return The resConfigParam.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam getResConfigParam() {
      return resConfigParam_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam.getDefaultInstance() : resConfigParam_;
    }
    /**
     * <pre>
     *设置和查询配置应答
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam res_config_param = 15;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParamOrBuilder getResConfigParamOrBuilder() {
      return getResConfigParam();
    }

    public static final int VERSION_MODEL_INF_FIELD_NUMBER = 16;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo versionModelInf_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelInfo version_model_inf = 16;</code>
     * @return Whether the versionModelInf field is set.
     */
    @java.lang.Override
    public boolean hasVersionModelInf() {
      return versionModelInf_ != null;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelInfo version_model_inf = 16;</code>
     * @return The versionModelInf.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo getVersionModelInf() {
      return versionModelInf_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo.getDefaultInstance() : versionModelInf_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelInfo version_model_inf = 16;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfoOrBuilder getVersionModelInfOrBuilder() {
      return getVersionModelInf();
    }

    public static final int MANUAL_CONTROL_FIELD_NUMBER = 20;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse manualControl_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControlResponse manual_control = 20;</code>
     * @return Whether the manualControl field is set.
     */
    @java.lang.Override
    public boolean hasManualControl() {
      return manualControl_ != null;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControlResponse manual_control = 20;</code>
     * @return The manualControl.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse getManualControl() {
      return manualControl_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse.getDefaultInstance() : manualControl_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControlResponse manual_control = 20;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponseOrBuilder getManualControlOrBuilder() {
      return getManualControl();
    }

    public static final int CALIBRATION_RESPONSE_FIELD_NUMBER = 21;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse calibrationResponse_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationResponse calibration_response = 21;</code>
     * @return Whether the calibrationResponse field is set.
     */
    @java.lang.Override
    public boolean hasCalibrationResponse() {
      return calibrationResponse_ != null;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationResponse calibration_response = 21;</code>
     * @return The calibrationResponse.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse getCalibrationResponse() {
      return calibrationResponse_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse.getDefaultInstance() : calibrationResponse_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationResponse calibration_response = 21;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponseOrBuilder getCalibrationResponseOrBuilder() {
      return getCalibrationResponse();
    }

    public static final int CALIBRATION_CONFIRM_RESULT_FIELD_NUMBER = 22;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult calibrationConfirmResult_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationConfirmResult calibration_confirm_result = 22;</code>
     * @return Whether the calibrationConfirmResult field is set.
     */
    @java.lang.Override
    public boolean hasCalibrationConfirmResult() {
      return calibrationConfirmResult_ != null;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationConfirmResult calibration_confirm_result = 22;</code>
     * @return The calibrationConfirmResult.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult getCalibrationConfirmResult() {
      return calibrationConfirmResult_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult.getDefaultInstance() : calibrationConfirmResult_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationConfirmResult calibration_confirm_result = 22;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResultOrBuilder getCalibrationConfirmResultOrBuilder() {
      return getCalibrationConfirmResult();
    }

    public static final int TBOX_SET_RESULT_FIELD_NUMBER = 40;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult tboxSetResult_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSetResult tbox_set_result = 40;</code>
     * @return Whether the tboxSetResult field is set.
     */
    @java.lang.Override
    public boolean hasTboxSetResult() {
      return tboxSetResult_ != null;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSetResult tbox_set_result = 40;</code>
     * @return The tboxSetResult.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult getTboxSetResult() {
      return tboxSetResult_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult.getDefaultInstance() : tboxSetResult_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSetResult tbox_set_result = 40;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResultOrBuilder getTboxSetResultOrBuilder() {
      return getTboxSetResult();
    }

    public static final int TBOX_GET_RESULT_FIELD_NUMBER = 41;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse tboxGetResult_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGetResponse tbox_get_result = 41;</code>
     * @return Whether the tboxGetResult field is set.
     */
    @java.lang.Override
    public boolean hasTboxGetResult() {
      return tboxGetResult_ != null;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGetResponse tbox_get_result = 41;</code>
     * @return The tboxGetResult.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse getTboxGetResult() {
      return tboxGetResult_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse.getDefaultInstance() : tboxGetResult_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGetResponse tbox_get_result = 41;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponseOrBuilder getTboxGetResultOrBuilder() {
      return getTboxGetResult();
    }

    public static final int LAST_TASK_CONTINUE_FIELD_NUMBER = 50;
    private int lastTaskContinue_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTaskContinue last_task_continue = 50;</code>
     * @return The enum numeric value on the wire for lastTaskContinue.
     */
    @java.lang.Override public int getLastTaskContinueValue() {
      return lastTaskContinue_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTaskContinue last_task_continue = 50;</code>
     * @return The lastTaskContinue.
     */
    @java.lang.Override public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTaskContinue getLastTaskContinue() {
      @SuppressWarnings("deprecation")
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTaskContinue result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTaskContinue.valueOf(lastTaskContinue_);
      return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTaskContinue.UNRECOGNIZED : result;
    }

    public static final int TASK_FINISH_CONFIRM_FIELD_NUMBER = 51;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse taskFinishConfirm_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse task_finish_confirm = 51;</code>
     * @return Whether the taskFinishConfirm field is set.
     */
    @java.lang.Override
    public boolean hasTaskFinishConfirm() {
      return taskFinishConfirm_ != null;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse task_finish_confirm = 51;</code>
     * @return The taskFinishConfirm.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse getTaskFinishConfirm() {
      return taskFinishConfirm_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse.getDefaultInstance() : taskFinishConfirm_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse task_finish_confirm = 51;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponseOrBuilder getTaskFinishConfirmOrBuilder() {
      return getTaskFinishConfirm();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (atuopilotResponse_ != null) {
        output.writeMessage(1, getAtuopilotResponse());
      }
      if (workModeResponse_ != null) {
        output.writeMessage(2, getWorkModeResponse());
      }
      if (hmiModeResponse_ != null) {
        output.writeMessage(3, getHmiModeResponse());
      }
      if (cancelTaskResponse_ != null) {
        output.writeMessage(4, getCancelTaskResponse());
      }
      if (updateRoutePathResult_ != null) {
        output.writeMessage(5, getUpdateRoutePathResult());
      }
      if (routePath_ != null) {
        output.writeMessage(6, getRoutePath());
      }
      if (routeParamResponse_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamResponse.ROUTE_PARAM_NULL.getNumber()) {
        output.writeEnum(7, routeParamResponse_);
      }
      if (taskFinishConfirmResponse_ != null) {
        output.writeMessage(8, getTaskFinishConfirmResponse());
      }
      if (cancelTaskConfirmResponse_ != null) {
        output.writeMessage(9, getCancelTaskConfirmResponse());
      }
      if (baseLineTranResponse_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslationResponse.TRANS_NULL.getNumber()) {
        output.writeEnum(12, baseLineTranResponse_);
      }
      if (transferLineResponse_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLineResponse.TRANSFER_LINE_NULL.getNumber()) {
        output.writeEnum(13, transferLineResponse_);
      }
      if (resConfigParam_ != null) {
        output.writeMessage(15, getResConfigParam());
      }
      if (versionModelInf_ != null) {
        output.writeMessage(16, getVersionModelInf());
      }
      if (manualControl_ != null) {
        output.writeMessage(20, getManualControl());
      }
      if (calibrationResponse_ != null) {
        output.writeMessage(21, getCalibrationResponse());
      }
      if (calibrationConfirmResult_ != null) {
        output.writeMessage(22, getCalibrationConfirmResult());
      }
      if (tboxSetResult_ != null) {
        output.writeMessage(40, getTboxSetResult());
      }
      if (tboxGetResult_ != null) {
        output.writeMessage(41, getTboxGetResult());
      }
      if (lastTaskContinue_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTaskContinue.TASK_NULL.getNumber()) {
        output.writeEnum(50, lastTaskContinue_);
      }
      if (taskFinishConfirm_ != null) {
        output.writeMessage(51, getTaskFinishConfirm());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (atuopilotResponse_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAtuopilotResponse());
      }
      if (workModeResponse_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getWorkModeResponse());
      }
      if (hmiModeResponse_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getHmiModeResponse());
      }
      if (cancelTaskResponse_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getCancelTaskResponse());
      }
      if (updateRoutePathResult_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getUpdateRoutePathResult());
      }
      if (routePath_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getRoutePath());
      }
      if (routeParamResponse_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamResponse.ROUTE_PARAM_NULL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, routeParamResponse_);
      }
      if (taskFinishConfirmResponse_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getTaskFinishConfirmResponse());
      }
      if (cancelTaskConfirmResponse_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getCancelTaskConfirmResponse());
      }
      if (baseLineTranResponse_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslationResponse.TRANS_NULL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(12, baseLineTranResponse_);
      }
      if (transferLineResponse_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLineResponse.TRANSFER_LINE_NULL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(13, transferLineResponse_);
      }
      if (resConfigParam_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getResConfigParam());
      }
      if (versionModelInf_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, getVersionModelInf());
      }
      if (manualControl_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, getManualControl());
      }
      if (calibrationResponse_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, getCalibrationResponse());
      }
      if (calibrationConfirmResult_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, getCalibrationConfirmResult());
      }
      if (tboxSetResult_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(40, getTboxSetResult());
      }
      if (tboxGetResult_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(41, getTboxGetResult());
      }
      if (lastTaskContinue_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTaskContinue.TASK_NULL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(50, lastTaskContinue_);
      }
      if (taskFinishConfirm_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(51, getTaskFinishConfirm());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue) obj;

      if (hasAtuopilotResponse() != other.hasAtuopilotResponse()) return false;
      if (hasAtuopilotResponse()) {
        if (!getAtuopilotResponse()
            .equals(other.getAtuopilotResponse())) return false;
      }
      if (hasWorkModeResponse() != other.hasWorkModeResponse()) return false;
      if (hasWorkModeResponse()) {
        if (!getWorkModeResponse()
            .equals(other.getWorkModeResponse())) return false;
      }
      if (hasHmiModeResponse() != other.hasHmiModeResponse()) return false;
      if (hasHmiModeResponse()) {
        if (!getHmiModeResponse()
            .equals(other.getHmiModeResponse())) return false;
      }
      if (hasCancelTaskResponse() != other.hasCancelTaskResponse()) return false;
      if (hasCancelTaskResponse()) {
        if (!getCancelTaskResponse()
            .equals(other.getCancelTaskResponse())) return false;
      }
      if (hasUpdateRoutePathResult() != other.hasUpdateRoutePathResult()) return false;
      if (hasUpdateRoutePathResult()) {
        if (!getUpdateRoutePathResult()
            .equals(other.getUpdateRoutePathResult())) return false;
      }
      if (hasRoutePath() != other.hasRoutePath()) return false;
      if (hasRoutePath()) {
        if (!getRoutePath()
            .equals(other.getRoutePath())) return false;
      }
      if (routeParamResponse_ != other.routeParamResponse_) return false;
      if (hasTaskFinishConfirmResponse() != other.hasTaskFinishConfirmResponse()) return false;
      if (hasTaskFinishConfirmResponse()) {
        if (!getTaskFinishConfirmResponse()
            .equals(other.getTaskFinishConfirmResponse())) return false;
      }
      if (hasCancelTaskConfirmResponse() != other.hasCancelTaskConfirmResponse()) return false;
      if (hasCancelTaskConfirmResponse()) {
        if (!getCancelTaskConfirmResponse()
            .equals(other.getCancelTaskConfirmResponse())) return false;
      }
      if (baseLineTranResponse_ != other.baseLineTranResponse_) return false;
      if (transferLineResponse_ != other.transferLineResponse_) return false;
      if (hasResConfigParam() != other.hasResConfigParam()) return false;
      if (hasResConfigParam()) {
        if (!getResConfigParam()
            .equals(other.getResConfigParam())) return false;
      }
      if (hasVersionModelInf() != other.hasVersionModelInf()) return false;
      if (hasVersionModelInf()) {
        if (!getVersionModelInf()
            .equals(other.getVersionModelInf())) return false;
      }
      if (hasManualControl() != other.hasManualControl()) return false;
      if (hasManualControl()) {
        if (!getManualControl()
            .equals(other.getManualControl())) return false;
      }
      if (hasCalibrationResponse() != other.hasCalibrationResponse()) return false;
      if (hasCalibrationResponse()) {
        if (!getCalibrationResponse()
            .equals(other.getCalibrationResponse())) return false;
      }
      if (hasCalibrationConfirmResult() != other.hasCalibrationConfirmResult()) return false;
      if (hasCalibrationConfirmResult()) {
        if (!getCalibrationConfirmResult()
            .equals(other.getCalibrationConfirmResult())) return false;
      }
      if (hasTboxSetResult() != other.hasTboxSetResult()) return false;
      if (hasTboxSetResult()) {
        if (!getTboxSetResult()
            .equals(other.getTboxSetResult())) return false;
      }
      if (hasTboxGetResult() != other.hasTboxGetResult()) return false;
      if (hasTboxGetResult()) {
        if (!getTboxGetResult()
            .equals(other.getTboxGetResult())) return false;
      }
      if (lastTaskContinue_ != other.lastTaskContinue_) return false;
      if (hasTaskFinishConfirm() != other.hasTaskFinishConfirm()) return false;
      if (hasTaskFinishConfirm()) {
        if (!getTaskFinishConfirm()
            .equals(other.getTaskFinishConfirm())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAtuopilotResponse()) {
        hash = (37 * hash) + ATUOPILOT_RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + getAtuopilotResponse().hashCode();
      }
      if (hasWorkModeResponse()) {
        hash = (37 * hash) + WORK_MODE_RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + getWorkModeResponse().hashCode();
      }
      if (hasHmiModeResponse()) {
        hash = (37 * hash) + HMI_MODE_RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + getHmiModeResponse().hashCode();
      }
      if (hasCancelTaskResponse()) {
        hash = (37 * hash) + CANCEL_TASK_RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + getCancelTaskResponse().hashCode();
      }
      if (hasUpdateRoutePathResult()) {
        hash = (37 * hash) + UPDATE_ROUTE_PATH_RESULT_FIELD_NUMBER;
        hash = (53 * hash) + getUpdateRoutePathResult().hashCode();
      }
      if (hasRoutePath()) {
        hash = (37 * hash) + ROUTE_PATH_FIELD_NUMBER;
        hash = (53 * hash) + getRoutePath().hashCode();
      }
      hash = (37 * hash) + ROUTE_PARAM_RESPONSE_FIELD_NUMBER;
      hash = (53 * hash) + routeParamResponse_;
      if (hasTaskFinishConfirmResponse()) {
        hash = (37 * hash) + TASK_FINISH_CONFIRM_RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + getTaskFinishConfirmResponse().hashCode();
      }
      if (hasCancelTaskConfirmResponse()) {
        hash = (37 * hash) + CANCEL_TASK_CONFIRM_RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + getCancelTaskConfirmResponse().hashCode();
      }
      hash = (37 * hash) + BASE_LINE_TRAN_RESPONSE_FIELD_NUMBER;
      hash = (53 * hash) + baseLineTranResponse_;
      hash = (37 * hash) + TRANSFER_LINE_RESPONSE_FIELD_NUMBER;
      hash = (53 * hash) + transferLineResponse_;
      if (hasResConfigParam()) {
        hash = (37 * hash) + RES_CONFIG_PARAM_FIELD_NUMBER;
        hash = (53 * hash) + getResConfigParam().hashCode();
      }
      if (hasVersionModelInf()) {
        hash = (37 * hash) + VERSION_MODEL_INF_FIELD_NUMBER;
        hash = (53 * hash) + getVersionModelInf().hashCode();
      }
      if (hasManualControl()) {
        hash = (37 * hash) + MANUAL_CONTROL_FIELD_NUMBER;
        hash = (53 * hash) + getManualControl().hashCode();
      }
      if (hasCalibrationResponse()) {
        hash = (37 * hash) + CALIBRATION_RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + getCalibrationResponse().hashCode();
      }
      if (hasCalibrationConfirmResult()) {
        hash = (37 * hash) + CALIBRATION_CONFIRM_RESULT_FIELD_NUMBER;
        hash = (53 * hash) + getCalibrationConfirmResult().hashCode();
      }
      if (hasTboxSetResult()) {
        hash = (37 * hash) + TBOX_SET_RESULT_FIELD_NUMBER;
        hash = (53 * hash) + getTboxSetResult().hashCode();
      }
      if (hasTboxGetResult()) {
        hash = (37 * hash) + TBOX_GET_RESULT_FIELD_NUMBER;
        hash = (53 * hash) + getTboxGetResult().hashCode();
      }
      hash = (37 * hash) + LAST_TASK_CONTINUE_FIELD_NUMBER;
      hash = (53 * hash) + lastTaskContinue_;
      if (hasTaskFinishConfirm()) {
        hash = (37 * hash) + TASK_FINISH_CONFIRM_FIELD_NUMBER;
        hash = (53 * hash) + getTaskFinishConfirm().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ResponseValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ResponseValue)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ResponseValue_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ResponseValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (atuopilotResponseBuilder_ == null) {
          atuopilotResponse_ = null;
        } else {
          atuopilotResponse_ = null;
          atuopilotResponseBuilder_ = null;
        }
        if (workModeResponseBuilder_ == null) {
          workModeResponse_ = null;
        } else {
          workModeResponse_ = null;
          workModeResponseBuilder_ = null;
        }
        if (hmiModeResponseBuilder_ == null) {
          hmiModeResponse_ = null;
        } else {
          hmiModeResponse_ = null;
          hmiModeResponseBuilder_ = null;
        }
        if (cancelTaskResponseBuilder_ == null) {
          cancelTaskResponse_ = null;
        } else {
          cancelTaskResponse_ = null;
          cancelTaskResponseBuilder_ = null;
        }
        if (updateRoutePathResultBuilder_ == null) {
          updateRoutePathResult_ = null;
        } else {
          updateRoutePathResult_ = null;
          updateRoutePathResultBuilder_ = null;
        }
        if (routePathBuilder_ == null) {
          routePath_ = null;
        } else {
          routePath_ = null;
          routePathBuilder_ = null;
        }
        routeParamResponse_ = 0;

        if (taskFinishConfirmResponseBuilder_ == null) {
          taskFinishConfirmResponse_ = null;
        } else {
          taskFinishConfirmResponse_ = null;
          taskFinishConfirmResponseBuilder_ = null;
        }
        if (cancelTaskConfirmResponseBuilder_ == null) {
          cancelTaskConfirmResponse_ = null;
        } else {
          cancelTaskConfirmResponse_ = null;
          cancelTaskConfirmResponseBuilder_ = null;
        }
        baseLineTranResponse_ = 0;

        transferLineResponse_ = 0;

        if (resConfigParamBuilder_ == null) {
          resConfigParam_ = null;
        } else {
          resConfigParam_ = null;
          resConfigParamBuilder_ = null;
        }
        if (versionModelInfBuilder_ == null) {
          versionModelInf_ = null;
        } else {
          versionModelInf_ = null;
          versionModelInfBuilder_ = null;
        }
        if (manualControlBuilder_ == null) {
          manualControl_ = null;
        } else {
          manualControl_ = null;
          manualControlBuilder_ = null;
        }
        if (calibrationResponseBuilder_ == null) {
          calibrationResponse_ = null;
        } else {
          calibrationResponse_ = null;
          calibrationResponseBuilder_ = null;
        }
        if (calibrationConfirmResultBuilder_ == null) {
          calibrationConfirmResult_ = null;
        } else {
          calibrationConfirmResult_ = null;
          calibrationConfirmResultBuilder_ = null;
        }
        if (tboxSetResultBuilder_ == null) {
          tboxSetResult_ = null;
        } else {
          tboxSetResult_ = null;
          tboxSetResultBuilder_ = null;
        }
        if (tboxGetResultBuilder_ == null) {
          tboxGetResult_ = null;
        } else {
          tboxGetResult_ = null;
          tboxGetResultBuilder_ = null;
        }
        lastTaskContinue_ = 0;

        if (taskFinishConfirmBuilder_ == null) {
          taskFinishConfirm_ = null;
        } else {
          taskFinishConfirm_ = null;
          taskFinishConfirmBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ResponseValue_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue(this);
        if (atuopilotResponseBuilder_ == null) {
          result.atuopilotResponse_ = atuopilotResponse_;
        } else {
          result.atuopilotResponse_ = atuopilotResponseBuilder_.build();
        }
        if (workModeResponseBuilder_ == null) {
          result.workModeResponse_ = workModeResponse_;
        } else {
          result.workModeResponse_ = workModeResponseBuilder_.build();
        }
        if (hmiModeResponseBuilder_ == null) {
          result.hmiModeResponse_ = hmiModeResponse_;
        } else {
          result.hmiModeResponse_ = hmiModeResponseBuilder_.build();
        }
        if (cancelTaskResponseBuilder_ == null) {
          result.cancelTaskResponse_ = cancelTaskResponse_;
        } else {
          result.cancelTaskResponse_ = cancelTaskResponseBuilder_.build();
        }
        if (updateRoutePathResultBuilder_ == null) {
          result.updateRoutePathResult_ = updateRoutePathResult_;
        } else {
          result.updateRoutePathResult_ = updateRoutePathResultBuilder_.build();
        }
        if (routePathBuilder_ == null) {
          result.routePath_ = routePath_;
        } else {
          result.routePath_ = routePathBuilder_.build();
        }
        result.routeParamResponse_ = routeParamResponse_;
        if (taskFinishConfirmResponseBuilder_ == null) {
          result.taskFinishConfirmResponse_ = taskFinishConfirmResponse_;
        } else {
          result.taskFinishConfirmResponse_ = taskFinishConfirmResponseBuilder_.build();
        }
        if (cancelTaskConfirmResponseBuilder_ == null) {
          result.cancelTaskConfirmResponse_ = cancelTaskConfirmResponse_;
        } else {
          result.cancelTaskConfirmResponse_ = cancelTaskConfirmResponseBuilder_.build();
        }
        result.baseLineTranResponse_ = baseLineTranResponse_;
        result.transferLineResponse_ = transferLineResponse_;
        if (resConfigParamBuilder_ == null) {
          result.resConfigParam_ = resConfigParam_;
        } else {
          result.resConfigParam_ = resConfigParamBuilder_.build();
        }
        if (versionModelInfBuilder_ == null) {
          result.versionModelInf_ = versionModelInf_;
        } else {
          result.versionModelInf_ = versionModelInfBuilder_.build();
        }
        if (manualControlBuilder_ == null) {
          result.manualControl_ = manualControl_;
        } else {
          result.manualControl_ = manualControlBuilder_.build();
        }
        if (calibrationResponseBuilder_ == null) {
          result.calibrationResponse_ = calibrationResponse_;
        } else {
          result.calibrationResponse_ = calibrationResponseBuilder_.build();
        }
        if (calibrationConfirmResultBuilder_ == null) {
          result.calibrationConfirmResult_ = calibrationConfirmResult_;
        } else {
          result.calibrationConfirmResult_ = calibrationConfirmResultBuilder_.build();
        }
        if (tboxSetResultBuilder_ == null) {
          result.tboxSetResult_ = tboxSetResult_;
        } else {
          result.tboxSetResult_ = tboxSetResultBuilder_.build();
        }
        if (tboxGetResultBuilder_ == null) {
          result.tboxGetResult_ = tboxGetResult_;
        } else {
          result.tboxGetResult_ = tboxGetResultBuilder_.build();
        }
        result.lastTaskContinue_ = lastTaskContinue_;
        if (taskFinishConfirmBuilder_ == null) {
          result.taskFinishConfirm_ = taskFinishConfirm_;
        } else {
          result.taskFinishConfirm_ = taskFinishConfirmBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue.getDefaultInstance()) return this;
        if (other.hasAtuopilotResponse()) {
          mergeAtuopilotResponse(other.getAtuopilotResponse());
        }
        if (other.hasWorkModeResponse()) {
          mergeWorkModeResponse(other.getWorkModeResponse());
        }
        if (other.hasHmiModeResponse()) {
          mergeHmiModeResponse(other.getHmiModeResponse());
        }
        if (other.hasCancelTaskResponse()) {
          mergeCancelTaskResponse(other.getCancelTaskResponse());
        }
        if (other.hasUpdateRoutePathResult()) {
          mergeUpdateRoutePathResult(other.getUpdateRoutePathResult());
        }
        if (other.hasRoutePath()) {
          mergeRoutePath(other.getRoutePath());
        }
        if (other.routeParamResponse_ != 0) {
          setRouteParamResponseValue(other.getRouteParamResponseValue());
        }
        if (other.hasTaskFinishConfirmResponse()) {
          mergeTaskFinishConfirmResponse(other.getTaskFinishConfirmResponse());
        }
        if (other.hasCancelTaskConfirmResponse()) {
          mergeCancelTaskConfirmResponse(other.getCancelTaskConfirmResponse());
        }
        if (other.baseLineTranResponse_ != 0) {
          setBaseLineTranResponseValue(other.getBaseLineTranResponseValue());
        }
        if (other.transferLineResponse_ != 0) {
          setTransferLineResponseValue(other.getTransferLineResponseValue());
        }
        if (other.hasResConfigParam()) {
          mergeResConfigParam(other.getResConfigParam());
        }
        if (other.hasVersionModelInf()) {
          mergeVersionModelInf(other.getVersionModelInf());
        }
        if (other.hasManualControl()) {
          mergeManualControl(other.getManualControl());
        }
        if (other.hasCalibrationResponse()) {
          mergeCalibrationResponse(other.getCalibrationResponse());
        }
        if (other.hasCalibrationConfirmResult()) {
          mergeCalibrationConfirmResult(other.getCalibrationConfirmResult());
        }
        if (other.hasTboxSetResult()) {
          mergeTboxSetResult(other.getTboxSetResult());
        }
        if (other.hasTboxGetResult()) {
          mergeTboxGetResult(other.getTboxGetResult());
        }
        if (other.lastTaskContinue_ != 0) {
          setLastTaskContinueValue(other.getLastTaskContinueValue());
        }
        if (other.hasTaskFinishConfirm()) {
          mergeTaskFinishConfirm(other.getTaskFinishConfirm());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse atuopilotResponse_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponseOrBuilder> atuopilotResponseBuilder_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutoPilotResponse atuopilot_response = 1;</code>
       * @return Whether the atuopilotResponse field is set.
       */
      public boolean hasAtuopilotResponse() {
        return atuopilotResponseBuilder_ != null || atuopilotResponse_ != null;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutoPilotResponse atuopilot_response = 1;</code>
       * @return The atuopilotResponse.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse getAtuopilotResponse() {
        if (atuopilotResponseBuilder_ == null) {
          return atuopilotResponse_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse.getDefaultInstance() : atuopilotResponse_;
        } else {
          return atuopilotResponseBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutoPilotResponse atuopilot_response = 1;</code>
       */
      public Builder setAtuopilotResponse(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse value) {
        if (atuopilotResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          atuopilotResponse_ = value;
          onChanged();
        } else {
          atuopilotResponseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutoPilotResponse atuopilot_response = 1;</code>
       */
      public Builder setAtuopilotResponse(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse.Builder builderForValue) {
        if (atuopilotResponseBuilder_ == null) {
          atuopilotResponse_ = builderForValue.build();
          onChanged();
        } else {
          atuopilotResponseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutoPilotResponse atuopilot_response = 1;</code>
       */
      public Builder mergeAtuopilotResponse(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse value) {
        if (atuopilotResponseBuilder_ == null) {
          if (atuopilotResponse_ != null) {
            atuopilotResponse_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse.newBuilder(atuopilotResponse_).mergeFrom(value).buildPartial();
          } else {
            atuopilotResponse_ = value;
          }
          onChanged();
        } else {
          atuopilotResponseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutoPilotResponse atuopilot_response = 1;</code>
       */
      public Builder clearAtuopilotResponse() {
        if (atuopilotResponseBuilder_ == null) {
          atuopilotResponse_ = null;
          onChanged();
        } else {
          atuopilotResponse_ = null;
          atuopilotResponseBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutoPilotResponse atuopilot_response = 1;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse.Builder getAtuopilotResponseBuilder() {
        
        onChanged();
        return getAtuopilotResponseFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutoPilotResponse atuopilot_response = 1;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponseOrBuilder getAtuopilotResponseOrBuilder() {
        if (atuopilotResponseBuilder_ != null) {
          return atuopilotResponseBuilder_.getMessageOrBuilder();
        } else {
          return atuopilotResponse_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse.getDefaultInstance() : atuopilotResponse_;
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutoPilotResponse atuopilot_response = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponseOrBuilder> 
          getAtuopilotResponseFieldBuilder() {
        if (atuopilotResponseBuilder_ == null) {
          atuopilotResponseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponseOrBuilder>(
                  getAtuopilotResponse(),
                  getParentForChildren(),
                  isClean());
          atuopilotResponse_ = null;
        }
        return atuopilotResponseBuilder_;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse workModeResponse_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponseOrBuilder> workModeResponseBuilder_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkModeResponse work_mode_response = 2;</code>
       * @return Whether the workModeResponse field is set.
       */
      public boolean hasWorkModeResponse() {
        return workModeResponseBuilder_ != null || workModeResponse_ != null;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkModeResponse work_mode_response = 2;</code>
       * @return The workModeResponse.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse getWorkModeResponse() {
        if (workModeResponseBuilder_ == null) {
          return workModeResponse_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse.getDefaultInstance() : workModeResponse_;
        } else {
          return workModeResponseBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkModeResponse work_mode_response = 2;</code>
       */
      public Builder setWorkModeResponse(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse value) {
        if (workModeResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          workModeResponse_ = value;
          onChanged();
        } else {
          workModeResponseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkModeResponse work_mode_response = 2;</code>
       */
      public Builder setWorkModeResponse(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse.Builder builderForValue) {
        if (workModeResponseBuilder_ == null) {
          workModeResponse_ = builderForValue.build();
          onChanged();
        } else {
          workModeResponseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkModeResponse work_mode_response = 2;</code>
       */
      public Builder mergeWorkModeResponse(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse value) {
        if (workModeResponseBuilder_ == null) {
          if (workModeResponse_ != null) {
            workModeResponse_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse.newBuilder(workModeResponse_).mergeFrom(value).buildPartial();
          } else {
            workModeResponse_ = value;
          }
          onChanged();
        } else {
          workModeResponseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkModeResponse work_mode_response = 2;</code>
       */
      public Builder clearWorkModeResponse() {
        if (workModeResponseBuilder_ == null) {
          workModeResponse_ = null;
          onChanged();
        } else {
          workModeResponse_ = null;
          workModeResponseBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkModeResponse work_mode_response = 2;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse.Builder getWorkModeResponseBuilder() {
        
        onChanged();
        return getWorkModeResponseFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkModeResponse work_mode_response = 2;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponseOrBuilder getWorkModeResponseOrBuilder() {
        if (workModeResponseBuilder_ != null) {
          return workModeResponseBuilder_.getMessageOrBuilder();
        } else {
          return workModeResponse_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse.getDefaultInstance() : workModeResponse_;
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkModeResponse work_mode_response = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponseOrBuilder> 
          getWorkModeResponseFieldBuilder() {
        if (workModeResponseBuilder_ == null) {
          workModeResponseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponseOrBuilder>(
                  getWorkModeResponse(),
                  getParentForChildren(),
                  isClean());
          workModeResponse_ = null;
        }
        return workModeResponseBuilder_;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse hmiModeResponse_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponseOrBuilder> hmiModeResponseBuilder_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiResponse hmi_mode_response = 3;</code>
       * @return Whether the hmiModeResponse field is set.
       */
      public boolean hasHmiModeResponse() {
        return hmiModeResponseBuilder_ != null || hmiModeResponse_ != null;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiResponse hmi_mode_response = 3;</code>
       * @return The hmiModeResponse.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse getHmiModeResponse() {
        if (hmiModeResponseBuilder_ == null) {
          return hmiModeResponse_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse.getDefaultInstance() : hmiModeResponse_;
        } else {
          return hmiModeResponseBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiResponse hmi_mode_response = 3;</code>
       */
      public Builder setHmiModeResponse(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse value) {
        if (hmiModeResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          hmiModeResponse_ = value;
          onChanged();
        } else {
          hmiModeResponseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiResponse hmi_mode_response = 3;</code>
       */
      public Builder setHmiModeResponse(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse.Builder builderForValue) {
        if (hmiModeResponseBuilder_ == null) {
          hmiModeResponse_ = builderForValue.build();
          onChanged();
        } else {
          hmiModeResponseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiResponse hmi_mode_response = 3;</code>
       */
      public Builder mergeHmiModeResponse(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse value) {
        if (hmiModeResponseBuilder_ == null) {
          if (hmiModeResponse_ != null) {
            hmiModeResponse_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse.newBuilder(hmiModeResponse_).mergeFrom(value).buildPartial();
          } else {
            hmiModeResponse_ = value;
          }
          onChanged();
        } else {
          hmiModeResponseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiResponse hmi_mode_response = 3;</code>
       */
      public Builder clearHmiModeResponse() {
        if (hmiModeResponseBuilder_ == null) {
          hmiModeResponse_ = null;
          onChanged();
        } else {
          hmiModeResponse_ = null;
          hmiModeResponseBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiResponse hmi_mode_response = 3;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse.Builder getHmiModeResponseBuilder() {
        
        onChanged();
        return getHmiModeResponseFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiResponse hmi_mode_response = 3;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponseOrBuilder getHmiModeResponseOrBuilder() {
        if (hmiModeResponseBuilder_ != null) {
          return hmiModeResponseBuilder_.getMessageOrBuilder();
        } else {
          return hmiModeResponse_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse.getDefaultInstance() : hmiModeResponse_;
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiResponse hmi_mode_response = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponseOrBuilder> 
          getHmiModeResponseFieldBuilder() {
        if (hmiModeResponseBuilder_ == null) {
          hmiModeResponseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponseOrBuilder>(
                  getHmiModeResponse(),
                  getParentForChildren(),
                  isClean());
          hmiModeResponse_ = null;
        }
        return hmiModeResponseBuilder_;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse cancelTaskResponse_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponseOrBuilder> cancelTaskResponseBuilder_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskResponse cancel_task_response = 4;</code>
       * @return Whether the cancelTaskResponse field is set.
       */
      public boolean hasCancelTaskResponse() {
        return cancelTaskResponseBuilder_ != null || cancelTaskResponse_ != null;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskResponse cancel_task_response = 4;</code>
       * @return The cancelTaskResponse.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse getCancelTaskResponse() {
        if (cancelTaskResponseBuilder_ == null) {
          return cancelTaskResponse_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse.getDefaultInstance() : cancelTaskResponse_;
        } else {
          return cancelTaskResponseBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskResponse cancel_task_response = 4;</code>
       */
      public Builder setCancelTaskResponse(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse value) {
        if (cancelTaskResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cancelTaskResponse_ = value;
          onChanged();
        } else {
          cancelTaskResponseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskResponse cancel_task_response = 4;</code>
       */
      public Builder setCancelTaskResponse(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse.Builder builderForValue) {
        if (cancelTaskResponseBuilder_ == null) {
          cancelTaskResponse_ = builderForValue.build();
          onChanged();
        } else {
          cancelTaskResponseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskResponse cancel_task_response = 4;</code>
       */
      public Builder mergeCancelTaskResponse(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse value) {
        if (cancelTaskResponseBuilder_ == null) {
          if (cancelTaskResponse_ != null) {
            cancelTaskResponse_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse.newBuilder(cancelTaskResponse_).mergeFrom(value).buildPartial();
          } else {
            cancelTaskResponse_ = value;
          }
          onChanged();
        } else {
          cancelTaskResponseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskResponse cancel_task_response = 4;</code>
       */
      public Builder clearCancelTaskResponse() {
        if (cancelTaskResponseBuilder_ == null) {
          cancelTaskResponse_ = null;
          onChanged();
        } else {
          cancelTaskResponse_ = null;
          cancelTaskResponseBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskResponse cancel_task_response = 4;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse.Builder getCancelTaskResponseBuilder() {
        
        onChanged();
        return getCancelTaskResponseFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskResponse cancel_task_response = 4;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponseOrBuilder getCancelTaskResponseOrBuilder() {
        if (cancelTaskResponseBuilder_ != null) {
          return cancelTaskResponseBuilder_.getMessageOrBuilder();
        } else {
          return cancelTaskResponse_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse.getDefaultInstance() : cancelTaskResponse_;
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskResponse cancel_task_response = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponseOrBuilder> 
          getCancelTaskResponseFieldBuilder() {
        if (cancelTaskResponseBuilder_ == null) {
          cancelTaskResponseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponseOrBuilder>(
                  getCancelTaskResponse(),
                  getParentForChildren(),
                  isClean());
          cancelTaskResponse_ = null;
        }
        return cancelTaskResponseBuilder_;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult updateRoutePathResult_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResultOrBuilder> updateRoutePathResultBuilder_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePathResult update_route_path_result = 5;</code>
       * @return Whether the updateRoutePathResult field is set.
       */
      public boolean hasUpdateRoutePathResult() {
        return updateRoutePathResultBuilder_ != null || updateRoutePathResult_ != null;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePathResult update_route_path_result = 5;</code>
       * @return The updateRoutePathResult.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult getUpdateRoutePathResult() {
        if (updateRoutePathResultBuilder_ == null) {
          return updateRoutePathResult_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult.getDefaultInstance() : updateRoutePathResult_;
        } else {
          return updateRoutePathResultBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePathResult update_route_path_result = 5;</code>
       */
      public Builder setUpdateRoutePathResult(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult value) {
        if (updateRoutePathResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updateRoutePathResult_ = value;
          onChanged();
        } else {
          updateRoutePathResultBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePathResult update_route_path_result = 5;</code>
       */
      public Builder setUpdateRoutePathResult(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult.Builder builderForValue) {
        if (updateRoutePathResultBuilder_ == null) {
          updateRoutePathResult_ = builderForValue.build();
          onChanged();
        } else {
          updateRoutePathResultBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePathResult update_route_path_result = 5;</code>
       */
      public Builder mergeUpdateRoutePathResult(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult value) {
        if (updateRoutePathResultBuilder_ == null) {
          if (updateRoutePathResult_ != null) {
            updateRoutePathResult_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult.newBuilder(updateRoutePathResult_).mergeFrom(value).buildPartial();
          } else {
            updateRoutePathResult_ = value;
          }
          onChanged();
        } else {
          updateRoutePathResultBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePathResult update_route_path_result = 5;</code>
       */
      public Builder clearUpdateRoutePathResult() {
        if (updateRoutePathResultBuilder_ == null) {
          updateRoutePathResult_ = null;
          onChanged();
        } else {
          updateRoutePathResult_ = null;
          updateRoutePathResultBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePathResult update_route_path_result = 5;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult.Builder getUpdateRoutePathResultBuilder() {
        
        onChanged();
        return getUpdateRoutePathResultFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePathResult update_route_path_result = 5;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResultOrBuilder getUpdateRoutePathResultOrBuilder() {
        if (updateRoutePathResultBuilder_ != null) {
          return updateRoutePathResultBuilder_.getMessageOrBuilder();
        } else {
          return updateRoutePathResult_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult.getDefaultInstance() : updateRoutePathResult_;
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePathResult update_route_path_result = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResultOrBuilder> 
          getUpdateRoutePathResultFieldBuilder() {
        if (updateRoutePathResultBuilder_ == null) {
          updateRoutePathResultBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResultOrBuilder>(
                  getUpdateRoutePathResult(),
                  getParentForChildren(),
                  isClean());
          updateRoutePathResult_ = null;
        }
        return updateRoutePathResultBuilder_;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath routePath_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePathOrBuilder> routePathBuilder_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath route_path = 6;</code>
       * @return Whether the routePath field is set.
       */
      public boolean hasRoutePath() {
        return routePathBuilder_ != null || routePath_ != null;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath route_path = 6;</code>
       * @return The routePath.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath getRoutePath() {
        if (routePathBuilder_ == null) {
          return routePath_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.getDefaultInstance() : routePath_;
        } else {
          return routePathBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath route_path = 6;</code>
       */
      public Builder setRoutePath(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath value) {
        if (routePathBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          routePath_ = value;
          onChanged();
        } else {
          routePathBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath route_path = 6;</code>
       */
      public Builder setRoutePath(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.Builder builderForValue) {
        if (routePathBuilder_ == null) {
          routePath_ = builderForValue.build();
          onChanged();
        } else {
          routePathBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath route_path = 6;</code>
       */
      public Builder mergeRoutePath(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath value) {
        if (routePathBuilder_ == null) {
          if (routePath_ != null) {
            routePath_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.newBuilder(routePath_).mergeFrom(value).buildPartial();
          } else {
            routePath_ = value;
          }
          onChanged();
        } else {
          routePathBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath route_path = 6;</code>
       */
      public Builder clearRoutePath() {
        if (routePathBuilder_ == null) {
          routePath_ = null;
          onChanged();
        } else {
          routePath_ = null;
          routePathBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath route_path = 6;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.Builder getRoutePathBuilder() {
        
        onChanged();
        return getRoutePathFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath route_path = 6;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePathOrBuilder getRoutePathOrBuilder() {
        if (routePathBuilder_ != null) {
          return routePathBuilder_.getMessageOrBuilder();
        } else {
          return routePath_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.getDefaultInstance() : routePath_;
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath route_path = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePathOrBuilder> 
          getRoutePathFieldBuilder() {
        if (routePathBuilder_ == null) {
          routePathBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePathOrBuilder>(
                  getRoutePath(),
                  getParentForChildren(),
                  isClean());
          routePath_ = null;
        }
        return routePathBuilder_;
      }

      private int routeParamResponse_ = 0;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParamResponse route_param_response = 7;</code>
       * @return The enum numeric value on the wire for routeParamResponse.
       */
      @java.lang.Override public int getRouteParamResponseValue() {
        return routeParamResponse_;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParamResponse route_param_response = 7;</code>
       * @param value The enum numeric value on the wire for routeParamResponse to set.
       * @return This builder for chaining.
       */
      public Builder setRouteParamResponseValue(int value) {
        
        routeParamResponse_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParamResponse route_param_response = 7;</code>
       * @return The routeParamResponse.
       */
      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamResponse getRouteParamResponse() {
        @SuppressWarnings("deprecation")
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamResponse result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamResponse.valueOf(routeParamResponse_);
        return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamResponse.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParamResponse route_param_response = 7;</code>
       * @param value The routeParamResponse to set.
       * @return This builder for chaining.
       */
      public Builder setRouteParamResponse(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        routeParamResponse_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParamResponse route_param_response = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearRouteParamResponse() {
        
        routeParamResponse_ = 0;
        onChanged();
        return this;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse taskFinishConfirmResponse_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponseOrBuilder> taskFinishConfirmResponseBuilder_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse task_finish_confirm_response = 8;</code>
       * @return Whether the taskFinishConfirmResponse field is set.
       */
      public boolean hasTaskFinishConfirmResponse() {
        return taskFinishConfirmResponseBuilder_ != null || taskFinishConfirmResponse_ != null;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse task_finish_confirm_response = 8;</code>
       * @return The taskFinishConfirmResponse.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse getTaskFinishConfirmResponse() {
        if (taskFinishConfirmResponseBuilder_ == null) {
          return taskFinishConfirmResponse_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse.getDefaultInstance() : taskFinishConfirmResponse_;
        } else {
          return taskFinishConfirmResponseBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse task_finish_confirm_response = 8;</code>
       */
      public Builder setTaskFinishConfirmResponse(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse value) {
        if (taskFinishConfirmResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          taskFinishConfirmResponse_ = value;
          onChanged();
        } else {
          taskFinishConfirmResponseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse task_finish_confirm_response = 8;</code>
       */
      public Builder setTaskFinishConfirmResponse(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse.Builder builderForValue) {
        if (taskFinishConfirmResponseBuilder_ == null) {
          taskFinishConfirmResponse_ = builderForValue.build();
          onChanged();
        } else {
          taskFinishConfirmResponseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse task_finish_confirm_response = 8;</code>
       */
      public Builder mergeTaskFinishConfirmResponse(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse value) {
        if (taskFinishConfirmResponseBuilder_ == null) {
          if (taskFinishConfirmResponse_ != null) {
            taskFinishConfirmResponse_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse.newBuilder(taskFinishConfirmResponse_).mergeFrom(value).buildPartial();
          } else {
            taskFinishConfirmResponse_ = value;
          }
          onChanged();
        } else {
          taskFinishConfirmResponseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse task_finish_confirm_response = 8;</code>
       */
      public Builder clearTaskFinishConfirmResponse() {
        if (taskFinishConfirmResponseBuilder_ == null) {
          taskFinishConfirmResponse_ = null;
          onChanged();
        } else {
          taskFinishConfirmResponse_ = null;
          taskFinishConfirmResponseBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse task_finish_confirm_response = 8;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse.Builder getTaskFinishConfirmResponseBuilder() {
        
        onChanged();
        return getTaskFinishConfirmResponseFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse task_finish_confirm_response = 8;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponseOrBuilder getTaskFinishConfirmResponseOrBuilder() {
        if (taskFinishConfirmResponseBuilder_ != null) {
          return taskFinishConfirmResponseBuilder_.getMessageOrBuilder();
        } else {
          return taskFinishConfirmResponse_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse.getDefaultInstance() : taskFinishConfirmResponse_;
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse task_finish_confirm_response = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponseOrBuilder> 
          getTaskFinishConfirmResponseFieldBuilder() {
        if (taskFinishConfirmResponseBuilder_ == null) {
          taskFinishConfirmResponseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponseOrBuilder>(
                  getTaskFinishConfirmResponse(),
                  getParentForChildren(),
                  isClean());
          taskFinishConfirmResponse_ = null;
        }
        return taskFinishConfirmResponseBuilder_;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse cancelTaskConfirmResponse_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponseOrBuilder> cancelTaskConfirmResponseBuilder_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskConfirmResponse cancel_task_confirm_response = 9;</code>
       * @return Whether the cancelTaskConfirmResponse field is set.
       */
      public boolean hasCancelTaskConfirmResponse() {
        return cancelTaskConfirmResponseBuilder_ != null || cancelTaskConfirmResponse_ != null;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskConfirmResponse cancel_task_confirm_response = 9;</code>
       * @return The cancelTaskConfirmResponse.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse getCancelTaskConfirmResponse() {
        if (cancelTaskConfirmResponseBuilder_ == null) {
          return cancelTaskConfirmResponse_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse.getDefaultInstance() : cancelTaskConfirmResponse_;
        } else {
          return cancelTaskConfirmResponseBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskConfirmResponse cancel_task_confirm_response = 9;</code>
       */
      public Builder setCancelTaskConfirmResponse(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse value) {
        if (cancelTaskConfirmResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cancelTaskConfirmResponse_ = value;
          onChanged();
        } else {
          cancelTaskConfirmResponseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskConfirmResponse cancel_task_confirm_response = 9;</code>
       */
      public Builder setCancelTaskConfirmResponse(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse.Builder builderForValue) {
        if (cancelTaskConfirmResponseBuilder_ == null) {
          cancelTaskConfirmResponse_ = builderForValue.build();
          onChanged();
        } else {
          cancelTaskConfirmResponseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskConfirmResponse cancel_task_confirm_response = 9;</code>
       */
      public Builder mergeCancelTaskConfirmResponse(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse value) {
        if (cancelTaskConfirmResponseBuilder_ == null) {
          if (cancelTaskConfirmResponse_ != null) {
            cancelTaskConfirmResponse_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse.newBuilder(cancelTaskConfirmResponse_).mergeFrom(value).buildPartial();
          } else {
            cancelTaskConfirmResponse_ = value;
          }
          onChanged();
        } else {
          cancelTaskConfirmResponseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskConfirmResponse cancel_task_confirm_response = 9;</code>
       */
      public Builder clearCancelTaskConfirmResponse() {
        if (cancelTaskConfirmResponseBuilder_ == null) {
          cancelTaskConfirmResponse_ = null;
          onChanged();
        } else {
          cancelTaskConfirmResponse_ = null;
          cancelTaskConfirmResponseBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskConfirmResponse cancel_task_confirm_response = 9;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse.Builder getCancelTaskConfirmResponseBuilder() {
        
        onChanged();
        return getCancelTaskConfirmResponseFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskConfirmResponse cancel_task_confirm_response = 9;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponseOrBuilder getCancelTaskConfirmResponseOrBuilder() {
        if (cancelTaskConfirmResponseBuilder_ != null) {
          return cancelTaskConfirmResponseBuilder_.getMessageOrBuilder();
        } else {
          return cancelTaskConfirmResponse_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse.getDefaultInstance() : cancelTaskConfirmResponse_;
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskConfirmResponse cancel_task_confirm_response = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponseOrBuilder> 
          getCancelTaskConfirmResponseFieldBuilder() {
        if (cancelTaskConfirmResponseBuilder_ == null) {
          cancelTaskConfirmResponseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponseOrBuilder>(
                  getCancelTaskConfirmResponse(),
                  getParentForChildren(),
                  isClean());
          cancelTaskConfirmResponse_ = null;
        }
        return cancelTaskConfirmResponseBuilder_;
      }

      private int baseLineTranResponse_ = 0;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslationResponse base_line_tran_response = 12;</code>
       * @return The enum numeric value on the wire for baseLineTranResponse.
       */
      @java.lang.Override public int getBaseLineTranResponseValue() {
        return baseLineTranResponse_;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslationResponse base_line_tran_response = 12;</code>
       * @param value The enum numeric value on the wire for baseLineTranResponse to set.
       * @return This builder for chaining.
       */
      public Builder setBaseLineTranResponseValue(int value) {
        
        baseLineTranResponse_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslationResponse base_line_tran_response = 12;</code>
       * @return The baseLineTranResponse.
       */
      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslationResponse getBaseLineTranResponse() {
        @SuppressWarnings("deprecation")
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslationResponse result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslationResponse.valueOf(baseLineTranResponse_);
        return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslationResponse.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslationResponse base_line_tran_response = 12;</code>
       * @param value The baseLineTranResponse to set.
       * @return This builder for chaining.
       */
      public Builder setBaseLineTranResponse(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslationResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        baseLineTranResponse_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslationResponse base_line_tran_response = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearBaseLineTranResponse() {
        
        baseLineTranResponse_ = 0;
        onChanged();
        return this;
      }

      private int transferLineResponse_ = 0;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLineResponse transfer_line_response = 13;</code>
       * @return The enum numeric value on the wire for transferLineResponse.
       */
      @java.lang.Override public int getTransferLineResponseValue() {
        return transferLineResponse_;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLineResponse transfer_line_response = 13;</code>
       * @param value The enum numeric value on the wire for transferLineResponse to set.
       * @return This builder for chaining.
       */
      public Builder setTransferLineResponseValue(int value) {
        
        transferLineResponse_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLineResponse transfer_line_response = 13;</code>
       * @return The transferLineResponse.
       */
      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLineResponse getTransferLineResponse() {
        @SuppressWarnings("deprecation")
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLineResponse result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLineResponse.valueOf(transferLineResponse_);
        return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLineResponse.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLineResponse transfer_line_response = 13;</code>
       * @param value The transferLineResponse to set.
       * @return This builder for chaining.
       */
      public Builder setTransferLineResponse(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLineResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        transferLineResponse_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLineResponse transfer_line_response = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearTransferLineResponse() {
        
        transferLineResponse_ = 0;
        onChanged();
        return this;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam resConfigParam_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParamOrBuilder> resConfigParamBuilder_;
      /**
       * <pre>
       *设置和查询配置应答
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam res_config_param = 15;</code>
       * @return Whether the resConfigParam field is set.
       */
      public boolean hasResConfigParam() {
        return resConfigParamBuilder_ != null || resConfigParam_ != null;
      }
      /**
       * <pre>
       *设置和查询配置应答
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam res_config_param = 15;</code>
       * @return The resConfigParam.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam getResConfigParam() {
        if (resConfigParamBuilder_ == null) {
          return resConfigParam_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam.getDefaultInstance() : resConfigParam_;
        } else {
          return resConfigParamBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *设置和查询配置应答
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam res_config_param = 15;</code>
       */
      public Builder setResConfigParam(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam value) {
        if (resConfigParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          resConfigParam_ = value;
          onChanged();
        } else {
          resConfigParamBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *设置和查询配置应答
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam res_config_param = 15;</code>
       */
      public Builder setResConfigParam(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam.Builder builderForValue) {
        if (resConfigParamBuilder_ == null) {
          resConfigParam_ = builderForValue.build();
          onChanged();
        } else {
          resConfigParamBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *设置和查询配置应答
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam res_config_param = 15;</code>
       */
      public Builder mergeResConfigParam(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam value) {
        if (resConfigParamBuilder_ == null) {
          if (resConfigParam_ != null) {
            resConfigParam_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam.newBuilder(resConfigParam_).mergeFrom(value).buildPartial();
          } else {
            resConfigParam_ = value;
          }
          onChanged();
        } else {
          resConfigParamBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *设置和查询配置应答
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam res_config_param = 15;</code>
       */
      public Builder clearResConfigParam() {
        if (resConfigParamBuilder_ == null) {
          resConfigParam_ = null;
          onChanged();
        } else {
          resConfigParam_ = null;
          resConfigParamBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *设置和查询配置应答
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam res_config_param = 15;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam.Builder getResConfigParamBuilder() {
        
        onChanged();
        return getResConfigParamFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *设置和查询配置应答
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam res_config_param = 15;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParamOrBuilder getResConfigParamOrBuilder() {
        if (resConfigParamBuilder_ != null) {
          return resConfigParamBuilder_.getMessageOrBuilder();
        } else {
          return resConfigParam_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam.getDefaultInstance() : resConfigParam_;
        }
      }
      /**
       * <pre>
       *设置和查询配置应答
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam res_config_param = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParamOrBuilder> 
          getResConfigParamFieldBuilder() {
        if (resConfigParamBuilder_ == null) {
          resConfigParamBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParamOrBuilder>(
                  getResConfigParam(),
                  getParentForChildren(),
                  isClean());
          resConfigParam_ = null;
        }
        return resConfigParamBuilder_;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo versionModelInf_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfoOrBuilder> versionModelInfBuilder_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelInfo version_model_inf = 16;</code>
       * @return Whether the versionModelInf field is set.
       */
      public boolean hasVersionModelInf() {
        return versionModelInfBuilder_ != null || versionModelInf_ != null;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelInfo version_model_inf = 16;</code>
       * @return The versionModelInf.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo getVersionModelInf() {
        if (versionModelInfBuilder_ == null) {
          return versionModelInf_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo.getDefaultInstance() : versionModelInf_;
        } else {
          return versionModelInfBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelInfo version_model_inf = 16;</code>
       */
      public Builder setVersionModelInf(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo value) {
        if (versionModelInfBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          versionModelInf_ = value;
          onChanged();
        } else {
          versionModelInfBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelInfo version_model_inf = 16;</code>
       */
      public Builder setVersionModelInf(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo.Builder builderForValue) {
        if (versionModelInfBuilder_ == null) {
          versionModelInf_ = builderForValue.build();
          onChanged();
        } else {
          versionModelInfBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelInfo version_model_inf = 16;</code>
       */
      public Builder mergeVersionModelInf(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo value) {
        if (versionModelInfBuilder_ == null) {
          if (versionModelInf_ != null) {
            versionModelInf_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo.newBuilder(versionModelInf_).mergeFrom(value).buildPartial();
          } else {
            versionModelInf_ = value;
          }
          onChanged();
        } else {
          versionModelInfBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelInfo version_model_inf = 16;</code>
       */
      public Builder clearVersionModelInf() {
        if (versionModelInfBuilder_ == null) {
          versionModelInf_ = null;
          onChanged();
        } else {
          versionModelInf_ = null;
          versionModelInfBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelInfo version_model_inf = 16;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo.Builder getVersionModelInfBuilder() {
        
        onChanged();
        return getVersionModelInfFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelInfo version_model_inf = 16;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfoOrBuilder getVersionModelInfOrBuilder() {
        if (versionModelInfBuilder_ != null) {
          return versionModelInfBuilder_.getMessageOrBuilder();
        } else {
          return versionModelInf_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo.getDefaultInstance() : versionModelInf_;
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelInfo version_model_inf = 16;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfoOrBuilder> 
          getVersionModelInfFieldBuilder() {
        if (versionModelInfBuilder_ == null) {
          versionModelInfBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfoOrBuilder>(
                  getVersionModelInf(),
                  getParentForChildren(),
                  isClean());
          versionModelInf_ = null;
        }
        return versionModelInfBuilder_;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse manualControl_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponseOrBuilder> manualControlBuilder_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControlResponse manual_control = 20;</code>
       * @return Whether the manualControl field is set.
       */
      public boolean hasManualControl() {
        return manualControlBuilder_ != null || manualControl_ != null;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControlResponse manual_control = 20;</code>
       * @return The manualControl.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse getManualControl() {
        if (manualControlBuilder_ == null) {
          return manualControl_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse.getDefaultInstance() : manualControl_;
        } else {
          return manualControlBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControlResponse manual_control = 20;</code>
       */
      public Builder setManualControl(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse value) {
        if (manualControlBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          manualControl_ = value;
          onChanged();
        } else {
          manualControlBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControlResponse manual_control = 20;</code>
       */
      public Builder setManualControl(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse.Builder builderForValue) {
        if (manualControlBuilder_ == null) {
          manualControl_ = builderForValue.build();
          onChanged();
        } else {
          manualControlBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControlResponse manual_control = 20;</code>
       */
      public Builder mergeManualControl(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse value) {
        if (manualControlBuilder_ == null) {
          if (manualControl_ != null) {
            manualControl_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse.newBuilder(manualControl_).mergeFrom(value).buildPartial();
          } else {
            manualControl_ = value;
          }
          onChanged();
        } else {
          manualControlBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControlResponse manual_control = 20;</code>
       */
      public Builder clearManualControl() {
        if (manualControlBuilder_ == null) {
          manualControl_ = null;
          onChanged();
        } else {
          manualControl_ = null;
          manualControlBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControlResponse manual_control = 20;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse.Builder getManualControlBuilder() {
        
        onChanged();
        return getManualControlFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControlResponse manual_control = 20;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponseOrBuilder getManualControlOrBuilder() {
        if (manualControlBuilder_ != null) {
          return manualControlBuilder_.getMessageOrBuilder();
        } else {
          return manualControl_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse.getDefaultInstance() : manualControl_;
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControlResponse manual_control = 20;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponseOrBuilder> 
          getManualControlFieldBuilder() {
        if (manualControlBuilder_ == null) {
          manualControlBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponseOrBuilder>(
                  getManualControl(),
                  getParentForChildren(),
                  isClean());
          manualControl_ = null;
        }
        return manualControlBuilder_;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse calibrationResponse_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponseOrBuilder> calibrationResponseBuilder_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationResponse calibration_response = 21;</code>
       * @return Whether the calibrationResponse field is set.
       */
      public boolean hasCalibrationResponse() {
        return calibrationResponseBuilder_ != null || calibrationResponse_ != null;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationResponse calibration_response = 21;</code>
       * @return The calibrationResponse.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse getCalibrationResponse() {
        if (calibrationResponseBuilder_ == null) {
          return calibrationResponse_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse.getDefaultInstance() : calibrationResponse_;
        } else {
          return calibrationResponseBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationResponse calibration_response = 21;</code>
       */
      public Builder setCalibrationResponse(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse value) {
        if (calibrationResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          calibrationResponse_ = value;
          onChanged();
        } else {
          calibrationResponseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationResponse calibration_response = 21;</code>
       */
      public Builder setCalibrationResponse(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse.Builder builderForValue) {
        if (calibrationResponseBuilder_ == null) {
          calibrationResponse_ = builderForValue.build();
          onChanged();
        } else {
          calibrationResponseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationResponse calibration_response = 21;</code>
       */
      public Builder mergeCalibrationResponse(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse value) {
        if (calibrationResponseBuilder_ == null) {
          if (calibrationResponse_ != null) {
            calibrationResponse_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse.newBuilder(calibrationResponse_).mergeFrom(value).buildPartial();
          } else {
            calibrationResponse_ = value;
          }
          onChanged();
        } else {
          calibrationResponseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationResponse calibration_response = 21;</code>
       */
      public Builder clearCalibrationResponse() {
        if (calibrationResponseBuilder_ == null) {
          calibrationResponse_ = null;
          onChanged();
        } else {
          calibrationResponse_ = null;
          calibrationResponseBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationResponse calibration_response = 21;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse.Builder getCalibrationResponseBuilder() {
        
        onChanged();
        return getCalibrationResponseFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationResponse calibration_response = 21;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponseOrBuilder getCalibrationResponseOrBuilder() {
        if (calibrationResponseBuilder_ != null) {
          return calibrationResponseBuilder_.getMessageOrBuilder();
        } else {
          return calibrationResponse_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse.getDefaultInstance() : calibrationResponse_;
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationResponse calibration_response = 21;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponseOrBuilder> 
          getCalibrationResponseFieldBuilder() {
        if (calibrationResponseBuilder_ == null) {
          calibrationResponseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponseOrBuilder>(
                  getCalibrationResponse(),
                  getParentForChildren(),
                  isClean());
          calibrationResponse_ = null;
        }
        return calibrationResponseBuilder_;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult calibrationConfirmResult_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResultOrBuilder> calibrationConfirmResultBuilder_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationConfirmResult calibration_confirm_result = 22;</code>
       * @return Whether the calibrationConfirmResult field is set.
       */
      public boolean hasCalibrationConfirmResult() {
        return calibrationConfirmResultBuilder_ != null || calibrationConfirmResult_ != null;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationConfirmResult calibration_confirm_result = 22;</code>
       * @return The calibrationConfirmResult.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult getCalibrationConfirmResult() {
        if (calibrationConfirmResultBuilder_ == null) {
          return calibrationConfirmResult_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult.getDefaultInstance() : calibrationConfirmResult_;
        } else {
          return calibrationConfirmResultBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationConfirmResult calibration_confirm_result = 22;</code>
       */
      public Builder setCalibrationConfirmResult(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult value) {
        if (calibrationConfirmResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          calibrationConfirmResult_ = value;
          onChanged();
        } else {
          calibrationConfirmResultBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationConfirmResult calibration_confirm_result = 22;</code>
       */
      public Builder setCalibrationConfirmResult(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult.Builder builderForValue) {
        if (calibrationConfirmResultBuilder_ == null) {
          calibrationConfirmResult_ = builderForValue.build();
          onChanged();
        } else {
          calibrationConfirmResultBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationConfirmResult calibration_confirm_result = 22;</code>
       */
      public Builder mergeCalibrationConfirmResult(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult value) {
        if (calibrationConfirmResultBuilder_ == null) {
          if (calibrationConfirmResult_ != null) {
            calibrationConfirmResult_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult.newBuilder(calibrationConfirmResult_).mergeFrom(value).buildPartial();
          } else {
            calibrationConfirmResult_ = value;
          }
          onChanged();
        } else {
          calibrationConfirmResultBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationConfirmResult calibration_confirm_result = 22;</code>
       */
      public Builder clearCalibrationConfirmResult() {
        if (calibrationConfirmResultBuilder_ == null) {
          calibrationConfirmResult_ = null;
          onChanged();
        } else {
          calibrationConfirmResult_ = null;
          calibrationConfirmResultBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationConfirmResult calibration_confirm_result = 22;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult.Builder getCalibrationConfirmResultBuilder() {
        
        onChanged();
        return getCalibrationConfirmResultFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationConfirmResult calibration_confirm_result = 22;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResultOrBuilder getCalibrationConfirmResultOrBuilder() {
        if (calibrationConfirmResultBuilder_ != null) {
          return calibrationConfirmResultBuilder_.getMessageOrBuilder();
        } else {
          return calibrationConfirmResult_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult.getDefaultInstance() : calibrationConfirmResult_;
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationConfirmResult calibration_confirm_result = 22;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResultOrBuilder> 
          getCalibrationConfirmResultFieldBuilder() {
        if (calibrationConfirmResultBuilder_ == null) {
          calibrationConfirmResultBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResultOrBuilder>(
                  getCalibrationConfirmResult(),
                  getParentForChildren(),
                  isClean());
          calibrationConfirmResult_ = null;
        }
        return calibrationConfirmResultBuilder_;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult tboxSetResult_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResultOrBuilder> tboxSetResultBuilder_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSetResult tbox_set_result = 40;</code>
       * @return Whether the tboxSetResult field is set.
       */
      public boolean hasTboxSetResult() {
        return tboxSetResultBuilder_ != null || tboxSetResult_ != null;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSetResult tbox_set_result = 40;</code>
       * @return The tboxSetResult.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult getTboxSetResult() {
        if (tboxSetResultBuilder_ == null) {
          return tboxSetResult_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult.getDefaultInstance() : tboxSetResult_;
        } else {
          return tboxSetResultBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSetResult tbox_set_result = 40;</code>
       */
      public Builder setTboxSetResult(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult value) {
        if (tboxSetResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tboxSetResult_ = value;
          onChanged();
        } else {
          tboxSetResultBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSetResult tbox_set_result = 40;</code>
       */
      public Builder setTboxSetResult(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult.Builder builderForValue) {
        if (tboxSetResultBuilder_ == null) {
          tboxSetResult_ = builderForValue.build();
          onChanged();
        } else {
          tboxSetResultBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSetResult tbox_set_result = 40;</code>
       */
      public Builder mergeTboxSetResult(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult value) {
        if (tboxSetResultBuilder_ == null) {
          if (tboxSetResult_ != null) {
            tboxSetResult_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult.newBuilder(tboxSetResult_).mergeFrom(value).buildPartial();
          } else {
            tboxSetResult_ = value;
          }
          onChanged();
        } else {
          tboxSetResultBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSetResult tbox_set_result = 40;</code>
       */
      public Builder clearTboxSetResult() {
        if (tboxSetResultBuilder_ == null) {
          tboxSetResult_ = null;
          onChanged();
        } else {
          tboxSetResult_ = null;
          tboxSetResultBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSetResult tbox_set_result = 40;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult.Builder getTboxSetResultBuilder() {
        
        onChanged();
        return getTboxSetResultFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSetResult tbox_set_result = 40;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResultOrBuilder getTboxSetResultOrBuilder() {
        if (tboxSetResultBuilder_ != null) {
          return tboxSetResultBuilder_.getMessageOrBuilder();
        } else {
          return tboxSetResult_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult.getDefaultInstance() : tboxSetResult_;
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSetResult tbox_set_result = 40;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResultOrBuilder> 
          getTboxSetResultFieldBuilder() {
        if (tboxSetResultBuilder_ == null) {
          tboxSetResultBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResultOrBuilder>(
                  getTboxSetResult(),
                  getParentForChildren(),
                  isClean());
          tboxSetResult_ = null;
        }
        return tboxSetResultBuilder_;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse tboxGetResult_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponseOrBuilder> tboxGetResultBuilder_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGetResponse tbox_get_result = 41;</code>
       * @return Whether the tboxGetResult field is set.
       */
      public boolean hasTboxGetResult() {
        return tboxGetResultBuilder_ != null || tboxGetResult_ != null;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGetResponse tbox_get_result = 41;</code>
       * @return The tboxGetResult.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse getTboxGetResult() {
        if (tboxGetResultBuilder_ == null) {
          return tboxGetResult_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse.getDefaultInstance() : tboxGetResult_;
        } else {
          return tboxGetResultBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGetResponse tbox_get_result = 41;</code>
       */
      public Builder setTboxGetResult(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse value) {
        if (tboxGetResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tboxGetResult_ = value;
          onChanged();
        } else {
          tboxGetResultBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGetResponse tbox_get_result = 41;</code>
       */
      public Builder setTboxGetResult(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse.Builder builderForValue) {
        if (tboxGetResultBuilder_ == null) {
          tboxGetResult_ = builderForValue.build();
          onChanged();
        } else {
          tboxGetResultBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGetResponse tbox_get_result = 41;</code>
       */
      public Builder mergeTboxGetResult(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse value) {
        if (tboxGetResultBuilder_ == null) {
          if (tboxGetResult_ != null) {
            tboxGetResult_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse.newBuilder(tboxGetResult_).mergeFrom(value).buildPartial();
          } else {
            tboxGetResult_ = value;
          }
          onChanged();
        } else {
          tboxGetResultBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGetResponse tbox_get_result = 41;</code>
       */
      public Builder clearTboxGetResult() {
        if (tboxGetResultBuilder_ == null) {
          tboxGetResult_ = null;
          onChanged();
        } else {
          tboxGetResult_ = null;
          tboxGetResultBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGetResponse tbox_get_result = 41;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse.Builder getTboxGetResultBuilder() {
        
        onChanged();
        return getTboxGetResultFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGetResponse tbox_get_result = 41;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponseOrBuilder getTboxGetResultOrBuilder() {
        if (tboxGetResultBuilder_ != null) {
          return tboxGetResultBuilder_.getMessageOrBuilder();
        } else {
          return tboxGetResult_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse.getDefaultInstance() : tboxGetResult_;
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGetResponse tbox_get_result = 41;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponseOrBuilder> 
          getTboxGetResultFieldBuilder() {
        if (tboxGetResultBuilder_ == null) {
          tboxGetResultBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponseOrBuilder>(
                  getTboxGetResult(),
                  getParentForChildren(),
                  isClean());
          tboxGetResult_ = null;
        }
        return tboxGetResultBuilder_;
      }

      private int lastTaskContinue_ = 0;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTaskContinue last_task_continue = 50;</code>
       * @return The enum numeric value on the wire for lastTaskContinue.
       */
      @java.lang.Override public int getLastTaskContinueValue() {
        return lastTaskContinue_;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTaskContinue last_task_continue = 50;</code>
       * @param value The enum numeric value on the wire for lastTaskContinue to set.
       * @return This builder for chaining.
       */
      public Builder setLastTaskContinueValue(int value) {
        
        lastTaskContinue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTaskContinue last_task_continue = 50;</code>
       * @return The lastTaskContinue.
       */
      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTaskContinue getLastTaskContinue() {
        @SuppressWarnings("deprecation")
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTaskContinue result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTaskContinue.valueOf(lastTaskContinue_);
        return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTaskContinue.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTaskContinue last_task_continue = 50;</code>
       * @param value The lastTaskContinue to set.
       * @return This builder for chaining.
       */
      public Builder setLastTaskContinue(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTaskContinue value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        lastTaskContinue_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTaskContinue last_task_continue = 50;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastTaskContinue() {
        
        lastTaskContinue_ = 0;
        onChanged();
        return this;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse taskFinishConfirm_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponseOrBuilder> taskFinishConfirmBuilder_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse task_finish_confirm = 51;</code>
       * @return Whether the taskFinishConfirm field is set.
       */
      public boolean hasTaskFinishConfirm() {
        return taskFinishConfirmBuilder_ != null || taskFinishConfirm_ != null;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse task_finish_confirm = 51;</code>
       * @return The taskFinishConfirm.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse getTaskFinishConfirm() {
        if (taskFinishConfirmBuilder_ == null) {
          return taskFinishConfirm_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse.getDefaultInstance() : taskFinishConfirm_;
        } else {
          return taskFinishConfirmBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse task_finish_confirm = 51;</code>
       */
      public Builder setTaskFinishConfirm(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse value) {
        if (taskFinishConfirmBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          taskFinishConfirm_ = value;
          onChanged();
        } else {
          taskFinishConfirmBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse task_finish_confirm = 51;</code>
       */
      public Builder setTaskFinishConfirm(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse.Builder builderForValue) {
        if (taskFinishConfirmBuilder_ == null) {
          taskFinishConfirm_ = builderForValue.build();
          onChanged();
        } else {
          taskFinishConfirmBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse task_finish_confirm = 51;</code>
       */
      public Builder mergeTaskFinishConfirm(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse value) {
        if (taskFinishConfirmBuilder_ == null) {
          if (taskFinishConfirm_ != null) {
            taskFinishConfirm_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse.newBuilder(taskFinishConfirm_).mergeFrom(value).buildPartial();
          } else {
            taskFinishConfirm_ = value;
          }
          onChanged();
        } else {
          taskFinishConfirmBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse task_finish_confirm = 51;</code>
       */
      public Builder clearTaskFinishConfirm() {
        if (taskFinishConfirmBuilder_ == null) {
          taskFinishConfirm_ = null;
          onChanged();
        } else {
          taskFinishConfirm_ = null;
          taskFinishConfirmBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse task_finish_confirm = 51;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse.Builder getTaskFinishConfirmBuilder() {
        
        onChanged();
        return getTaskFinishConfirmFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse task_finish_confirm = 51;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponseOrBuilder getTaskFinishConfirmOrBuilder() {
        if (taskFinishConfirmBuilder_ != null) {
          return taskFinishConfirmBuilder_.getMessageOrBuilder();
        } else {
          return taskFinishConfirm_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse.getDefaultInstance() : taskFinishConfirm_;
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse task_finish_confirm = 51;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponseOrBuilder> 
          getTaskFinishConfirmFieldBuilder() {
        if (taskFinishConfirmBuilder_ == null) {
          taskFinishConfirmBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponseOrBuilder>(
                  getTaskFinishConfirm(),
                  getParentForChildren(),
                  isClean());
          taskFinishConfirm_ = null;
        }
        return taskFinishConfirmBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ResponseValue)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ResponseValue)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResponseValue>
        PARSER = new com.google.protobuf.AbstractParser<ResponseValue>() {
      @java.lang.Override
      public ResponseValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ResponseValue(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResponseValue> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResponseValue> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ResponseValue getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TboxParameterSetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *参数ID
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <pre>
     *参数值
     * </pre>
     *
     * <code>string value = 2;</code>
     * @return The value.
     */
    java.lang.String getValue();
    /**
     * <pre>
     *参数值
     * </pre>
     *
     * <code>string value = 2;</code>
     * @return The bytes for value.
     */
    com.google.protobuf.ByteString
        getValueBytes();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSet}
   */
  public static final class TboxParameterSet extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSet)
      TboxParameterSetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TboxParameterSet.newBuilder() to construct.
    private TboxParameterSet(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TboxParameterSet() {
      value_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TboxParameterSet();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TboxParameterSet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readUInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              value_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterSet_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterSet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <pre>
     *参数ID
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private volatile java.lang.Object value_;
    /**
     * <pre>
     *参数值
     * </pre>
     *
     * <code>string value = 2;</code>
     * @return The value.
     */
    @java.lang.Override
    public java.lang.String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        value_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *参数值
     * </pre>
     *
     * <code>string value = 2;</code>
     * @return The bytes for value.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeUInt32(1, id_);
      }
      if (!getValueBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (!getValueBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet) obj;

      if (getId()
          != other.getId()) return false;
      if (!getValue()
          .equals(other.getValue())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSet)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterSet_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterSet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = 0;

        value_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterSet_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet(this);
        result.id_ = id_;
        result.value_ = value_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (!other.getValue().isEmpty()) {
          value_ = other.value_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int id_ ;
      /**
       * <pre>
       *参数ID
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       *参数ID
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *参数ID
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object value_ = "";
      /**
       * <pre>
       *参数值
       * </pre>
       *
       * <code>string value = 2;</code>
       * @return The value.
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *参数值
       * </pre>
       *
       * <code>string value = 2;</code>
       * @return The bytes for value.
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *参数值
       * </pre>
       *
       * <code>string value = 2;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *参数值
       * </pre>
       *
       * <code>string value = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *参数值
       * </pre>
       *
       * <code>string value = 2;</code>
       * @param value The bytes for value to set.
       * @return This builder for chaining.
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        value_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSet)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSet)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TboxParameterSet>
        PARSER = new com.google.protobuf.AbstractParser<TboxParameterSet>() {
      @java.lang.Override
      public TboxParameterSet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TboxParameterSet(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TboxParameterSet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TboxParameterSet> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSet getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TboxParameterGetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *参数ID
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    int getId();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGet}
   */
  public static final class TboxParameterGet extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGet)
      TboxParameterGetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TboxParameterGet.newBuilder() to construct.
    private TboxParameterGet(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TboxParameterGet() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TboxParameterGet();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TboxParameterGet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterGet_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterGet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <pre>
     *参数ID
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeUInt32(1, id_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet) obj;

      if (getId()
          != other.getId()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGet)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterGet_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterGet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterGet_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet(this);
        result.id_ = id_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int id_ ;
      /**
       * <pre>
       *参数ID
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       *参数ID
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *参数ID
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGet)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGet)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TboxParameterGet>
        PARSER = new com.google.protobuf.AbstractParser<TboxParameterGet>() {
      @java.lang.Override
      public TboxParameterGet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TboxParameterGet(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TboxParameterGet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TboxParameterGet> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGet getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UpdateRoutePathOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath.PathType path_type = 1;</code>
     * @return The enum numeric value on the wire for pathType.
     */
    int getPathTypeValue();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath.PathType path_type = 1;</code>
     * @return The pathType.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.PathType getPathType();

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath.DevType dev_type = 2;</code>
     * @return The enum numeric value on the wire for devType.
     */
    int getDevTypeValue();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath.DevType dev_type = 2;</code>
     * @return The devType.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.DevType getDevType();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath}
   */
  public static final class UpdateRoutePath extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath)
      UpdateRoutePathOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UpdateRoutePath.newBuilder() to construct.
    private UpdateRoutePath(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UpdateRoutePath() {
      pathType_ = 0;
      devType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new UpdateRoutePath();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UpdateRoutePath(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              pathType_ = rawValue;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              devType_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_UpdateRoutePath_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_UpdateRoutePath_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.Builder.class);
    }

    /**
     * Protobuf enum {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath.PathType}
     */
    public enum PathType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>PATH_NULL = 0;</code>
       */
      PATH_NULL(0),
      /**
       * <code>PATH_POINT = 1;</code>
       */
      PATH_POINT(1),
      /**
       * <code>PATH_PARAM = 2;</code>
       */
      PATH_PARAM(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>PATH_NULL = 0;</code>
       */
      public static final int PATH_NULL_VALUE = 0;
      /**
       * <code>PATH_POINT = 1;</code>
       */
      public static final int PATH_POINT_VALUE = 1;
      /**
       * <code>PATH_PARAM = 2;</code>
       */
      public static final int PATH_PARAM_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PathType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static PathType forNumber(int value) {
        switch (value) {
          case 0: return PATH_NULL;
          case 1: return PATH_POINT;
          case 2: return PATH_PARAM;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<PathType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          PathType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PathType>() {
              public PathType findValueByNumber(int number) {
                return PathType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.getDescriptor().getEnumTypes().get(0);
      }

      private static final PathType[] VALUES = values();

      public static PathType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private PathType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath.PathType)
    }

    /**
     * Protobuf enum {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath.DevType}
     */
    public enum DevType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>DEV_NULL = 0;</code>
       */
      DEV_NULL(0),
      /**
       * <code>DEV_STANDLONE = 1;</code>
       */
      DEV_STANDLONE(1),
      /**
       * <code>DEV_MASTER = 2;</code>
       */
      DEV_MASTER(2),
      /**
       * <code>DEV_SLAVE = 3;</code>
       */
      DEV_SLAVE(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>DEV_NULL = 0;</code>
       */
      public static final int DEV_NULL_VALUE = 0;
      /**
       * <code>DEV_STANDLONE = 1;</code>
       */
      public static final int DEV_STANDLONE_VALUE = 1;
      /**
       * <code>DEV_MASTER = 2;</code>
       */
      public static final int DEV_MASTER_VALUE = 2;
      /**
       * <code>DEV_SLAVE = 3;</code>
       */
      public static final int DEV_SLAVE_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DevType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static DevType forNumber(int value) {
        switch (value) {
          case 0: return DEV_NULL;
          case 1: return DEV_STANDLONE;
          case 2: return DEV_MASTER;
          case 3: return DEV_SLAVE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<DevType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          DevType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<DevType>() {
              public DevType findValueByNumber(int number) {
                return DevType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.getDescriptor().getEnumTypes().get(1);
      }

      private static final DevType[] VALUES = values();

      public static DevType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private DevType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath.DevType)
    }

    public static final int PATH_TYPE_FIELD_NUMBER = 1;
    private int pathType_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath.PathType path_type = 1;</code>
     * @return The enum numeric value on the wire for pathType.
     */
    @java.lang.Override public int getPathTypeValue() {
      return pathType_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath.PathType path_type = 1;</code>
     * @return The pathType.
     */
    @java.lang.Override public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.PathType getPathType() {
      @SuppressWarnings("deprecation")
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.PathType result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.PathType.valueOf(pathType_);
      return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.PathType.UNRECOGNIZED : result;
    }

    public static final int DEV_TYPE_FIELD_NUMBER = 2;
    private int devType_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath.DevType dev_type = 2;</code>
     * @return The enum numeric value on the wire for devType.
     */
    @java.lang.Override public int getDevTypeValue() {
      return devType_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath.DevType dev_type = 2;</code>
     * @return The devType.
     */
    @java.lang.Override public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.DevType getDevType() {
      @SuppressWarnings("deprecation")
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.DevType result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.DevType.valueOf(devType_);
      return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.DevType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (pathType_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.PathType.PATH_NULL.getNumber()) {
        output.writeEnum(1, pathType_);
      }
      if (devType_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.DevType.DEV_NULL.getNumber()) {
        output.writeEnum(2, devType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (pathType_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.PathType.PATH_NULL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, pathType_);
      }
      if (devType_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.DevType.DEV_NULL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, devType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath) obj;

      if (pathType_ != other.pathType_) return false;
      if (devType_ != other.devType_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PATH_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + pathType_;
      hash = (37 * hash) + DEV_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + devType_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_UpdateRoutePath_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_UpdateRoutePath_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        pathType_ = 0;

        devType_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_UpdateRoutePath_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath(this);
        result.pathType_ = pathType_;
        result.devType_ = devType_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.getDefaultInstance()) return this;
        if (other.pathType_ != 0) {
          setPathTypeValue(other.getPathTypeValue());
        }
        if (other.devType_ != 0) {
          setDevTypeValue(other.getDevTypeValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int pathType_ = 0;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath.PathType path_type = 1;</code>
       * @return The enum numeric value on the wire for pathType.
       */
      @java.lang.Override public int getPathTypeValue() {
        return pathType_;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath.PathType path_type = 1;</code>
       * @param value The enum numeric value on the wire for pathType to set.
       * @return This builder for chaining.
       */
      public Builder setPathTypeValue(int value) {
        
        pathType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath.PathType path_type = 1;</code>
       * @return The pathType.
       */
      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.PathType getPathType() {
        @SuppressWarnings("deprecation")
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.PathType result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.PathType.valueOf(pathType_);
        return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.PathType.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath.PathType path_type = 1;</code>
       * @param value The pathType to set.
       * @return This builder for chaining.
       */
      public Builder setPathType(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.PathType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        pathType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath.PathType path_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPathType() {
        
        pathType_ = 0;
        onChanged();
        return this;
      }

      private int devType_ = 0;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath.DevType dev_type = 2;</code>
       * @return The enum numeric value on the wire for devType.
       */
      @java.lang.Override public int getDevTypeValue() {
        return devType_;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath.DevType dev_type = 2;</code>
       * @param value The enum numeric value on the wire for devType to set.
       * @return This builder for chaining.
       */
      public Builder setDevTypeValue(int value) {
        
        devType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath.DevType dev_type = 2;</code>
       * @return The devType.
       */
      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.DevType getDevType() {
        @SuppressWarnings("deprecation")
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.DevType result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.DevType.valueOf(devType_);
        return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.DevType.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath.DevType dev_type = 2;</code>
       * @param value The devType to set.
       * @return This builder for chaining.
       */
      public Builder setDevType(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath.DevType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        devType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath.DevType dev_type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDevType() {
        
        devType_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePath)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UpdateRoutePath>
        PARSER = new com.google.protobuf.AbstractParser<UpdateRoutePath>() {
      @java.lang.Override
      public UpdateRoutePath parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UpdateRoutePath(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UpdateRoutePath> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UpdateRoutePath> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePath getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PointXYZOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 横坐标
     * </pre>
     *
     * <code>double x = 1;</code>
     * @return The x.
     */
    double getX();

    /**
     * <pre>
     * 纵坐标
     * </pre>
     *
     * <code>double y = 2;</code>
     * @return The y.
     */
    double getY();

    /**
     * <pre>
     * 高程
     * </pre>
     *
     * <code>double z = 3;</code>
     * @return The z.
     */
    double getZ();

    /**
     * <pre>
     * 航向角
     * </pre>
     *
     * <code>double yaw = 4;</code>
     * @return The yaw.
     */
    double getYaw();

    /**
     * <pre>
     * 速度
     * </pre>
     *
     * <code>double v = 5;</code>
     * @return The v.
     */
    double getV();

    /**
     * <pre>
     * s-d-t坐标系
     * </pre>
     *
     * <code>double s = 6;</code>
     * @return The s.
     */
    double getS();

    /**
     * <pre>
     * curvature 曲率
     * </pre>
     *
     * <code>double cur = 7;</code>
     * @return The cur.
     */
    double getCur();

    /**
     * <pre>
     * 主要用于鱼尾 0 false 1 true或用于pearshape中的0:优化端, 1:非优化端
     * </pre>
     *
     * <code>int32 back = 8;</code>
     * @return The back.
     */
    int getBack();

    /**
     * <pre>
     * 1:直线作业点, 0 :非作业直线点
     * </pre>
     *
     * <code>int32 strCur = 9;</code>
     * @return The strCur.
     */
    int getStrCur();

    /**
     * <pre>
     * 
     * </pre>
     *
     * <code>bool reverse = 10;</code>
     * @return The reverse.
     */
    boolean getReverse();

    /**
     * <pre>
     *0 直线点,1鱼尾点,2梨形点       
     * </pre>
     *
     * <code>int32 type = 11;</code>
     * @return The type.
     */
    int getType();

    /**
     * <code>double road_left_dis = 12;</code>
     * @return The roadLeftDis.
     */
    double getRoadLeftDis();

    /**
     * <code>double road_right_dis = 13;</code>
     * @return The roadRightDis.
     */
    double getRoadRightDis();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ}
   */
  public static final class PointXYZ extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ)
      PointXYZOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PointXYZ.newBuilder() to construct.
    private PointXYZ(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PointXYZ() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PointXYZ();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PointXYZ(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {

              x_ = input.readDouble();
              break;
            }
            case 17: {

              y_ = input.readDouble();
              break;
            }
            case 25: {

              z_ = input.readDouble();
              break;
            }
            case 33: {

              yaw_ = input.readDouble();
              break;
            }
            case 41: {

              v_ = input.readDouble();
              break;
            }
            case 49: {

              s_ = input.readDouble();
              break;
            }
            case 57: {

              cur_ = input.readDouble();
              break;
            }
            case 64: {

              back_ = input.readInt32();
              break;
            }
            case 72: {

              strCur_ = input.readInt32();
              break;
            }
            case 80: {

              reverse_ = input.readBool();
              break;
            }
            case 88: {

              type_ = input.readInt32();
              break;
            }
            case 97: {

              roadLeftDis_ = input.readDouble();
              break;
            }
            case 105: {

              roadRightDis_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_PointXYZ_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_PointXYZ_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ.Builder.class);
    }

    public static final int X_FIELD_NUMBER = 1;
    private double x_;
    /**
     * <pre>
     * 横坐标
     * </pre>
     *
     * <code>double x = 1;</code>
     * @return The x.
     */
    @java.lang.Override
    public double getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private double y_;
    /**
     * <pre>
     * 纵坐标
     * </pre>
     *
     * <code>double y = 2;</code>
     * @return The y.
     */
    @java.lang.Override
    public double getY() {
      return y_;
    }

    public static final int Z_FIELD_NUMBER = 3;
    private double z_;
    /**
     * <pre>
     * 高程
     * </pre>
     *
     * <code>double z = 3;</code>
     * @return The z.
     */
    @java.lang.Override
    public double getZ() {
      return z_;
    }

    public static final int YAW_FIELD_NUMBER = 4;
    private double yaw_;
    /**
     * <pre>
     * 航向角
     * </pre>
     *
     * <code>double yaw = 4;</code>
     * @return The yaw.
     */
    @java.lang.Override
    public double getYaw() {
      return yaw_;
    }

    public static final int V_FIELD_NUMBER = 5;
    private double v_;
    /**
     * <pre>
     * 速度
     * </pre>
     *
     * <code>double v = 5;</code>
     * @return The v.
     */
    @java.lang.Override
    public double getV() {
      return v_;
    }

    public static final int S_FIELD_NUMBER = 6;
    private double s_;
    /**
     * <pre>
     * s-d-t坐标系
     * </pre>
     *
     * <code>double s = 6;</code>
     * @return The s.
     */
    @java.lang.Override
    public double getS() {
      return s_;
    }

    public static final int CUR_FIELD_NUMBER = 7;
    private double cur_;
    /**
     * <pre>
     * curvature 曲率
     * </pre>
     *
     * <code>double cur = 7;</code>
     * @return The cur.
     */
    @java.lang.Override
    public double getCur() {
      return cur_;
    }

    public static final int BACK_FIELD_NUMBER = 8;
    private int back_;
    /**
     * <pre>
     * 主要用于鱼尾 0 false 1 true或用于pearshape中的0:优化端, 1:非优化端
     * </pre>
     *
     * <code>int32 back = 8;</code>
     * @return The back.
     */
    @java.lang.Override
    public int getBack() {
      return back_;
    }

    public static final int STRCUR_FIELD_NUMBER = 9;
    private int strCur_;
    /**
     * <pre>
     * 1:直线作业点, 0 :非作业直线点
     * </pre>
     *
     * <code>int32 strCur = 9;</code>
     * @return The strCur.
     */
    @java.lang.Override
    public int getStrCur() {
      return strCur_;
    }

    public static final int REVERSE_FIELD_NUMBER = 10;
    private boolean reverse_;
    /**
     * <pre>
     * 
     * </pre>
     *
     * <code>bool reverse = 10;</code>
     * @return The reverse.
     */
    @java.lang.Override
    public boolean getReverse() {
      return reverse_;
    }

    public static final int TYPE_FIELD_NUMBER = 11;
    private int type_;
    /**
     * <pre>
     *0 直线点,1鱼尾点,2梨形点       
     * </pre>
     *
     * <code>int32 type = 11;</code>
     * @return The type.
     */
    @java.lang.Override
    public int getType() {
      return type_;
    }

    public static final int ROAD_LEFT_DIS_FIELD_NUMBER = 12;
    private double roadLeftDis_;
    /**
     * <code>double road_left_dis = 12;</code>
     * @return The roadLeftDis.
     */
    @java.lang.Override
    public double getRoadLeftDis() {
      return roadLeftDis_;
    }

    public static final int ROAD_RIGHT_DIS_FIELD_NUMBER = 13;
    private double roadRightDis_;
    /**
     * <code>double road_right_dis = 13;</code>
     * @return The roadRightDis.
     */
    @java.lang.Override
    public double getRoadRightDis() {
      return roadRightDis_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (x_ != 0D) {
        output.writeDouble(1, x_);
      }
      if (y_ != 0D) {
        output.writeDouble(2, y_);
      }
      if (z_ != 0D) {
        output.writeDouble(3, z_);
      }
      if (yaw_ != 0D) {
        output.writeDouble(4, yaw_);
      }
      if (v_ != 0D) {
        output.writeDouble(5, v_);
      }
      if (s_ != 0D) {
        output.writeDouble(6, s_);
      }
      if (cur_ != 0D) {
        output.writeDouble(7, cur_);
      }
      if (back_ != 0) {
        output.writeInt32(8, back_);
      }
      if (strCur_ != 0) {
        output.writeInt32(9, strCur_);
      }
      if (reverse_ != false) {
        output.writeBool(10, reverse_);
      }
      if (type_ != 0) {
        output.writeInt32(11, type_);
      }
      if (roadLeftDis_ != 0D) {
        output.writeDouble(12, roadLeftDis_);
      }
      if (roadRightDis_ != 0D) {
        output.writeDouble(13, roadRightDis_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (x_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, x_);
      }
      if (y_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, y_);
      }
      if (z_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, z_);
      }
      if (yaw_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, yaw_);
      }
      if (v_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, v_);
      }
      if (s_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, s_);
      }
      if (cur_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, cur_);
      }
      if (back_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, back_);
      }
      if (strCur_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, strCur_);
      }
      if (reverse_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, reverse_);
      }
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, type_);
      }
      if (roadLeftDis_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, roadLeftDis_);
      }
      if (roadRightDis_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, roadRightDis_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ) obj;

      if (java.lang.Double.doubleToLongBits(getX())
          != java.lang.Double.doubleToLongBits(
              other.getX())) return false;
      if (java.lang.Double.doubleToLongBits(getY())
          != java.lang.Double.doubleToLongBits(
              other.getY())) return false;
      if (java.lang.Double.doubleToLongBits(getZ())
          != java.lang.Double.doubleToLongBits(
              other.getZ())) return false;
      if (java.lang.Double.doubleToLongBits(getYaw())
          != java.lang.Double.doubleToLongBits(
              other.getYaw())) return false;
      if (java.lang.Double.doubleToLongBits(getV())
          != java.lang.Double.doubleToLongBits(
              other.getV())) return false;
      if (java.lang.Double.doubleToLongBits(getS())
          != java.lang.Double.doubleToLongBits(
              other.getS())) return false;
      if (java.lang.Double.doubleToLongBits(getCur())
          != java.lang.Double.doubleToLongBits(
              other.getCur())) return false;
      if (getBack()
          != other.getBack()) return false;
      if (getStrCur()
          != other.getStrCur()) return false;
      if (getReverse()
          != other.getReverse()) return false;
      if (getType()
          != other.getType()) return false;
      if (java.lang.Double.doubleToLongBits(getRoadLeftDis())
          != java.lang.Double.doubleToLongBits(
              other.getRoadLeftDis())) return false;
      if (java.lang.Double.doubleToLongBits(getRoadRightDis())
          != java.lang.Double.doubleToLongBits(
              other.getRoadRightDis())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getX()));
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getY()));
      hash = (37 * hash) + Z_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getZ()));
      hash = (37 * hash) + YAW_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getYaw()));
      hash = (37 * hash) + V_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getV()));
      hash = (37 * hash) + S_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getS()));
      hash = (37 * hash) + CUR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getCur()));
      hash = (37 * hash) + BACK_FIELD_NUMBER;
      hash = (53 * hash) + getBack();
      hash = (37 * hash) + STRCUR_FIELD_NUMBER;
      hash = (53 * hash) + getStrCur();
      hash = (37 * hash) + REVERSE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getReverse());
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + ROAD_LEFT_DIS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getRoadLeftDis()));
      hash = (37 * hash) + ROAD_RIGHT_DIS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getRoadRightDis()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_PointXYZ_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_PointXYZ_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        x_ = 0D;

        y_ = 0D;

        z_ = 0D;

        yaw_ = 0D;

        v_ = 0D;

        s_ = 0D;

        cur_ = 0D;

        back_ = 0;

        strCur_ = 0;

        reverse_ = false;

        type_ = 0;

        roadLeftDis_ = 0D;

        roadRightDis_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_PointXYZ_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ(this);
        result.x_ = x_;
        result.y_ = y_;
        result.z_ = z_;
        result.yaw_ = yaw_;
        result.v_ = v_;
        result.s_ = s_;
        result.cur_ = cur_;
        result.back_ = back_;
        result.strCur_ = strCur_;
        result.reverse_ = reverse_;
        result.type_ = type_;
        result.roadLeftDis_ = roadLeftDis_;
        result.roadRightDis_ = roadRightDis_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ.getDefaultInstance()) return this;
        if (other.getX() != 0D) {
          setX(other.getX());
        }
        if (other.getY() != 0D) {
          setY(other.getY());
        }
        if (other.getZ() != 0D) {
          setZ(other.getZ());
        }
        if (other.getYaw() != 0D) {
          setYaw(other.getYaw());
        }
        if (other.getV() != 0D) {
          setV(other.getV());
        }
        if (other.getS() != 0D) {
          setS(other.getS());
        }
        if (other.getCur() != 0D) {
          setCur(other.getCur());
        }
        if (other.getBack() != 0) {
          setBack(other.getBack());
        }
        if (other.getStrCur() != 0) {
          setStrCur(other.getStrCur());
        }
        if (other.getReverse() != false) {
          setReverse(other.getReverse());
        }
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.getRoadLeftDis() != 0D) {
          setRoadLeftDis(other.getRoadLeftDis());
        }
        if (other.getRoadRightDis() != 0D) {
          setRoadRightDis(other.getRoadRightDis());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private double x_ ;
      /**
       * <pre>
       * 横坐标
       * </pre>
       *
       * <code>double x = 1;</code>
       * @return The x.
       */
      @java.lang.Override
      public double getX() {
        return x_;
      }
      /**
       * <pre>
       * 横坐标
       * </pre>
       *
       * <code>double x = 1;</code>
       * @param value The x to set.
       * @return This builder for chaining.
       */
      public Builder setX(double value) {
        
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 横坐标
       * </pre>
       *
       * <code>double x = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearX() {
        
        x_ = 0D;
        onChanged();
        return this;
      }

      private double y_ ;
      /**
       * <pre>
       * 纵坐标
       * </pre>
       *
       * <code>double y = 2;</code>
       * @return The y.
       */
      @java.lang.Override
      public double getY() {
        return y_;
      }
      /**
       * <pre>
       * 纵坐标
       * </pre>
       *
       * <code>double y = 2;</code>
       * @param value The y to set.
       * @return This builder for chaining.
       */
      public Builder setY(double value) {
        
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 纵坐标
       * </pre>
       *
       * <code>double y = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearY() {
        
        y_ = 0D;
        onChanged();
        return this;
      }

      private double z_ ;
      /**
       * <pre>
       * 高程
       * </pre>
       *
       * <code>double z = 3;</code>
       * @return The z.
       */
      @java.lang.Override
      public double getZ() {
        return z_;
      }
      /**
       * <pre>
       * 高程
       * </pre>
       *
       * <code>double z = 3;</code>
       * @param value The z to set.
       * @return This builder for chaining.
       */
      public Builder setZ(double value) {
        
        z_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 高程
       * </pre>
       *
       * <code>double z = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearZ() {
        
        z_ = 0D;
        onChanged();
        return this;
      }

      private double yaw_ ;
      /**
       * <pre>
       * 航向角
       * </pre>
       *
       * <code>double yaw = 4;</code>
       * @return The yaw.
       */
      @java.lang.Override
      public double getYaw() {
        return yaw_;
      }
      /**
       * <pre>
       * 航向角
       * </pre>
       *
       * <code>double yaw = 4;</code>
       * @param value The yaw to set.
       * @return This builder for chaining.
       */
      public Builder setYaw(double value) {
        
        yaw_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 航向角
       * </pre>
       *
       * <code>double yaw = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearYaw() {
        
        yaw_ = 0D;
        onChanged();
        return this;
      }

      private double v_ ;
      /**
       * <pre>
       * 速度
       * </pre>
       *
       * <code>double v = 5;</code>
       * @return The v.
       */
      @java.lang.Override
      public double getV() {
        return v_;
      }
      /**
       * <pre>
       * 速度
       * </pre>
       *
       * <code>double v = 5;</code>
       * @param value The v to set.
       * @return This builder for chaining.
       */
      public Builder setV(double value) {
        
        v_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 速度
       * </pre>
       *
       * <code>double v = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearV() {
        
        v_ = 0D;
        onChanged();
        return this;
      }

      private double s_ ;
      /**
       * <pre>
       * s-d-t坐标系
       * </pre>
       *
       * <code>double s = 6;</code>
       * @return The s.
       */
      @java.lang.Override
      public double getS() {
        return s_;
      }
      /**
       * <pre>
       * s-d-t坐标系
       * </pre>
       *
       * <code>double s = 6;</code>
       * @param value The s to set.
       * @return This builder for chaining.
       */
      public Builder setS(double value) {
        
        s_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * s-d-t坐标系
       * </pre>
       *
       * <code>double s = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearS() {
        
        s_ = 0D;
        onChanged();
        return this;
      }

      private double cur_ ;
      /**
       * <pre>
       * curvature 曲率
       * </pre>
       *
       * <code>double cur = 7;</code>
       * @return The cur.
       */
      @java.lang.Override
      public double getCur() {
        return cur_;
      }
      /**
       * <pre>
       * curvature 曲率
       * </pre>
       *
       * <code>double cur = 7;</code>
       * @param value The cur to set.
       * @return This builder for chaining.
       */
      public Builder setCur(double value) {
        
        cur_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * curvature 曲率
       * </pre>
       *
       * <code>double cur = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearCur() {
        
        cur_ = 0D;
        onChanged();
        return this;
      }

      private int back_ ;
      /**
       * <pre>
       * 主要用于鱼尾 0 false 1 true或用于pearshape中的0:优化端, 1:非优化端
       * </pre>
       *
       * <code>int32 back = 8;</code>
       * @return The back.
       */
      @java.lang.Override
      public int getBack() {
        return back_;
      }
      /**
       * <pre>
       * 主要用于鱼尾 0 false 1 true或用于pearshape中的0:优化端, 1:非优化端
       * </pre>
       *
       * <code>int32 back = 8;</code>
       * @param value The back to set.
       * @return This builder for chaining.
       */
      public Builder setBack(int value) {
        
        back_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 主要用于鱼尾 0 false 1 true或用于pearshape中的0:优化端, 1:非优化端
       * </pre>
       *
       * <code>int32 back = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearBack() {
        
        back_ = 0;
        onChanged();
        return this;
      }

      private int strCur_ ;
      /**
       * <pre>
       * 1:直线作业点, 0 :非作业直线点
       * </pre>
       *
       * <code>int32 strCur = 9;</code>
       * @return The strCur.
       */
      @java.lang.Override
      public int getStrCur() {
        return strCur_;
      }
      /**
       * <pre>
       * 1:直线作业点, 0 :非作业直线点
       * </pre>
       *
       * <code>int32 strCur = 9;</code>
       * @param value The strCur to set.
       * @return This builder for chaining.
       */
      public Builder setStrCur(int value) {
        
        strCur_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 1:直线作业点, 0 :非作业直线点
       * </pre>
       *
       * <code>int32 strCur = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearStrCur() {
        
        strCur_ = 0;
        onChanged();
        return this;
      }

      private boolean reverse_ ;
      /**
       * <pre>
       * 
       * </pre>
       *
       * <code>bool reverse = 10;</code>
       * @return The reverse.
       */
      @java.lang.Override
      public boolean getReverse() {
        return reverse_;
      }
      /**
       * <pre>
       * 
       * </pre>
       *
       * <code>bool reverse = 10;</code>
       * @param value The reverse to set.
       * @return This builder for chaining.
       */
      public Builder setReverse(boolean value) {
        
        reverse_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 
       * </pre>
       *
       * <code>bool reverse = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearReverse() {
        
        reverse_ = false;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <pre>
       *0 直线点,1鱼尾点,2梨形点       
       * </pre>
       *
       * <code>int32 type = 11;</code>
       * @return The type.
       */
      @java.lang.Override
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       *0 直线点,1鱼尾点,2梨形点       
       * </pre>
       *
       * <code>int32 type = 11;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *0 直线点,1鱼尾点,2梨形点       
       * </pre>
       *
       * <code>int32 type = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private double roadLeftDis_ ;
      /**
       * <code>double road_left_dis = 12;</code>
       * @return The roadLeftDis.
       */
      @java.lang.Override
      public double getRoadLeftDis() {
        return roadLeftDis_;
      }
      /**
       * <code>double road_left_dis = 12;</code>
       * @param value The roadLeftDis to set.
       * @return This builder for chaining.
       */
      public Builder setRoadLeftDis(double value) {
        
        roadLeftDis_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double road_left_dis = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearRoadLeftDis() {
        
        roadLeftDis_ = 0D;
        onChanged();
        return this;
      }

      private double roadRightDis_ ;
      /**
       * <code>double road_right_dis = 13;</code>
       * @return The roadRightDis.
       */
      @java.lang.Override
      public double getRoadRightDis() {
        return roadRightDis_;
      }
      /**
       * <code>double road_right_dis = 13;</code>
       * @param value The roadRightDis to set.
       * @return This builder for chaining.
       */
      public Builder setRoadRightDis(double value) {
        
        roadRightDis_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double road_right_dis = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearRoadRightDis() {
        
        roadRightDis_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PointXYZ>
        PARSER = new com.google.protobuf.AbstractParser<PointXYZ>() {
      @java.lang.Override
      public PointXYZ parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PointXYZ(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PointXYZ> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PointXYZ> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RoutePathOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 total_paths_num = 1;</code>
     * @return The totalPathsNum.
     */
    int getTotalPathsNum();

    /**
     * <code>int32 cur_paths_num = 2;</code>
     * @return The curPathsNum.
     */
    int getCurPathsNum();

    /**
     * <code>int32 total_point_num = 3;</code>
     * @return The totalPointNum.
     */
    int getTotalPointNum();

    /**
     * <pre>
     * 作业模式 
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath.RoutingType routing_type = 4;</code>
     * @return The enum numeric value on the wire for routingType.
     */
    int getRoutingTypeValue();
    /**
     * <pre>
     * 作业模式 
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath.RoutingType routing_type = 4;</code>
     * @return The routingType.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.RoutingType getRoutingType();

    /**
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ point_xyz = 5;</code>
     */
    java.util.List<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ> 
        getPointXyzList();
    /**
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ point_xyz = 5;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ getPointXyz(int index);
    /**
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ point_xyz = 5;</code>
     */
    int getPointXyzCount();
    /**
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ point_xyz = 5;</code>
     */
    java.util.List<? extends com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZOrBuilder> 
        getPointXyzOrBuilderList();
    /**
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ point_xyz = 5;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZOrBuilder getPointXyzOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath}
   */
  public static final class RoutePath extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath)
      RoutePathOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RoutePath.newBuilder() to construct.
    private RoutePath(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RoutePath() {
      routingType_ = 0;
      pointXyz_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RoutePath();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RoutePath(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              totalPathsNum_ = input.readInt32();
              break;
            }
            case 16: {

              curPathsNum_ = input.readInt32();
              break;
            }
            case 24: {

              totalPointNum_ = input.readInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              routingType_ = rawValue;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                pointXyz_ = new java.util.ArrayList<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ>();
                mutable_bitField0_ |= 0x00000001;
              }
              pointXyz_.add(
                  input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          pointXyz_ = java.util.Collections.unmodifiableList(pointXyz_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_RoutePath_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_RoutePath_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.Builder.class);
    }

    /**
     * Protobuf enum {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath.RoutingType}
     */
    public enum RoutingType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>ROUTE_TYPE_NULL = 0;</code>
       */
      ROUTE_TYPE_NULL(0),
      /**
       * <pre>
       * AB线模式 单线
       * </pre>
       *
       * <code>ROUTE_TYPE_AB_SINGLE = 1;</code>
       */
      ROUTE_TYPE_AB_SINGLE(1),
      /**
       * <pre>
       * AB线模式 多线
       * </pre>
       *
       * <code>ROUTE_TYPE_AB_MULTI = 2;</code>
       */
      ROUTE_TYPE_AB_MULTI(2),
      /**
       * <pre>
       * ABCD 套圈模式
       * </pre>
       *
       * <code>ROUTE_TYPE_ABCD_LOOP = 3;</code>
       */
      ROUTE_TYPE_ABCD_LOOP(3),
      /**
       * <pre>
       * ABCD 套圈模式 贴边
       * </pre>
       *
       * <code>ROUTE_TYPE_ABCD_LOOP_WELT = 4;</code>
       */
      ROUTE_TYPE_ABCD_LOOP_WELT(4),
      /**
       * <pre>
       * ABCD 鱼尾 
       * </pre>
       *
       * <code>ROUTE_TYPE_ABCD_FISHTAIL = 5;</code>
       */
      ROUTE_TYPE_ABCD_FISHTAIL(5),
      /**
       * <pre>
       * ABCD 鱼尾 贴边 
       * </pre>
       *
       * <code>ROUTE_TYPE_ABCD_FISHTAIL_WELT = 6;</code>
       */
      ROUTE_TYPE_ABCD_FISHTAIL_WELT(6),
      /**
       * <pre>
       * ABCD 梨形  
       * </pre>
       *
       * <code>ROUTE_TYPE_ABCD_PEAR = 7;</code>
       */
      ROUTE_TYPE_ABCD_PEAR(7),
      /**
       * <pre>
       * ABCD 梨形 贴边
       * </pre>
       *
       * <code>ROUTE_TYPE_ABCD_PEAR_WELT = 8;</code>
       */
      ROUTE_TYPE_ABCD_PEAR_WELT(8),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>ROUTE_TYPE_NULL = 0;</code>
       */
      public static final int ROUTE_TYPE_NULL_VALUE = 0;
      /**
       * <pre>
       * AB线模式 单线
       * </pre>
       *
       * <code>ROUTE_TYPE_AB_SINGLE = 1;</code>
       */
      public static final int ROUTE_TYPE_AB_SINGLE_VALUE = 1;
      /**
       * <pre>
       * AB线模式 多线
       * </pre>
       *
       * <code>ROUTE_TYPE_AB_MULTI = 2;</code>
       */
      public static final int ROUTE_TYPE_AB_MULTI_VALUE = 2;
      /**
       * <pre>
       * ABCD 套圈模式
       * </pre>
       *
       * <code>ROUTE_TYPE_ABCD_LOOP = 3;</code>
       */
      public static final int ROUTE_TYPE_ABCD_LOOP_VALUE = 3;
      /**
       * <pre>
       * ABCD 套圈模式 贴边
       * </pre>
       *
       * <code>ROUTE_TYPE_ABCD_LOOP_WELT = 4;</code>
       */
      public static final int ROUTE_TYPE_ABCD_LOOP_WELT_VALUE = 4;
      /**
       * <pre>
       * ABCD 鱼尾 
       * </pre>
       *
       * <code>ROUTE_TYPE_ABCD_FISHTAIL = 5;</code>
       */
      public static final int ROUTE_TYPE_ABCD_FISHTAIL_VALUE = 5;
      /**
       * <pre>
       * ABCD 鱼尾 贴边 
       * </pre>
       *
       * <code>ROUTE_TYPE_ABCD_FISHTAIL_WELT = 6;</code>
       */
      public static final int ROUTE_TYPE_ABCD_FISHTAIL_WELT_VALUE = 6;
      /**
       * <pre>
       * ABCD 梨形  
       * </pre>
       *
       * <code>ROUTE_TYPE_ABCD_PEAR = 7;</code>
       */
      public static final int ROUTE_TYPE_ABCD_PEAR_VALUE = 7;
      /**
       * <pre>
       * ABCD 梨形 贴边
       * </pre>
       *
       * <code>ROUTE_TYPE_ABCD_PEAR_WELT = 8;</code>
       */
      public static final int ROUTE_TYPE_ABCD_PEAR_WELT_VALUE = 8;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RoutingType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static RoutingType forNumber(int value) {
        switch (value) {
          case 0: return ROUTE_TYPE_NULL;
          case 1: return ROUTE_TYPE_AB_SINGLE;
          case 2: return ROUTE_TYPE_AB_MULTI;
          case 3: return ROUTE_TYPE_ABCD_LOOP;
          case 4: return ROUTE_TYPE_ABCD_LOOP_WELT;
          case 5: return ROUTE_TYPE_ABCD_FISHTAIL;
          case 6: return ROUTE_TYPE_ABCD_FISHTAIL_WELT;
          case 7: return ROUTE_TYPE_ABCD_PEAR;
          case 8: return ROUTE_TYPE_ABCD_PEAR_WELT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<RoutingType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          RoutingType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RoutingType>() {
              public RoutingType findValueByNumber(int number) {
                return RoutingType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.getDescriptor().getEnumTypes().get(0);
      }

      private static final RoutingType[] VALUES = values();

      public static RoutingType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private RoutingType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath.RoutingType)
    }

    public static final int TOTAL_PATHS_NUM_FIELD_NUMBER = 1;
    private int totalPathsNum_;
    /**
     * <code>int32 total_paths_num = 1;</code>
     * @return The totalPathsNum.
     */
    @java.lang.Override
    public int getTotalPathsNum() {
      return totalPathsNum_;
    }

    public static final int CUR_PATHS_NUM_FIELD_NUMBER = 2;
    private int curPathsNum_;
    /**
     * <code>int32 cur_paths_num = 2;</code>
     * @return The curPathsNum.
     */
    @java.lang.Override
    public int getCurPathsNum() {
      return curPathsNum_;
    }

    public static final int TOTAL_POINT_NUM_FIELD_NUMBER = 3;
    private int totalPointNum_;
    /**
     * <code>int32 total_point_num = 3;</code>
     * @return The totalPointNum.
     */
    @java.lang.Override
    public int getTotalPointNum() {
      return totalPointNum_;
    }

    public static final int ROUTING_TYPE_FIELD_NUMBER = 4;
    private int routingType_;
    /**
     * <pre>
     * 作业模式 
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath.RoutingType routing_type = 4;</code>
     * @return The enum numeric value on the wire for routingType.
     */
    @java.lang.Override public int getRoutingTypeValue() {
      return routingType_;
    }
    /**
     * <pre>
     * 作业模式 
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath.RoutingType routing_type = 4;</code>
     * @return The routingType.
     */
    @java.lang.Override public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.RoutingType getRoutingType() {
      @SuppressWarnings("deprecation")
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.RoutingType result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.RoutingType.valueOf(routingType_);
      return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.RoutingType.UNRECOGNIZED : result;
    }

    public static final int POINT_XYZ_FIELD_NUMBER = 5;
    private java.util.List<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ> pointXyz_;
    /**
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ point_xyz = 5;</code>
     */
    @java.lang.Override
    public java.util.List<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ> getPointXyzList() {
      return pointXyz_;
    }
    /**
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ point_xyz = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZOrBuilder> 
        getPointXyzOrBuilderList() {
      return pointXyz_;
    }
    /**
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ point_xyz = 5;</code>
     */
    @java.lang.Override
    public int getPointXyzCount() {
      return pointXyz_.size();
    }
    /**
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ point_xyz = 5;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ getPointXyz(int index) {
      return pointXyz_.get(index);
    }
    /**
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ point_xyz = 5;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZOrBuilder getPointXyzOrBuilder(
        int index) {
      return pointXyz_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (totalPathsNum_ != 0) {
        output.writeInt32(1, totalPathsNum_);
      }
      if (curPathsNum_ != 0) {
        output.writeInt32(2, curPathsNum_);
      }
      if (totalPointNum_ != 0) {
        output.writeInt32(3, totalPointNum_);
      }
      if (routingType_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.RoutingType.ROUTE_TYPE_NULL.getNumber()) {
        output.writeEnum(4, routingType_);
      }
      for (int i = 0; i < pointXyz_.size(); i++) {
        output.writeMessage(5, pointXyz_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (totalPathsNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, totalPathsNum_);
      }
      if (curPathsNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, curPathsNum_);
      }
      if (totalPointNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, totalPointNum_);
      }
      if (routingType_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.RoutingType.ROUTE_TYPE_NULL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, routingType_);
      }
      for (int i = 0; i < pointXyz_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, pointXyz_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath) obj;

      if (getTotalPathsNum()
          != other.getTotalPathsNum()) return false;
      if (getCurPathsNum()
          != other.getCurPathsNum()) return false;
      if (getTotalPointNum()
          != other.getTotalPointNum()) return false;
      if (routingType_ != other.routingType_) return false;
      if (!getPointXyzList()
          .equals(other.getPointXyzList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TOTAL_PATHS_NUM_FIELD_NUMBER;
      hash = (53 * hash) + getTotalPathsNum();
      hash = (37 * hash) + CUR_PATHS_NUM_FIELD_NUMBER;
      hash = (53 * hash) + getCurPathsNum();
      hash = (37 * hash) + TOTAL_POINT_NUM_FIELD_NUMBER;
      hash = (53 * hash) + getTotalPointNum();
      hash = (37 * hash) + ROUTING_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + routingType_;
      if (getPointXyzCount() > 0) {
        hash = (37 * hash) + POINT_XYZ_FIELD_NUMBER;
        hash = (53 * hash) + getPointXyzList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePathOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_RoutePath_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_RoutePath_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPointXyzFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        totalPathsNum_ = 0;

        curPathsNum_ = 0;

        totalPointNum_ = 0;

        routingType_ = 0;

        if (pointXyzBuilder_ == null) {
          pointXyz_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          pointXyzBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_RoutePath_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath(this);
        int from_bitField0_ = bitField0_;
        result.totalPathsNum_ = totalPathsNum_;
        result.curPathsNum_ = curPathsNum_;
        result.totalPointNum_ = totalPointNum_;
        result.routingType_ = routingType_;
        if (pointXyzBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            pointXyz_ = java.util.Collections.unmodifiableList(pointXyz_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.pointXyz_ = pointXyz_;
        } else {
          result.pointXyz_ = pointXyzBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.getDefaultInstance()) return this;
        if (other.getTotalPathsNum() != 0) {
          setTotalPathsNum(other.getTotalPathsNum());
        }
        if (other.getCurPathsNum() != 0) {
          setCurPathsNum(other.getCurPathsNum());
        }
        if (other.getTotalPointNum() != 0) {
          setTotalPointNum(other.getTotalPointNum());
        }
        if (other.routingType_ != 0) {
          setRoutingTypeValue(other.getRoutingTypeValue());
        }
        if (pointXyzBuilder_ == null) {
          if (!other.pointXyz_.isEmpty()) {
            if (pointXyz_.isEmpty()) {
              pointXyz_ = other.pointXyz_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePointXyzIsMutable();
              pointXyz_.addAll(other.pointXyz_);
            }
            onChanged();
          }
        } else {
          if (!other.pointXyz_.isEmpty()) {
            if (pointXyzBuilder_.isEmpty()) {
              pointXyzBuilder_.dispose();
              pointXyzBuilder_ = null;
              pointXyz_ = other.pointXyz_;
              bitField0_ = (bitField0_ & ~0x00000001);
              pointXyzBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPointXyzFieldBuilder() : null;
            } else {
              pointXyzBuilder_.addAllMessages(other.pointXyz_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int totalPathsNum_ ;
      /**
       * <code>int32 total_paths_num = 1;</code>
       * @return The totalPathsNum.
       */
      @java.lang.Override
      public int getTotalPathsNum() {
        return totalPathsNum_;
      }
      /**
       * <code>int32 total_paths_num = 1;</code>
       * @param value The totalPathsNum to set.
       * @return This builder for chaining.
       */
      public Builder setTotalPathsNum(int value) {
        
        totalPathsNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 total_paths_num = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalPathsNum() {
        
        totalPathsNum_ = 0;
        onChanged();
        return this;
      }

      private int curPathsNum_ ;
      /**
       * <code>int32 cur_paths_num = 2;</code>
       * @return The curPathsNum.
       */
      @java.lang.Override
      public int getCurPathsNum() {
        return curPathsNum_;
      }
      /**
       * <code>int32 cur_paths_num = 2;</code>
       * @param value The curPathsNum to set.
       * @return This builder for chaining.
       */
      public Builder setCurPathsNum(int value) {
        
        curPathsNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 cur_paths_num = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurPathsNum() {
        
        curPathsNum_ = 0;
        onChanged();
        return this;
      }

      private int totalPointNum_ ;
      /**
       * <code>int32 total_point_num = 3;</code>
       * @return The totalPointNum.
       */
      @java.lang.Override
      public int getTotalPointNum() {
        return totalPointNum_;
      }
      /**
       * <code>int32 total_point_num = 3;</code>
       * @param value The totalPointNum to set.
       * @return This builder for chaining.
       */
      public Builder setTotalPointNum(int value) {
        
        totalPointNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 total_point_num = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalPointNum() {
        
        totalPointNum_ = 0;
        onChanged();
        return this;
      }

      private int routingType_ = 0;
      /**
       * <pre>
       * 作业模式 
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath.RoutingType routing_type = 4;</code>
       * @return The enum numeric value on the wire for routingType.
       */
      @java.lang.Override public int getRoutingTypeValue() {
        return routingType_;
      }
      /**
       * <pre>
       * 作业模式 
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath.RoutingType routing_type = 4;</code>
       * @param value The enum numeric value on the wire for routingType to set.
       * @return This builder for chaining.
       */
      public Builder setRoutingTypeValue(int value) {
        
        routingType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 作业模式 
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath.RoutingType routing_type = 4;</code>
       * @return The routingType.
       */
      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.RoutingType getRoutingType() {
        @SuppressWarnings("deprecation")
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.RoutingType result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.RoutingType.valueOf(routingType_);
        return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.RoutingType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * 作业模式 
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath.RoutingType routing_type = 4;</code>
       * @param value The routingType to set.
       * @return This builder for chaining.
       */
      public Builder setRoutingType(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath.RoutingType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        routingType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 作业模式 
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath.RoutingType routing_type = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRoutingType() {
        
        routingType_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ> pointXyz_ =
        java.util.Collections.emptyList();
      private void ensurePointXyzIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          pointXyz_ = new java.util.ArrayList<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ>(pointXyz_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZOrBuilder> pointXyzBuilder_;

      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ point_xyz = 5;</code>
       */
      public java.util.List<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ> getPointXyzList() {
        if (pointXyzBuilder_ == null) {
          return java.util.Collections.unmodifiableList(pointXyz_);
        } else {
          return pointXyzBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ point_xyz = 5;</code>
       */
      public int getPointXyzCount() {
        if (pointXyzBuilder_ == null) {
          return pointXyz_.size();
        } else {
          return pointXyzBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ point_xyz = 5;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ getPointXyz(int index) {
        if (pointXyzBuilder_ == null) {
          return pointXyz_.get(index);
        } else {
          return pointXyzBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ point_xyz = 5;</code>
       */
      public Builder setPointXyz(
          int index, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ value) {
        if (pointXyzBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointXyzIsMutable();
          pointXyz_.set(index, value);
          onChanged();
        } else {
          pointXyzBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ point_xyz = 5;</code>
       */
      public Builder setPointXyz(
          int index, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ.Builder builderForValue) {
        if (pointXyzBuilder_ == null) {
          ensurePointXyzIsMutable();
          pointXyz_.set(index, builderForValue.build());
          onChanged();
        } else {
          pointXyzBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ point_xyz = 5;</code>
       */
      public Builder addPointXyz(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ value) {
        if (pointXyzBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointXyzIsMutable();
          pointXyz_.add(value);
          onChanged();
        } else {
          pointXyzBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ point_xyz = 5;</code>
       */
      public Builder addPointXyz(
          int index, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ value) {
        if (pointXyzBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointXyzIsMutable();
          pointXyz_.add(index, value);
          onChanged();
        } else {
          pointXyzBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ point_xyz = 5;</code>
       */
      public Builder addPointXyz(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ.Builder builderForValue) {
        if (pointXyzBuilder_ == null) {
          ensurePointXyzIsMutable();
          pointXyz_.add(builderForValue.build());
          onChanged();
        } else {
          pointXyzBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ point_xyz = 5;</code>
       */
      public Builder addPointXyz(
          int index, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ.Builder builderForValue) {
        if (pointXyzBuilder_ == null) {
          ensurePointXyzIsMutable();
          pointXyz_.add(index, builderForValue.build());
          onChanged();
        } else {
          pointXyzBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ point_xyz = 5;</code>
       */
      public Builder addAllPointXyz(
          java.lang.Iterable<? extends com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ> values) {
        if (pointXyzBuilder_ == null) {
          ensurePointXyzIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, pointXyz_);
          onChanged();
        } else {
          pointXyzBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ point_xyz = 5;</code>
       */
      public Builder clearPointXyz() {
        if (pointXyzBuilder_ == null) {
          pointXyz_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          pointXyzBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ point_xyz = 5;</code>
       */
      public Builder removePointXyz(int index) {
        if (pointXyzBuilder_ == null) {
          ensurePointXyzIsMutable();
          pointXyz_.remove(index);
          onChanged();
        } else {
          pointXyzBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ point_xyz = 5;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ.Builder getPointXyzBuilder(
          int index) {
        return getPointXyzFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ point_xyz = 5;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZOrBuilder getPointXyzOrBuilder(
          int index) {
        if (pointXyzBuilder_ == null) {
          return pointXyz_.get(index);  } else {
          return pointXyzBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ point_xyz = 5;</code>
       */
      public java.util.List<? extends com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZOrBuilder> 
           getPointXyzOrBuilderList() {
        if (pointXyzBuilder_ != null) {
          return pointXyzBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(pointXyz_);
        }
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ point_xyz = 5;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ.Builder addPointXyzBuilder() {
        return getPointXyzFieldBuilder().addBuilder(
            com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ.getDefaultInstance());
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ point_xyz = 5;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ.Builder addPointXyzBuilder(
          int index) {
        return getPointXyzFieldBuilder().addBuilder(
            index, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ.getDefaultInstance());
      }
      /**
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PointXYZ point_xyz = 5;</code>
       */
      public java.util.List<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ.Builder> 
           getPointXyzBuilderList() {
        return getPointXyzFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZOrBuilder> 
          getPointXyzFieldBuilder() {
        if (pointXyzBuilder_ == null) {
          pointXyzBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZ.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PointXYZOrBuilder>(
                  pointXyz_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          pointXyz_ = null;
        }
        return pointXyzBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RoutePath)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RoutePath>
        PARSER = new com.google.protobuf.AbstractParser<RoutePath>() {
      @java.lang.Override
      public RoutePath parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoutePath(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RoutePath> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RoutePath> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RoutePath getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PoseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>double px = 1;</code>
     * @return The px.
     */
    double getPx();

    /**
     * <code>double py = 2;</code>
     * @return The py.
     */
    double getPy();

    /**
     * <code>double pz = 3;</code>
     * @return The pz.
     */
    double getPz();

    /**
     * <pre>
     *航向角
     * </pre>
     *
     * <code>double yaw = 4;</code>
     * @return The yaw.
     */
    double getYaw();

    /**
     * <pre>
     *俯仰角
     * </pre>
     *
     * <code>double pitch = 5;</code>
     * @return The pitch.
     */
    double getPitch();

    /**
     * <code>double roll = 6;</code>
     * @return The roll.
     */
    double getRoll();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose}
   */
  public static final class Pose extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose)
      PoseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Pose.newBuilder() to construct.
    private Pose(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Pose() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Pose();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Pose(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {

              px_ = input.readDouble();
              break;
            }
            case 17: {

              py_ = input.readDouble();
              break;
            }
            case 25: {

              pz_ = input.readDouble();
              break;
            }
            case 33: {

              yaw_ = input.readDouble();
              break;
            }
            case 41: {

              pitch_ = input.readDouble();
              break;
            }
            case 49: {

              roll_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Pose_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Pose_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.Builder.class);
    }

    public static final int PX_FIELD_NUMBER = 1;
    private double px_;
    /**
     * <code>double px = 1;</code>
     * @return The px.
     */
    @java.lang.Override
    public double getPx() {
      return px_;
    }

    public static final int PY_FIELD_NUMBER = 2;
    private double py_;
    /**
     * <code>double py = 2;</code>
     * @return The py.
     */
    @java.lang.Override
    public double getPy() {
      return py_;
    }

    public static final int PZ_FIELD_NUMBER = 3;
    private double pz_;
    /**
     * <code>double pz = 3;</code>
     * @return The pz.
     */
    @java.lang.Override
    public double getPz() {
      return pz_;
    }

    public static final int YAW_FIELD_NUMBER = 4;
    private double yaw_;
    /**
     * <pre>
     *航向角
     * </pre>
     *
     * <code>double yaw = 4;</code>
     * @return The yaw.
     */
    @java.lang.Override
    public double getYaw() {
      return yaw_;
    }

    public static final int PITCH_FIELD_NUMBER = 5;
    private double pitch_;
    /**
     * <pre>
     *俯仰角
     * </pre>
     *
     * <code>double pitch = 5;</code>
     * @return The pitch.
     */
    @java.lang.Override
    public double getPitch() {
      return pitch_;
    }

    public static final int ROLL_FIELD_NUMBER = 6;
    private double roll_;
    /**
     * <code>double roll = 6;</code>
     * @return The roll.
     */
    @java.lang.Override
    public double getRoll() {
      return roll_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (px_ != 0D) {
        output.writeDouble(1, px_);
      }
      if (py_ != 0D) {
        output.writeDouble(2, py_);
      }
      if (pz_ != 0D) {
        output.writeDouble(3, pz_);
      }
      if (yaw_ != 0D) {
        output.writeDouble(4, yaw_);
      }
      if (pitch_ != 0D) {
        output.writeDouble(5, pitch_);
      }
      if (roll_ != 0D) {
        output.writeDouble(6, roll_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (px_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, px_);
      }
      if (py_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, py_);
      }
      if (pz_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, pz_);
      }
      if (yaw_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, yaw_);
      }
      if (pitch_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, pitch_);
      }
      if (roll_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, roll_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose) obj;

      if (java.lang.Double.doubleToLongBits(getPx())
          != java.lang.Double.doubleToLongBits(
              other.getPx())) return false;
      if (java.lang.Double.doubleToLongBits(getPy())
          != java.lang.Double.doubleToLongBits(
              other.getPy())) return false;
      if (java.lang.Double.doubleToLongBits(getPz())
          != java.lang.Double.doubleToLongBits(
              other.getPz())) return false;
      if (java.lang.Double.doubleToLongBits(getYaw())
          != java.lang.Double.doubleToLongBits(
              other.getYaw())) return false;
      if (java.lang.Double.doubleToLongBits(getPitch())
          != java.lang.Double.doubleToLongBits(
              other.getPitch())) return false;
      if (java.lang.Double.doubleToLongBits(getRoll())
          != java.lang.Double.doubleToLongBits(
              other.getRoll())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PX_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPx()));
      hash = (37 * hash) + PY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPy()));
      hash = (37 * hash) + PZ_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPz()));
      hash = (37 * hash) + YAW_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getYaw()));
      hash = (37 * hash) + PITCH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPitch()));
      hash = (37 * hash) + ROLL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getRoll()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PoseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Pose_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Pose_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        px_ = 0D;

        py_ = 0D;

        pz_ = 0D;

        yaw_ = 0D;

        pitch_ = 0D;

        roll_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Pose_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose(this);
        result.px_ = px_;
        result.py_ = py_;
        result.pz_ = pz_;
        result.yaw_ = yaw_;
        result.pitch_ = pitch_;
        result.roll_ = roll_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.getDefaultInstance()) return this;
        if (other.getPx() != 0D) {
          setPx(other.getPx());
        }
        if (other.getPy() != 0D) {
          setPy(other.getPy());
        }
        if (other.getPz() != 0D) {
          setPz(other.getPz());
        }
        if (other.getYaw() != 0D) {
          setYaw(other.getYaw());
        }
        if (other.getPitch() != 0D) {
          setPitch(other.getPitch());
        }
        if (other.getRoll() != 0D) {
          setRoll(other.getRoll());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private double px_ ;
      /**
       * <code>double px = 1;</code>
       * @return The px.
       */
      @java.lang.Override
      public double getPx() {
        return px_;
      }
      /**
       * <code>double px = 1;</code>
       * @param value The px to set.
       * @return This builder for chaining.
       */
      public Builder setPx(double value) {
        
        px_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double px = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPx() {
        
        px_ = 0D;
        onChanged();
        return this;
      }

      private double py_ ;
      /**
       * <code>double py = 2;</code>
       * @return The py.
       */
      @java.lang.Override
      public double getPy() {
        return py_;
      }
      /**
       * <code>double py = 2;</code>
       * @param value The py to set.
       * @return This builder for chaining.
       */
      public Builder setPy(double value) {
        
        py_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double py = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPy() {
        
        py_ = 0D;
        onChanged();
        return this;
      }

      private double pz_ ;
      /**
       * <code>double pz = 3;</code>
       * @return The pz.
       */
      @java.lang.Override
      public double getPz() {
        return pz_;
      }
      /**
       * <code>double pz = 3;</code>
       * @param value The pz to set.
       * @return This builder for chaining.
       */
      public Builder setPz(double value) {
        
        pz_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double pz = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPz() {
        
        pz_ = 0D;
        onChanged();
        return this;
      }

      private double yaw_ ;
      /**
       * <pre>
       *航向角
       * </pre>
       *
       * <code>double yaw = 4;</code>
       * @return The yaw.
       */
      @java.lang.Override
      public double getYaw() {
        return yaw_;
      }
      /**
       * <pre>
       *航向角
       * </pre>
       *
       * <code>double yaw = 4;</code>
       * @param value The yaw to set.
       * @return This builder for chaining.
       */
      public Builder setYaw(double value) {
        
        yaw_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *航向角
       * </pre>
       *
       * <code>double yaw = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearYaw() {
        
        yaw_ = 0D;
        onChanged();
        return this;
      }

      private double pitch_ ;
      /**
       * <pre>
       *俯仰角
       * </pre>
       *
       * <code>double pitch = 5;</code>
       * @return The pitch.
       */
      @java.lang.Override
      public double getPitch() {
        return pitch_;
      }
      /**
       * <pre>
       *俯仰角
       * </pre>
       *
       * <code>double pitch = 5;</code>
       * @param value The pitch to set.
       * @return This builder for chaining.
       */
      public Builder setPitch(double value) {
        
        pitch_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *俯仰角
       * </pre>
       *
       * <code>double pitch = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearPitch() {
        
        pitch_ = 0D;
        onChanged();
        return this;
      }

      private double roll_ ;
      /**
       * <code>double roll = 6;</code>
       * @return The roll.
       */
      @java.lang.Override
      public double getRoll() {
        return roll_;
      }
      /**
       * <code>double roll = 6;</code>
       * @param value The roll to set.
       * @return This builder for chaining.
       */
      public Builder setRoll(double value) {
        
        roll_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double roll = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearRoll() {
        
        roll_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Pose>
        PARSER = new com.google.protobuf.AbstractParser<Pose>() {
      @java.lang.Override
      public Pose parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Pose(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Pose> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Pose> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RouteParamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 作业模式 
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam.RoutingType routing_type = 1;</code>
     * @return The enum numeric value on the wire for routingType.
     */
    int getRoutingTypeValue();
    /**
     * <pre>
     * 作业模式 
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam.RoutingType routing_type = 1;</code>
     * @return The routingType.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.RoutingType getRoutingType();

    /**
     * <pre>
     * 田块打点AB值 
     * </pre>
     *
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose pose = 2;</code>
     */
    java.util.List<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose> 
        getPoseList();
    /**
     * <pre>
     * 田块打点AB值 
     * </pre>
     *
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose pose = 2;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose getPose(int index);
    /**
     * <pre>
     * 田块打点AB值 
     * </pre>
     *
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose pose = 2;</code>
     */
    int getPoseCount();
    /**
     * <pre>
     * 田块打点AB值 
     * </pre>
     *
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose pose = 2;</code>
     */
    java.util.List<? extends com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PoseOrBuilder> 
        getPoseOrBuilderList();
    /**
     * <pre>
     * 田块打点AB值 
     * </pre>
     *
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose pose = 2;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PoseOrBuilder getPoseOrBuilder(
        int index);

    /**
     * <pre>
     * 农机具幅宽
     * </pre>
     *
     * <code>double agricultural_imple_width = 3;</code>
     * @return The agriculturalImpleWidth.
     */
    double getAgriculturalImpleWidth();

    /**
     * <pre>
     * 作业行间距
     * </pre>
     *
     * <code>double line_space = 4;</code>
     * @return The lineSpace.
     */
    double getLineSpace();

    /**
     * <pre>
     * 农机具安装偏移方向
     * </pre>
     *
     * <code>int32 direction = 5;</code>
     * @return The direction.
     */
    int getDirection();

    /**
     * <pre>
     * 农机具安装误差
     * </pre>
     *
     * <code>double agricultural_imple_installerror = 6;</code>
     * @return The agriculturalImpleInstallerror.
     */
    double getAgriculturalImpleInstallerror();

    /**
     * <pre>
     * 转弯半径
     * </pre>
     *
     * <code>double turn_radius = 7;</code>
     * @return The turnRadius.
     */
    double getTurnRadius();

    /**
     * <pre>
     * 是否更改默认朝向
     * </pre>
     *
     * <code>bool change_operation_ori = 8;</code>
     * @return The changeOperationOri.
     */
    boolean getChangeOperationOri();

    /**
     * <pre>
     *  是否支持倒档 
     * </pre>
     *
     * <code>bool reverse_flag = 9;</code>
     * @return The reverseFlag.
     */
    boolean getReverseFlag();

    /**
     * <code>double hang_down_dist = 10;</code>
     * @return The hangDownDist.
     */
    double getHangDownDist();

    /**
     * <code>double hang_up_dist = 11;</code>
     * @return The hangUpDist.
     */
    double getHangUpDist();

    /**
     * <code>double pto_off_dist = 12;</code>
     * @return The ptoOffDist.
     */
    double getPtoOffDist();

    /**
     * <code>double pto_on_dist = 13;</code>
     * @return The ptoOnDist.
     */
    double getPtoOnDist();

    /**
     * <code>double target_vel = 14;</code>
     * @return The targetVel.
     */
    double getTargetVel();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam}
   */
  public static final class RouteParam extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam)
      RouteParamOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RouteParam.newBuilder() to construct.
    private RouteParam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RouteParam() {
      routingType_ = 0;
      pose_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RouteParam();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RouteParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              routingType_ = rawValue;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                pose_ = new java.util.ArrayList<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose>();
                mutable_bitField0_ |= 0x00000001;
              }
              pose_.add(
                  input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.parser(), extensionRegistry));
              break;
            }
            case 25: {

              agriculturalImpleWidth_ = input.readDouble();
              break;
            }
            case 33: {

              lineSpace_ = input.readDouble();
              break;
            }
            case 40: {

              direction_ = input.readInt32();
              break;
            }
            case 49: {

              agriculturalImpleInstallerror_ = input.readDouble();
              break;
            }
            case 57: {

              turnRadius_ = input.readDouble();
              break;
            }
            case 64: {

              changeOperationOri_ = input.readBool();
              break;
            }
            case 72: {

              reverseFlag_ = input.readBool();
              break;
            }
            case 81: {

              hangDownDist_ = input.readDouble();
              break;
            }
            case 89: {

              hangUpDist_ = input.readDouble();
              break;
            }
            case 97: {

              ptoOffDist_ = input.readDouble();
              break;
            }
            case 105: {

              ptoOnDist_ = input.readDouble();
              break;
            }
            case 113: {

              targetVel_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          pose_ = java.util.Collections.unmodifiableList(pose_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_RouteParam_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_RouteParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.Builder.class);
    }

    /**
     * Protobuf enum {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam.RoutingType}
     */
    public enum RoutingType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>ROUTE_TYPE_NULL = 0;</code>
       */
      ROUTE_TYPE_NULL(0),
      /**
       * <pre>
       * AB线模式 单线
       * </pre>
       *
       * <code>ROUTE_TYPE_AB_SINGLE = 1;</code>
       */
      ROUTE_TYPE_AB_SINGLE(1),
      /**
       * <pre>
       * AB线模式 多线
       * </pre>
       *
       * <code>ROUTE_TYPE_AB_MULTI = 2;</code>
       */
      ROUTE_TYPE_AB_MULTI(2),
      /**
       * <pre>
       * ABCD 套圈模式
       * </pre>
       *
       * <code>ROUTE_TYPE_ABCD_LOOP = 3;</code>
       */
      ROUTE_TYPE_ABCD_LOOP(3),
      /**
       * <pre>
       * ABCD 套圈模式 贴边
       * </pre>
       *
       * <code>ROUTE_TYPE_ABCD_LOOP_WELT = 4;</code>
       */
      ROUTE_TYPE_ABCD_LOOP_WELT(4),
      /**
       * <pre>
       * ABCD 鱼尾 
       * </pre>
       *
       * <code>ROUTE_TYPE_ABCD_FISHTAIL = 5;</code>
       */
      ROUTE_TYPE_ABCD_FISHTAIL(5),
      /**
       * <pre>
       * ABCD 鱼尾 贴边 
       * </pre>
       *
       * <code>ROUTE_TYPE_ABCD_FISHTAIL_WELT = 6;</code>
       */
      ROUTE_TYPE_ABCD_FISHTAIL_WELT(6),
      /**
       * <pre>
       * ABCD 梨形  
       * </pre>
       *
       * <code>ROUTE_TYPE_ABCD_PEAR = 7;</code>
       */
      ROUTE_TYPE_ABCD_PEAR(7),
      /**
       * <pre>
       * ABCD 梨形 贴边
       * </pre>
       *
       * <code>ROUTE_TYPE_ABCD_PEAR_WELT = 8;</code>
       */
      ROUTE_TYPE_ABCD_PEAR_WELT(8),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>ROUTE_TYPE_NULL = 0;</code>
       */
      public static final int ROUTE_TYPE_NULL_VALUE = 0;
      /**
       * <pre>
       * AB线模式 单线
       * </pre>
       *
       * <code>ROUTE_TYPE_AB_SINGLE = 1;</code>
       */
      public static final int ROUTE_TYPE_AB_SINGLE_VALUE = 1;
      /**
       * <pre>
       * AB线模式 多线
       * </pre>
       *
       * <code>ROUTE_TYPE_AB_MULTI = 2;</code>
       */
      public static final int ROUTE_TYPE_AB_MULTI_VALUE = 2;
      /**
       * <pre>
       * ABCD 套圈模式
       * </pre>
       *
       * <code>ROUTE_TYPE_ABCD_LOOP = 3;</code>
       */
      public static final int ROUTE_TYPE_ABCD_LOOP_VALUE = 3;
      /**
       * <pre>
       * ABCD 套圈模式 贴边
       * </pre>
       *
       * <code>ROUTE_TYPE_ABCD_LOOP_WELT = 4;</code>
       */
      public static final int ROUTE_TYPE_ABCD_LOOP_WELT_VALUE = 4;
      /**
       * <pre>
       * ABCD 鱼尾 
       * </pre>
       *
       * <code>ROUTE_TYPE_ABCD_FISHTAIL = 5;</code>
       */
      public static final int ROUTE_TYPE_ABCD_FISHTAIL_VALUE = 5;
      /**
       * <pre>
       * ABCD 鱼尾 贴边 
       * </pre>
       *
       * <code>ROUTE_TYPE_ABCD_FISHTAIL_WELT = 6;</code>
       */
      public static final int ROUTE_TYPE_ABCD_FISHTAIL_WELT_VALUE = 6;
      /**
       * <pre>
       * ABCD 梨形  
       * </pre>
       *
       * <code>ROUTE_TYPE_ABCD_PEAR = 7;</code>
       */
      public static final int ROUTE_TYPE_ABCD_PEAR_VALUE = 7;
      /**
       * <pre>
       * ABCD 梨形 贴边
       * </pre>
       *
       * <code>ROUTE_TYPE_ABCD_PEAR_WELT = 8;</code>
       */
      public static final int ROUTE_TYPE_ABCD_PEAR_WELT_VALUE = 8;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RoutingType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static RoutingType forNumber(int value) {
        switch (value) {
          case 0: return ROUTE_TYPE_NULL;
          case 1: return ROUTE_TYPE_AB_SINGLE;
          case 2: return ROUTE_TYPE_AB_MULTI;
          case 3: return ROUTE_TYPE_ABCD_LOOP;
          case 4: return ROUTE_TYPE_ABCD_LOOP_WELT;
          case 5: return ROUTE_TYPE_ABCD_FISHTAIL;
          case 6: return ROUTE_TYPE_ABCD_FISHTAIL_WELT;
          case 7: return ROUTE_TYPE_ABCD_PEAR;
          case 8: return ROUTE_TYPE_ABCD_PEAR_WELT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<RoutingType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          RoutingType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RoutingType>() {
              public RoutingType findValueByNumber(int number) {
                return RoutingType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.getDescriptor().getEnumTypes().get(0);
      }

      private static final RoutingType[] VALUES = values();

      public static RoutingType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private RoutingType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam.RoutingType)
    }

    public static final int ROUTING_TYPE_FIELD_NUMBER = 1;
    private int routingType_;
    /**
     * <pre>
     * 作业模式 
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam.RoutingType routing_type = 1;</code>
     * @return The enum numeric value on the wire for routingType.
     */
    @java.lang.Override public int getRoutingTypeValue() {
      return routingType_;
    }
    /**
     * <pre>
     * 作业模式 
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam.RoutingType routing_type = 1;</code>
     * @return The routingType.
     */
    @java.lang.Override public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.RoutingType getRoutingType() {
      @SuppressWarnings("deprecation")
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.RoutingType result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.RoutingType.valueOf(routingType_);
      return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.RoutingType.UNRECOGNIZED : result;
    }

    public static final int POSE_FIELD_NUMBER = 2;
    private java.util.List<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose> pose_;
    /**
     * <pre>
     * 田块打点AB值 
     * </pre>
     *
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose pose = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose> getPoseList() {
      return pose_;
    }
    /**
     * <pre>
     * 田块打点AB值 
     * </pre>
     *
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose pose = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PoseOrBuilder> 
        getPoseOrBuilderList() {
      return pose_;
    }
    /**
     * <pre>
     * 田块打点AB值 
     * </pre>
     *
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose pose = 2;</code>
     */
    @java.lang.Override
    public int getPoseCount() {
      return pose_.size();
    }
    /**
     * <pre>
     * 田块打点AB值 
     * </pre>
     *
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose pose = 2;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose getPose(int index) {
      return pose_.get(index);
    }
    /**
     * <pre>
     * 田块打点AB值 
     * </pre>
     *
     * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose pose = 2;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PoseOrBuilder getPoseOrBuilder(
        int index) {
      return pose_.get(index);
    }

    public static final int AGRICULTURAL_IMPLE_WIDTH_FIELD_NUMBER = 3;
    private double agriculturalImpleWidth_;
    /**
     * <pre>
     * 农机具幅宽
     * </pre>
     *
     * <code>double agricultural_imple_width = 3;</code>
     * @return The agriculturalImpleWidth.
     */
    @java.lang.Override
    public double getAgriculturalImpleWidth() {
      return agriculturalImpleWidth_;
    }

    public static final int LINE_SPACE_FIELD_NUMBER = 4;
    private double lineSpace_;
    /**
     * <pre>
     * 作业行间距
     * </pre>
     *
     * <code>double line_space = 4;</code>
     * @return The lineSpace.
     */
    @java.lang.Override
    public double getLineSpace() {
      return lineSpace_;
    }

    public static final int DIRECTION_FIELD_NUMBER = 5;
    private int direction_;
    /**
     * <pre>
     * 农机具安装偏移方向
     * </pre>
     *
     * <code>int32 direction = 5;</code>
     * @return The direction.
     */
    @java.lang.Override
    public int getDirection() {
      return direction_;
    }

    public static final int AGRICULTURAL_IMPLE_INSTALLERROR_FIELD_NUMBER = 6;
    private double agriculturalImpleInstallerror_;
    /**
     * <pre>
     * 农机具安装误差
     * </pre>
     *
     * <code>double agricultural_imple_installerror = 6;</code>
     * @return The agriculturalImpleInstallerror.
     */
    @java.lang.Override
    public double getAgriculturalImpleInstallerror() {
      return agriculturalImpleInstallerror_;
    }

    public static final int TURN_RADIUS_FIELD_NUMBER = 7;
    private double turnRadius_;
    /**
     * <pre>
     * 转弯半径
     * </pre>
     *
     * <code>double turn_radius = 7;</code>
     * @return The turnRadius.
     */
    @java.lang.Override
    public double getTurnRadius() {
      return turnRadius_;
    }

    public static final int CHANGE_OPERATION_ORI_FIELD_NUMBER = 8;
    private boolean changeOperationOri_;
    /**
     * <pre>
     * 是否更改默认朝向
     * </pre>
     *
     * <code>bool change_operation_ori = 8;</code>
     * @return The changeOperationOri.
     */
    @java.lang.Override
    public boolean getChangeOperationOri() {
      return changeOperationOri_;
    }

    public static final int REVERSE_FLAG_FIELD_NUMBER = 9;
    private boolean reverseFlag_;
    /**
     * <pre>
     *  是否支持倒档 
     * </pre>
     *
     * <code>bool reverse_flag = 9;</code>
     * @return The reverseFlag.
     */
    @java.lang.Override
    public boolean getReverseFlag() {
      return reverseFlag_;
    }

    public static final int HANG_DOWN_DIST_FIELD_NUMBER = 10;
    private double hangDownDist_;
    /**
     * <code>double hang_down_dist = 10;</code>
     * @return The hangDownDist.
     */
    @java.lang.Override
    public double getHangDownDist() {
      return hangDownDist_;
    }

    public static final int HANG_UP_DIST_FIELD_NUMBER = 11;
    private double hangUpDist_;
    /**
     * <code>double hang_up_dist = 11;</code>
     * @return The hangUpDist.
     */
    @java.lang.Override
    public double getHangUpDist() {
      return hangUpDist_;
    }

    public static final int PTO_OFF_DIST_FIELD_NUMBER = 12;
    private double ptoOffDist_;
    /**
     * <code>double pto_off_dist = 12;</code>
     * @return The ptoOffDist.
     */
    @java.lang.Override
    public double getPtoOffDist() {
      return ptoOffDist_;
    }

    public static final int PTO_ON_DIST_FIELD_NUMBER = 13;
    private double ptoOnDist_;
    /**
     * <code>double pto_on_dist = 13;</code>
     * @return The ptoOnDist.
     */
    @java.lang.Override
    public double getPtoOnDist() {
      return ptoOnDist_;
    }

    public static final int TARGET_VEL_FIELD_NUMBER = 14;
    private double targetVel_;
    /**
     * <code>double target_vel = 14;</code>
     * @return The targetVel.
     */
    @java.lang.Override
    public double getTargetVel() {
      return targetVel_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (routingType_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.RoutingType.ROUTE_TYPE_NULL.getNumber()) {
        output.writeEnum(1, routingType_);
      }
      for (int i = 0; i < pose_.size(); i++) {
        output.writeMessage(2, pose_.get(i));
      }
      if (agriculturalImpleWidth_ != 0D) {
        output.writeDouble(3, agriculturalImpleWidth_);
      }
      if (lineSpace_ != 0D) {
        output.writeDouble(4, lineSpace_);
      }
      if (direction_ != 0) {
        output.writeInt32(5, direction_);
      }
      if (agriculturalImpleInstallerror_ != 0D) {
        output.writeDouble(6, agriculturalImpleInstallerror_);
      }
      if (turnRadius_ != 0D) {
        output.writeDouble(7, turnRadius_);
      }
      if (changeOperationOri_ != false) {
        output.writeBool(8, changeOperationOri_);
      }
      if (reverseFlag_ != false) {
        output.writeBool(9, reverseFlag_);
      }
      if (hangDownDist_ != 0D) {
        output.writeDouble(10, hangDownDist_);
      }
      if (hangUpDist_ != 0D) {
        output.writeDouble(11, hangUpDist_);
      }
      if (ptoOffDist_ != 0D) {
        output.writeDouble(12, ptoOffDist_);
      }
      if (ptoOnDist_ != 0D) {
        output.writeDouble(13, ptoOnDist_);
      }
      if (targetVel_ != 0D) {
        output.writeDouble(14, targetVel_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (routingType_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.RoutingType.ROUTE_TYPE_NULL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, routingType_);
      }
      for (int i = 0; i < pose_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, pose_.get(i));
      }
      if (agriculturalImpleWidth_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, agriculturalImpleWidth_);
      }
      if (lineSpace_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, lineSpace_);
      }
      if (direction_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, direction_);
      }
      if (agriculturalImpleInstallerror_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, agriculturalImpleInstallerror_);
      }
      if (turnRadius_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, turnRadius_);
      }
      if (changeOperationOri_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, changeOperationOri_);
      }
      if (reverseFlag_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, reverseFlag_);
      }
      if (hangDownDist_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, hangDownDist_);
      }
      if (hangUpDist_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, hangUpDist_);
      }
      if (ptoOffDist_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, ptoOffDist_);
      }
      if (ptoOnDist_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, ptoOnDist_);
      }
      if (targetVel_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(14, targetVel_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam) obj;

      if (routingType_ != other.routingType_) return false;
      if (!getPoseList()
          .equals(other.getPoseList())) return false;
      if (java.lang.Double.doubleToLongBits(getAgriculturalImpleWidth())
          != java.lang.Double.doubleToLongBits(
              other.getAgriculturalImpleWidth())) return false;
      if (java.lang.Double.doubleToLongBits(getLineSpace())
          != java.lang.Double.doubleToLongBits(
              other.getLineSpace())) return false;
      if (getDirection()
          != other.getDirection()) return false;
      if (java.lang.Double.doubleToLongBits(getAgriculturalImpleInstallerror())
          != java.lang.Double.doubleToLongBits(
              other.getAgriculturalImpleInstallerror())) return false;
      if (java.lang.Double.doubleToLongBits(getTurnRadius())
          != java.lang.Double.doubleToLongBits(
              other.getTurnRadius())) return false;
      if (getChangeOperationOri()
          != other.getChangeOperationOri()) return false;
      if (getReverseFlag()
          != other.getReverseFlag()) return false;
      if (java.lang.Double.doubleToLongBits(getHangDownDist())
          != java.lang.Double.doubleToLongBits(
              other.getHangDownDist())) return false;
      if (java.lang.Double.doubleToLongBits(getHangUpDist())
          != java.lang.Double.doubleToLongBits(
              other.getHangUpDist())) return false;
      if (java.lang.Double.doubleToLongBits(getPtoOffDist())
          != java.lang.Double.doubleToLongBits(
              other.getPtoOffDist())) return false;
      if (java.lang.Double.doubleToLongBits(getPtoOnDist())
          != java.lang.Double.doubleToLongBits(
              other.getPtoOnDist())) return false;
      if (java.lang.Double.doubleToLongBits(getTargetVel())
          != java.lang.Double.doubleToLongBits(
              other.getTargetVel())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ROUTING_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + routingType_;
      if (getPoseCount() > 0) {
        hash = (37 * hash) + POSE_FIELD_NUMBER;
        hash = (53 * hash) + getPoseList().hashCode();
      }
      hash = (37 * hash) + AGRICULTURAL_IMPLE_WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAgriculturalImpleWidth()));
      hash = (37 * hash) + LINE_SPACE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLineSpace()));
      hash = (37 * hash) + DIRECTION_FIELD_NUMBER;
      hash = (53 * hash) + getDirection();
      hash = (37 * hash) + AGRICULTURAL_IMPLE_INSTALLERROR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAgriculturalImpleInstallerror()));
      hash = (37 * hash) + TURN_RADIUS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTurnRadius()));
      hash = (37 * hash) + CHANGE_OPERATION_ORI_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getChangeOperationOri());
      hash = (37 * hash) + REVERSE_FLAG_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getReverseFlag());
      hash = (37 * hash) + HANG_DOWN_DIST_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getHangDownDist()));
      hash = (37 * hash) + HANG_UP_DIST_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getHangUpDist()));
      hash = (37 * hash) + PTO_OFF_DIST_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPtoOffDist()));
      hash = (37 * hash) + PTO_ON_DIST_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPtoOnDist()));
      hash = (37 * hash) + TARGET_VEL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTargetVel()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_RouteParam_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_RouteParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPoseFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        routingType_ = 0;

        if (poseBuilder_ == null) {
          pose_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          poseBuilder_.clear();
        }
        agriculturalImpleWidth_ = 0D;

        lineSpace_ = 0D;

        direction_ = 0;

        agriculturalImpleInstallerror_ = 0D;

        turnRadius_ = 0D;

        changeOperationOri_ = false;

        reverseFlag_ = false;

        hangDownDist_ = 0D;

        hangUpDist_ = 0D;

        ptoOffDist_ = 0D;

        ptoOnDist_ = 0D;

        targetVel_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_RouteParam_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam(this);
        int from_bitField0_ = bitField0_;
        result.routingType_ = routingType_;
        if (poseBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            pose_ = java.util.Collections.unmodifiableList(pose_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.pose_ = pose_;
        } else {
          result.pose_ = poseBuilder_.build();
        }
        result.agriculturalImpleWidth_ = agriculturalImpleWidth_;
        result.lineSpace_ = lineSpace_;
        result.direction_ = direction_;
        result.agriculturalImpleInstallerror_ = agriculturalImpleInstallerror_;
        result.turnRadius_ = turnRadius_;
        result.changeOperationOri_ = changeOperationOri_;
        result.reverseFlag_ = reverseFlag_;
        result.hangDownDist_ = hangDownDist_;
        result.hangUpDist_ = hangUpDist_;
        result.ptoOffDist_ = ptoOffDist_;
        result.ptoOnDist_ = ptoOnDist_;
        result.targetVel_ = targetVel_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.getDefaultInstance()) return this;
        if (other.routingType_ != 0) {
          setRoutingTypeValue(other.getRoutingTypeValue());
        }
        if (poseBuilder_ == null) {
          if (!other.pose_.isEmpty()) {
            if (pose_.isEmpty()) {
              pose_ = other.pose_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePoseIsMutable();
              pose_.addAll(other.pose_);
            }
            onChanged();
          }
        } else {
          if (!other.pose_.isEmpty()) {
            if (poseBuilder_.isEmpty()) {
              poseBuilder_.dispose();
              poseBuilder_ = null;
              pose_ = other.pose_;
              bitField0_ = (bitField0_ & ~0x00000001);
              poseBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPoseFieldBuilder() : null;
            } else {
              poseBuilder_.addAllMessages(other.pose_);
            }
          }
        }
        if (other.getAgriculturalImpleWidth() != 0D) {
          setAgriculturalImpleWidth(other.getAgriculturalImpleWidth());
        }
        if (other.getLineSpace() != 0D) {
          setLineSpace(other.getLineSpace());
        }
        if (other.getDirection() != 0) {
          setDirection(other.getDirection());
        }
        if (other.getAgriculturalImpleInstallerror() != 0D) {
          setAgriculturalImpleInstallerror(other.getAgriculturalImpleInstallerror());
        }
        if (other.getTurnRadius() != 0D) {
          setTurnRadius(other.getTurnRadius());
        }
        if (other.getChangeOperationOri() != false) {
          setChangeOperationOri(other.getChangeOperationOri());
        }
        if (other.getReverseFlag() != false) {
          setReverseFlag(other.getReverseFlag());
        }
        if (other.getHangDownDist() != 0D) {
          setHangDownDist(other.getHangDownDist());
        }
        if (other.getHangUpDist() != 0D) {
          setHangUpDist(other.getHangUpDist());
        }
        if (other.getPtoOffDist() != 0D) {
          setPtoOffDist(other.getPtoOffDist());
        }
        if (other.getPtoOnDist() != 0D) {
          setPtoOnDist(other.getPtoOnDist());
        }
        if (other.getTargetVel() != 0D) {
          setTargetVel(other.getTargetVel());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int routingType_ = 0;
      /**
       * <pre>
       * 作业模式 
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam.RoutingType routing_type = 1;</code>
       * @return The enum numeric value on the wire for routingType.
       */
      @java.lang.Override public int getRoutingTypeValue() {
        return routingType_;
      }
      /**
       * <pre>
       * 作业模式 
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam.RoutingType routing_type = 1;</code>
       * @param value The enum numeric value on the wire for routingType to set.
       * @return This builder for chaining.
       */
      public Builder setRoutingTypeValue(int value) {
        
        routingType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 作业模式 
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam.RoutingType routing_type = 1;</code>
       * @return The routingType.
       */
      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.RoutingType getRoutingType() {
        @SuppressWarnings("deprecation")
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.RoutingType result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.RoutingType.valueOf(routingType_);
        return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.RoutingType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * 作业模式 
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam.RoutingType routing_type = 1;</code>
       * @param value The routingType to set.
       * @return This builder for chaining.
       */
      public Builder setRoutingType(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.RoutingType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        routingType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 作业模式 
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam.RoutingType routing_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRoutingType() {
        
        routingType_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose> pose_ =
        java.util.Collections.emptyList();
      private void ensurePoseIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          pose_ = new java.util.ArrayList<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose>(pose_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PoseOrBuilder> poseBuilder_;

      /**
       * <pre>
       * 田块打点AB值 
       * </pre>
       *
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose pose = 2;</code>
       */
      public java.util.List<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose> getPoseList() {
        if (poseBuilder_ == null) {
          return java.util.Collections.unmodifiableList(pose_);
        } else {
          return poseBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 田块打点AB值 
       * </pre>
       *
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose pose = 2;</code>
       */
      public int getPoseCount() {
        if (poseBuilder_ == null) {
          return pose_.size();
        } else {
          return poseBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 田块打点AB值 
       * </pre>
       *
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose pose = 2;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose getPose(int index) {
        if (poseBuilder_ == null) {
          return pose_.get(index);
        } else {
          return poseBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 田块打点AB值 
       * </pre>
       *
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose pose = 2;</code>
       */
      public Builder setPose(
          int index, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose value) {
        if (poseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePoseIsMutable();
          pose_.set(index, value);
          onChanged();
        } else {
          poseBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 田块打点AB值 
       * </pre>
       *
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose pose = 2;</code>
       */
      public Builder setPose(
          int index, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.Builder builderForValue) {
        if (poseBuilder_ == null) {
          ensurePoseIsMutable();
          pose_.set(index, builderForValue.build());
          onChanged();
        } else {
          poseBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 田块打点AB值 
       * </pre>
       *
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose pose = 2;</code>
       */
      public Builder addPose(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose value) {
        if (poseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePoseIsMutable();
          pose_.add(value);
          onChanged();
        } else {
          poseBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 田块打点AB值 
       * </pre>
       *
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose pose = 2;</code>
       */
      public Builder addPose(
          int index, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose value) {
        if (poseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePoseIsMutable();
          pose_.add(index, value);
          onChanged();
        } else {
          poseBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 田块打点AB值 
       * </pre>
       *
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose pose = 2;</code>
       */
      public Builder addPose(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.Builder builderForValue) {
        if (poseBuilder_ == null) {
          ensurePoseIsMutable();
          pose_.add(builderForValue.build());
          onChanged();
        } else {
          poseBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 田块打点AB值 
       * </pre>
       *
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose pose = 2;</code>
       */
      public Builder addPose(
          int index, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.Builder builderForValue) {
        if (poseBuilder_ == null) {
          ensurePoseIsMutable();
          pose_.add(index, builderForValue.build());
          onChanged();
        } else {
          poseBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 田块打点AB值 
       * </pre>
       *
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose pose = 2;</code>
       */
      public Builder addAllPose(
          java.lang.Iterable<? extends com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose> values) {
        if (poseBuilder_ == null) {
          ensurePoseIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, pose_);
          onChanged();
        } else {
          poseBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 田块打点AB值 
       * </pre>
       *
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose pose = 2;</code>
       */
      public Builder clearPose() {
        if (poseBuilder_ == null) {
          pose_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          poseBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 田块打点AB值 
       * </pre>
       *
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose pose = 2;</code>
       */
      public Builder removePose(int index) {
        if (poseBuilder_ == null) {
          ensurePoseIsMutable();
          pose_.remove(index);
          onChanged();
        } else {
          poseBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 田块打点AB值 
       * </pre>
       *
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose pose = 2;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.Builder getPoseBuilder(
          int index) {
        return getPoseFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 田块打点AB值 
       * </pre>
       *
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose pose = 2;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PoseOrBuilder getPoseOrBuilder(
          int index) {
        if (poseBuilder_ == null) {
          return pose_.get(index);  } else {
          return poseBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 田块打点AB值 
       * </pre>
       *
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose pose = 2;</code>
       */
      public java.util.List<? extends com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PoseOrBuilder> 
           getPoseOrBuilderList() {
        if (poseBuilder_ != null) {
          return poseBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(pose_);
        }
      }
      /**
       * <pre>
       * 田块打点AB值 
       * </pre>
       *
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose pose = 2;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.Builder addPoseBuilder() {
        return getPoseFieldBuilder().addBuilder(
            com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.getDefaultInstance());
      }
      /**
       * <pre>
       * 田块打点AB值 
       * </pre>
       *
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose pose = 2;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.Builder addPoseBuilder(
          int index) {
        return getPoseFieldBuilder().addBuilder(
            index, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.getDefaultInstance());
      }
      /**
       * <pre>
       * 田块打点AB值 
       * </pre>
       *
       * <code>repeated .com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose pose = 2;</code>
       */
      public java.util.List<com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.Builder> 
           getPoseBuilderList() {
        return getPoseFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PoseOrBuilder> 
          getPoseFieldBuilder() {
        if (poseBuilder_ == null) {
          poseBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PoseOrBuilder>(
                  pose_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          pose_ = null;
        }
        return poseBuilder_;
      }

      private double agriculturalImpleWidth_ ;
      /**
       * <pre>
       * 农机具幅宽
       * </pre>
       *
       * <code>double agricultural_imple_width = 3;</code>
       * @return The agriculturalImpleWidth.
       */
      @java.lang.Override
      public double getAgriculturalImpleWidth() {
        return agriculturalImpleWidth_;
      }
      /**
       * <pre>
       * 农机具幅宽
       * </pre>
       *
       * <code>double agricultural_imple_width = 3;</code>
       * @param value The agriculturalImpleWidth to set.
       * @return This builder for chaining.
       */
      public Builder setAgriculturalImpleWidth(double value) {
        
        agriculturalImpleWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 农机具幅宽
       * </pre>
       *
       * <code>double agricultural_imple_width = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAgriculturalImpleWidth() {
        
        agriculturalImpleWidth_ = 0D;
        onChanged();
        return this;
      }

      private double lineSpace_ ;
      /**
       * <pre>
       * 作业行间距
       * </pre>
       *
       * <code>double line_space = 4;</code>
       * @return The lineSpace.
       */
      @java.lang.Override
      public double getLineSpace() {
        return lineSpace_;
      }
      /**
       * <pre>
       * 作业行间距
       * </pre>
       *
       * <code>double line_space = 4;</code>
       * @param value The lineSpace to set.
       * @return This builder for chaining.
       */
      public Builder setLineSpace(double value) {
        
        lineSpace_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 作业行间距
       * </pre>
       *
       * <code>double line_space = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearLineSpace() {
        
        lineSpace_ = 0D;
        onChanged();
        return this;
      }

      private int direction_ ;
      /**
       * <pre>
       * 农机具安装偏移方向
       * </pre>
       *
       * <code>int32 direction = 5;</code>
       * @return The direction.
       */
      @java.lang.Override
      public int getDirection() {
        return direction_;
      }
      /**
       * <pre>
       * 农机具安装偏移方向
       * </pre>
       *
       * <code>int32 direction = 5;</code>
       * @param value The direction to set.
       * @return This builder for chaining.
       */
      public Builder setDirection(int value) {
        
        direction_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 农机具安装偏移方向
       * </pre>
       *
       * <code>int32 direction = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirection() {
        
        direction_ = 0;
        onChanged();
        return this;
      }

      private double agriculturalImpleInstallerror_ ;
      /**
       * <pre>
       * 农机具安装误差
       * </pre>
       *
       * <code>double agricultural_imple_installerror = 6;</code>
       * @return The agriculturalImpleInstallerror.
       */
      @java.lang.Override
      public double getAgriculturalImpleInstallerror() {
        return agriculturalImpleInstallerror_;
      }
      /**
       * <pre>
       * 农机具安装误差
       * </pre>
       *
       * <code>double agricultural_imple_installerror = 6;</code>
       * @param value The agriculturalImpleInstallerror to set.
       * @return This builder for chaining.
       */
      public Builder setAgriculturalImpleInstallerror(double value) {
        
        agriculturalImpleInstallerror_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 农机具安装误差
       * </pre>
       *
       * <code>double agricultural_imple_installerror = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearAgriculturalImpleInstallerror() {
        
        agriculturalImpleInstallerror_ = 0D;
        onChanged();
        return this;
      }

      private double turnRadius_ ;
      /**
       * <pre>
       * 转弯半径
       * </pre>
       *
       * <code>double turn_radius = 7;</code>
       * @return The turnRadius.
       */
      @java.lang.Override
      public double getTurnRadius() {
        return turnRadius_;
      }
      /**
       * <pre>
       * 转弯半径
       * </pre>
       *
       * <code>double turn_radius = 7;</code>
       * @param value The turnRadius to set.
       * @return This builder for chaining.
       */
      public Builder setTurnRadius(double value) {
        
        turnRadius_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 转弯半径
       * </pre>
       *
       * <code>double turn_radius = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearTurnRadius() {
        
        turnRadius_ = 0D;
        onChanged();
        return this;
      }

      private boolean changeOperationOri_ ;
      /**
       * <pre>
       * 是否更改默认朝向
       * </pre>
       *
       * <code>bool change_operation_ori = 8;</code>
       * @return The changeOperationOri.
       */
      @java.lang.Override
      public boolean getChangeOperationOri() {
        return changeOperationOri_;
      }
      /**
       * <pre>
       * 是否更改默认朝向
       * </pre>
       *
       * <code>bool change_operation_ori = 8;</code>
       * @param value The changeOperationOri to set.
       * @return This builder for chaining.
       */
      public Builder setChangeOperationOri(boolean value) {
        
        changeOperationOri_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 是否更改默认朝向
       * </pre>
       *
       * <code>bool change_operation_ori = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearChangeOperationOri() {
        
        changeOperationOri_ = false;
        onChanged();
        return this;
      }

      private boolean reverseFlag_ ;
      /**
       * <pre>
       *  是否支持倒档 
       * </pre>
       *
       * <code>bool reverse_flag = 9;</code>
       * @return The reverseFlag.
       */
      @java.lang.Override
      public boolean getReverseFlag() {
        return reverseFlag_;
      }
      /**
       * <pre>
       *  是否支持倒档 
       * </pre>
       *
       * <code>bool reverse_flag = 9;</code>
       * @param value The reverseFlag to set.
       * @return This builder for chaining.
       */
      public Builder setReverseFlag(boolean value) {
        
        reverseFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *  是否支持倒档 
       * </pre>
       *
       * <code>bool reverse_flag = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearReverseFlag() {
        
        reverseFlag_ = false;
        onChanged();
        return this;
      }

      private double hangDownDist_ ;
      /**
       * <code>double hang_down_dist = 10;</code>
       * @return The hangDownDist.
       */
      @java.lang.Override
      public double getHangDownDist() {
        return hangDownDist_;
      }
      /**
       * <code>double hang_down_dist = 10;</code>
       * @param value The hangDownDist to set.
       * @return This builder for chaining.
       */
      public Builder setHangDownDist(double value) {
        
        hangDownDist_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double hang_down_dist = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearHangDownDist() {
        
        hangDownDist_ = 0D;
        onChanged();
        return this;
      }

      private double hangUpDist_ ;
      /**
       * <code>double hang_up_dist = 11;</code>
       * @return The hangUpDist.
       */
      @java.lang.Override
      public double getHangUpDist() {
        return hangUpDist_;
      }
      /**
       * <code>double hang_up_dist = 11;</code>
       * @param value The hangUpDist to set.
       * @return This builder for chaining.
       */
      public Builder setHangUpDist(double value) {
        
        hangUpDist_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double hang_up_dist = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearHangUpDist() {
        
        hangUpDist_ = 0D;
        onChanged();
        return this;
      }

      private double ptoOffDist_ ;
      /**
       * <code>double pto_off_dist = 12;</code>
       * @return The ptoOffDist.
       */
      @java.lang.Override
      public double getPtoOffDist() {
        return ptoOffDist_;
      }
      /**
       * <code>double pto_off_dist = 12;</code>
       * @param value The ptoOffDist to set.
       * @return This builder for chaining.
       */
      public Builder setPtoOffDist(double value) {
        
        ptoOffDist_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double pto_off_dist = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearPtoOffDist() {
        
        ptoOffDist_ = 0D;
        onChanged();
        return this;
      }

      private double ptoOnDist_ ;
      /**
       * <code>double pto_on_dist = 13;</code>
       * @return The ptoOnDist.
       */
      @java.lang.Override
      public double getPtoOnDist() {
        return ptoOnDist_;
      }
      /**
       * <code>double pto_on_dist = 13;</code>
       * @param value The ptoOnDist to set.
       * @return This builder for chaining.
       */
      public Builder setPtoOnDist(double value) {
        
        ptoOnDist_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double pto_on_dist = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearPtoOnDist() {
        
        ptoOnDist_ = 0D;
        onChanged();
        return this;
      }

      private double targetVel_ ;
      /**
       * <code>double target_vel = 14;</code>
       * @return The targetVel.
       */
      @java.lang.Override
      public double getTargetVel() {
        return targetVel_;
      }
      /**
       * <code>double target_vel = 14;</code>
       * @param value The targetVel to set.
       * @return This builder for chaining.
       */
      public Builder setTargetVel(double value) {
        
        targetVel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double target_vel = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearTargetVel() {
        
        targetVel_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RouteParam>
        PARSER = new com.google.protobuf.AbstractParser<RouteParam>() {
      @java.lang.Override
      public RouteParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RouteParam(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RouteParam> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RouteParam> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BaseLineTranslationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 基准线平移模式   
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation.TranslationType translation_type = 1;</code>
     * @return The enum numeric value on the wire for translationType.
     */
    int getTranslationTypeValue();
    /**
     * <pre>
     * 基准线平移模式   
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation.TranslationType translation_type = 1;</code>
     * @return The translationType.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.TranslationType getTranslationType();

    /**
     * <pre>
     * 偏移量 基准线平移方向，-代表左  +代表右
     * </pre>
     *
     * <code>double baseline_offset = 2;</code>
     * @return The baselineOffset.
     */
    double getBaselineOffset();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation}
   */
  public static final class BaseLineTranslation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation)
      BaseLineTranslationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BaseLineTranslation.newBuilder() to construct.
    private BaseLineTranslation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BaseLineTranslation() {
      translationType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BaseLineTranslation();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BaseLineTranslation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              translationType_ = rawValue;
              break;
            }
            case 17: {

              baselineOffset_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_BaseLineTranslation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_BaseLineTranslation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.Builder.class);
    }

    /**
     * Protobuf enum {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation.TranslationType}
     */
    public enum TranslationType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * 无效直 routing 不进行任何操作
       * </pre>
       *
       * <code>TRANSLATION_NULL = 0;</code>
       */
      TRANSLATION_NULL(0),
      /**
       * <pre>
       * 自动进行基准线平移，参数无效
       * </pre>
       *
       * <code>TRANSLATION_AUTO = 1;</code>
       */
      TRANSLATION_AUTO(1),
      /**
       * <pre>
       * 手动继续宁基准线平移，参数有效
       * </pre>
       *
       * <code>TRANSLATION_MANUAL = 2;</code>
       */
      TRANSLATION_MANUAL(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * 无效直 routing 不进行任何操作
       * </pre>
       *
       * <code>TRANSLATION_NULL = 0;</code>
       */
      public static final int TRANSLATION_NULL_VALUE = 0;
      /**
       * <pre>
       * 自动进行基准线平移，参数无效
       * </pre>
       *
       * <code>TRANSLATION_AUTO = 1;</code>
       */
      public static final int TRANSLATION_AUTO_VALUE = 1;
      /**
       * <pre>
       * 手动继续宁基准线平移，参数有效
       * </pre>
       *
       * <code>TRANSLATION_MANUAL = 2;</code>
       */
      public static final int TRANSLATION_MANUAL_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TranslationType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static TranslationType forNumber(int value) {
        switch (value) {
          case 0: return TRANSLATION_NULL;
          case 1: return TRANSLATION_AUTO;
          case 2: return TRANSLATION_MANUAL;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TranslationType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          TranslationType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TranslationType>() {
              public TranslationType findValueByNumber(int number) {
                return TranslationType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.getDescriptor().getEnumTypes().get(0);
      }

      private static final TranslationType[] VALUES = values();

      public static TranslationType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private TranslationType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation.TranslationType)
    }

    public static final int TRANSLATION_TYPE_FIELD_NUMBER = 1;
    private int translationType_;
    /**
     * <pre>
     * 基准线平移模式   
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation.TranslationType translation_type = 1;</code>
     * @return The enum numeric value on the wire for translationType.
     */
    @java.lang.Override public int getTranslationTypeValue() {
      return translationType_;
    }
    /**
     * <pre>
     * 基准线平移模式   
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation.TranslationType translation_type = 1;</code>
     * @return The translationType.
     */
    @java.lang.Override public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.TranslationType getTranslationType() {
      @SuppressWarnings("deprecation")
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.TranslationType result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.TranslationType.valueOf(translationType_);
      return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.TranslationType.UNRECOGNIZED : result;
    }

    public static final int BASELINE_OFFSET_FIELD_NUMBER = 2;
    private double baselineOffset_;
    /**
     * <pre>
     * 偏移量 基准线平移方向，-代表左  +代表右
     * </pre>
     *
     * <code>double baseline_offset = 2;</code>
     * @return The baselineOffset.
     */
    @java.lang.Override
    public double getBaselineOffset() {
      return baselineOffset_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (translationType_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.TranslationType.TRANSLATION_NULL.getNumber()) {
        output.writeEnum(1, translationType_);
      }
      if (baselineOffset_ != 0D) {
        output.writeDouble(2, baselineOffset_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (translationType_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.TranslationType.TRANSLATION_NULL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, translationType_);
      }
      if (baselineOffset_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, baselineOffset_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation) obj;

      if (translationType_ != other.translationType_) return false;
      if (java.lang.Double.doubleToLongBits(getBaselineOffset())
          != java.lang.Double.doubleToLongBits(
              other.getBaselineOffset())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TRANSLATION_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + translationType_;
      hash = (37 * hash) + BASELINE_OFFSET_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getBaselineOffset()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_BaseLineTranslation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_BaseLineTranslation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        translationType_ = 0;

        baselineOffset_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_BaseLineTranslation_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation(this);
        result.translationType_ = translationType_;
        result.baselineOffset_ = baselineOffset_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.getDefaultInstance()) return this;
        if (other.translationType_ != 0) {
          setTranslationTypeValue(other.getTranslationTypeValue());
        }
        if (other.getBaselineOffset() != 0D) {
          setBaselineOffset(other.getBaselineOffset());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int translationType_ = 0;
      /**
       * <pre>
       * 基准线平移模式   
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation.TranslationType translation_type = 1;</code>
       * @return The enum numeric value on the wire for translationType.
       */
      @java.lang.Override public int getTranslationTypeValue() {
        return translationType_;
      }
      /**
       * <pre>
       * 基准线平移模式   
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation.TranslationType translation_type = 1;</code>
       * @param value The enum numeric value on the wire for translationType to set.
       * @return This builder for chaining.
       */
      public Builder setTranslationTypeValue(int value) {
        
        translationType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 基准线平移模式   
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation.TranslationType translation_type = 1;</code>
       * @return The translationType.
       */
      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.TranslationType getTranslationType() {
        @SuppressWarnings("deprecation")
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.TranslationType result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.TranslationType.valueOf(translationType_);
        return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.TranslationType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * 基准线平移模式   
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation.TranslationType translation_type = 1;</code>
       * @param value The translationType to set.
       * @return This builder for chaining.
       */
      public Builder setTranslationType(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation.TranslationType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        translationType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 基准线平移模式   
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation.TranslationType translation_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTranslationType() {
        
        translationType_ = 0;
        onChanged();
        return this;
      }

      private double baselineOffset_ ;
      /**
       * <pre>
       * 偏移量 基准线平移方向，-代表左  +代表右
       * </pre>
       *
       * <code>double baseline_offset = 2;</code>
       * @return The baselineOffset.
       */
      @java.lang.Override
      public double getBaselineOffset() {
        return baselineOffset_;
      }
      /**
       * <pre>
       * 偏移量 基准线平移方向，-代表左  +代表右
       * </pre>
       *
       * <code>double baseline_offset = 2;</code>
       * @param value The baselineOffset to set.
       * @return This builder for chaining.
       */
      public Builder setBaselineOffset(double value) {
        
        baselineOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 偏移量 基准线平移方向，-代表左  +代表右
       * </pre>
       *
       * <code>double baseline_offset = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBaselineOffset() {
        
        baselineOffset_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.BaseLineTranslation)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BaseLineTranslation>
        PARSER = new com.google.protobuf.AbstractParser<BaseLineTranslation>() {
      @java.lang.Override
      public BaseLineTranslation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BaseLineTranslation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BaseLineTranslation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BaseLineTranslation> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.BaseLineTranslation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TransferLineOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLine)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 农机具偏移量 -代表左  +代表右
     * </pre>
     *
     * <code>double agricultural_implement_offset = 1;</code>
     * @return The agriculturalImplementOffset.
     */
    double getAgriculturalImplementOffset();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLine}
   */
  public static final class TransferLine extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLine)
      TransferLineOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TransferLine.newBuilder() to construct.
    private TransferLine(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TransferLine() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TransferLine();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TransferLine(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {

              agriculturalImplementOffset_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_TransferLine_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_TransferLine_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine.Builder.class);
    }

    public static final int AGRICULTURAL_IMPLEMENT_OFFSET_FIELD_NUMBER = 1;
    private double agriculturalImplementOffset_;
    /**
     * <pre>
     * 农机具偏移量 -代表左  +代表右
     * </pre>
     *
     * <code>double agricultural_implement_offset = 1;</code>
     * @return The agriculturalImplementOffset.
     */
    @java.lang.Override
    public double getAgriculturalImplementOffset() {
      return agriculturalImplementOffset_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (agriculturalImplementOffset_ != 0D) {
        output.writeDouble(1, agriculturalImplementOffset_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (agriculturalImplementOffset_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, agriculturalImplementOffset_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine) obj;

      if (java.lang.Double.doubleToLongBits(getAgriculturalImplementOffset())
          != java.lang.Double.doubleToLongBits(
              other.getAgriculturalImplementOffset())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AGRICULTURAL_IMPLEMENT_OFFSET_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAgriculturalImplementOffset()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLine}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLine)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLineOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_TransferLine_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_TransferLine_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        agriculturalImplementOffset_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_TransferLine_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine(this);
        result.agriculturalImplementOffset_ = agriculturalImplementOffset_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine.getDefaultInstance()) return this;
        if (other.getAgriculturalImplementOffset() != 0D) {
          setAgriculturalImplementOffset(other.getAgriculturalImplementOffset());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private double agriculturalImplementOffset_ ;
      /**
       * <pre>
       * 农机具偏移量 -代表左  +代表右
       * </pre>
       *
       * <code>double agricultural_implement_offset = 1;</code>
       * @return The agriculturalImplementOffset.
       */
      @java.lang.Override
      public double getAgriculturalImplementOffset() {
        return agriculturalImplementOffset_;
      }
      /**
       * <pre>
       * 农机具偏移量 -代表左  +代表右
       * </pre>
       *
       * <code>double agricultural_implement_offset = 1;</code>
       * @param value The agriculturalImplementOffset to set.
       * @return This builder for chaining.
       */
      public Builder setAgriculturalImplementOffset(double value) {
        
        agriculturalImplementOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 农机具偏移量 -代表左  +代表右
       * </pre>
       *
       * <code>double agricultural_implement_offset = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAgriculturalImplementOffset() {
        
        agriculturalImplementOffset_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLine)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TransferLine)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TransferLine>
        PARSER = new com.google.protobuf.AbstractParser<TransferLine>() {
      @java.lang.Override
      public TransferLine parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TransferLine(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TransferLine> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TransferLine> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TransferLine getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GnssConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.GnssConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string gnss_board = 1;</code>
     * @return The gnssBoard.
     */
    java.lang.String getGnssBoard();
    /**
     * <code>string gnss_board = 1;</code>
     * @return The bytes for gnssBoard.
     */
    com.google.protobuf.ByteString
        getGnssBoardBytes();

    /**
     * <code>string gnss_board_serial = 2;</code>
     * @return The gnssBoardSerial.
     */
    java.lang.String getGnssBoardSerial();
    /**
     * <code>string gnss_board_serial = 2;</code>
     * @return The bytes for gnssBoardSerial.
     */
    com.google.protobuf.ByteString
        getGnssBoardSerialBytes();

    /**
     * <code>string gnss_board_baud_rate = 3;</code>
     * @return The gnssBoardBaudRate.
     */
    java.lang.String getGnssBoardBaudRate();
    /**
     * <code>string gnss_board_baud_rate = 3;</code>
     * @return The bytes for gnssBoardBaudRate.
     */
    com.google.protobuf.ByteString
        getGnssBoardBaudRateBytes();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.GnssConfig}
   */
  public static final class GnssConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.GnssConfig)
      GnssConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GnssConfig.newBuilder() to construct.
    private GnssConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GnssConfig() {
      gnssBoard_ = "";
      gnssBoardSerial_ = "";
      gnssBoardBaudRate_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GnssConfig();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GnssConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              gnssBoard_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              gnssBoardSerial_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              gnssBoardBaudRate_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_GnssConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_GnssConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig.Builder.class);
    }

    public static final int GNSS_BOARD_FIELD_NUMBER = 1;
    private volatile java.lang.Object gnssBoard_;
    /**
     * <code>string gnss_board = 1;</code>
     * @return The gnssBoard.
     */
    @java.lang.Override
    public java.lang.String getGnssBoard() {
      java.lang.Object ref = gnssBoard_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        gnssBoard_ = s;
        return s;
      }
    }
    /**
     * <code>string gnss_board = 1;</code>
     * @return The bytes for gnssBoard.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getGnssBoardBytes() {
      java.lang.Object ref = gnssBoard_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gnssBoard_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GNSS_BOARD_SERIAL_FIELD_NUMBER = 2;
    private volatile java.lang.Object gnssBoardSerial_;
    /**
     * <code>string gnss_board_serial = 2;</code>
     * @return The gnssBoardSerial.
     */
    @java.lang.Override
    public java.lang.String getGnssBoardSerial() {
      java.lang.Object ref = gnssBoardSerial_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        gnssBoardSerial_ = s;
        return s;
      }
    }
    /**
     * <code>string gnss_board_serial = 2;</code>
     * @return The bytes for gnssBoardSerial.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getGnssBoardSerialBytes() {
      java.lang.Object ref = gnssBoardSerial_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gnssBoardSerial_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GNSS_BOARD_BAUD_RATE_FIELD_NUMBER = 3;
    private volatile java.lang.Object gnssBoardBaudRate_;
    /**
     * <code>string gnss_board_baud_rate = 3;</code>
     * @return The gnssBoardBaudRate.
     */
    @java.lang.Override
    public java.lang.String getGnssBoardBaudRate() {
      java.lang.Object ref = gnssBoardBaudRate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        gnssBoardBaudRate_ = s;
        return s;
      }
    }
    /**
     * <code>string gnss_board_baud_rate = 3;</code>
     * @return The bytes for gnssBoardBaudRate.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getGnssBoardBaudRateBytes() {
      java.lang.Object ref = gnssBoardBaudRate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gnssBoardBaudRate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getGnssBoardBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, gnssBoard_);
      }
      if (!getGnssBoardSerialBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, gnssBoardSerial_);
      }
      if (!getGnssBoardBaudRateBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, gnssBoardBaudRate_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getGnssBoardBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, gnssBoard_);
      }
      if (!getGnssBoardSerialBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, gnssBoardSerial_);
      }
      if (!getGnssBoardBaudRateBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, gnssBoardBaudRate_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig) obj;

      if (!getGnssBoard()
          .equals(other.getGnssBoard())) return false;
      if (!getGnssBoardSerial()
          .equals(other.getGnssBoardSerial())) return false;
      if (!getGnssBoardBaudRate()
          .equals(other.getGnssBoardBaudRate())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + GNSS_BOARD_FIELD_NUMBER;
      hash = (53 * hash) + getGnssBoard().hashCode();
      hash = (37 * hash) + GNSS_BOARD_SERIAL_FIELD_NUMBER;
      hash = (53 * hash) + getGnssBoardSerial().hashCode();
      hash = (37 * hash) + GNSS_BOARD_BAUD_RATE_FIELD_NUMBER;
      hash = (53 * hash) + getGnssBoardBaudRate().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.GnssConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.GnssConfig)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_GnssConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_GnssConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        gnssBoard_ = "";

        gnssBoardSerial_ = "";

        gnssBoardBaudRate_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_GnssConfig_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig(this);
        result.gnssBoard_ = gnssBoard_;
        result.gnssBoardSerial_ = gnssBoardSerial_;
        result.gnssBoardBaudRate_ = gnssBoardBaudRate_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig.getDefaultInstance()) return this;
        if (!other.getGnssBoard().isEmpty()) {
          gnssBoard_ = other.gnssBoard_;
          onChanged();
        }
        if (!other.getGnssBoardSerial().isEmpty()) {
          gnssBoardSerial_ = other.gnssBoardSerial_;
          onChanged();
        }
        if (!other.getGnssBoardBaudRate().isEmpty()) {
          gnssBoardBaudRate_ = other.gnssBoardBaudRate_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object gnssBoard_ = "";
      /**
       * <code>string gnss_board = 1;</code>
       * @return The gnssBoard.
       */
      public java.lang.String getGnssBoard() {
        java.lang.Object ref = gnssBoard_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          gnssBoard_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string gnss_board = 1;</code>
       * @return The bytes for gnssBoard.
       */
      public com.google.protobuf.ByteString
          getGnssBoardBytes() {
        java.lang.Object ref = gnssBoard_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gnssBoard_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string gnss_board = 1;</code>
       * @param value The gnssBoard to set.
       * @return This builder for chaining.
       */
      public Builder setGnssBoard(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        gnssBoard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string gnss_board = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearGnssBoard() {
        
        gnssBoard_ = getDefaultInstance().getGnssBoard();
        onChanged();
        return this;
      }
      /**
       * <code>string gnss_board = 1;</code>
       * @param value The bytes for gnssBoard to set.
       * @return This builder for chaining.
       */
      public Builder setGnssBoardBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        gnssBoard_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object gnssBoardSerial_ = "";
      /**
       * <code>string gnss_board_serial = 2;</code>
       * @return The gnssBoardSerial.
       */
      public java.lang.String getGnssBoardSerial() {
        java.lang.Object ref = gnssBoardSerial_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          gnssBoardSerial_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string gnss_board_serial = 2;</code>
       * @return The bytes for gnssBoardSerial.
       */
      public com.google.protobuf.ByteString
          getGnssBoardSerialBytes() {
        java.lang.Object ref = gnssBoardSerial_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gnssBoardSerial_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string gnss_board_serial = 2;</code>
       * @param value The gnssBoardSerial to set.
       * @return This builder for chaining.
       */
      public Builder setGnssBoardSerial(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        gnssBoardSerial_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string gnss_board_serial = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearGnssBoardSerial() {
        
        gnssBoardSerial_ = getDefaultInstance().getGnssBoardSerial();
        onChanged();
        return this;
      }
      /**
       * <code>string gnss_board_serial = 2;</code>
       * @param value The bytes for gnssBoardSerial to set.
       * @return This builder for chaining.
       */
      public Builder setGnssBoardSerialBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        gnssBoardSerial_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object gnssBoardBaudRate_ = "";
      /**
       * <code>string gnss_board_baud_rate = 3;</code>
       * @return The gnssBoardBaudRate.
       */
      public java.lang.String getGnssBoardBaudRate() {
        java.lang.Object ref = gnssBoardBaudRate_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          gnssBoardBaudRate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string gnss_board_baud_rate = 3;</code>
       * @return The bytes for gnssBoardBaudRate.
       */
      public com.google.protobuf.ByteString
          getGnssBoardBaudRateBytes() {
        java.lang.Object ref = gnssBoardBaudRate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gnssBoardBaudRate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string gnss_board_baud_rate = 3;</code>
       * @param value The gnssBoardBaudRate to set.
       * @return This builder for chaining.
       */
      public Builder setGnssBoardBaudRate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        gnssBoardBaudRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string gnss_board_baud_rate = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearGnssBoardBaudRate() {
        
        gnssBoardBaudRate_ = getDefaultInstance().getGnssBoardBaudRate();
        onChanged();
        return this;
      }
      /**
       * <code>string gnss_board_baud_rate = 3;</code>
       * @param value The bytes for gnssBoardBaudRate to set.
       * @return This builder for chaining.
       */
      public Builder setGnssBoardBaudRateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        gnssBoardBaudRate_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.GnssConfig)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.GnssConfig)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GnssConfig>
        PARSER = new com.google.protobuf.AbstractParser<GnssConfig>() {
      @java.lang.Override
      public GnssConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GnssConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GnssConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GnssConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LocalizationConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LocalizationConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 ant_install_type = 1;</code>
     * @return The antInstallType.
     */
    int getAntInstallType();

    /**
     * <code>int32 ant_offset = 2;</code>
     * @return The antOffset.
     */
    int getAntOffset();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LocalizationConfig}
   */
  public static final class LocalizationConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LocalizationConfig)
      LocalizationConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LocalizationConfig.newBuilder() to construct.
    private LocalizationConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LocalizationConfig() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LocalizationConfig();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LocalizationConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              antInstallType_ = input.readInt32();
              break;
            }
            case 16: {

              antOffset_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_LocalizationConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_LocalizationConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig.Builder.class);
    }

    public static final int ANT_INSTALL_TYPE_FIELD_NUMBER = 1;
    private int antInstallType_;
    /**
     * <code>int32 ant_install_type = 1;</code>
     * @return The antInstallType.
     */
    @java.lang.Override
    public int getAntInstallType() {
      return antInstallType_;
    }

    public static final int ANT_OFFSET_FIELD_NUMBER = 2;
    private int antOffset_;
    /**
     * <code>int32 ant_offset = 2;</code>
     * @return The antOffset.
     */
    @java.lang.Override
    public int getAntOffset() {
      return antOffset_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (antInstallType_ != 0) {
        output.writeInt32(1, antInstallType_);
      }
      if (antOffset_ != 0) {
        output.writeInt32(2, antOffset_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (antInstallType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, antInstallType_);
      }
      if (antOffset_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, antOffset_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig) obj;

      if (getAntInstallType()
          != other.getAntInstallType()) return false;
      if (getAntOffset()
          != other.getAntOffset()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ANT_INSTALL_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getAntInstallType();
      hash = (37 * hash) + ANT_OFFSET_FIELD_NUMBER;
      hash = (53 * hash) + getAntOffset();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LocalizationConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LocalizationConfig)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_LocalizationConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_LocalizationConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        antInstallType_ = 0;

        antOffset_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_LocalizationConfig_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig(this);
        result.antInstallType_ = antInstallType_;
        result.antOffset_ = antOffset_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig.getDefaultInstance()) return this;
        if (other.getAntInstallType() != 0) {
          setAntInstallType(other.getAntInstallType());
        }
        if (other.getAntOffset() != 0) {
          setAntOffset(other.getAntOffset());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int antInstallType_ ;
      /**
       * <code>int32 ant_install_type = 1;</code>
       * @return The antInstallType.
       */
      @java.lang.Override
      public int getAntInstallType() {
        return antInstallType_;
      }
      /**
       * <code>int32 ant_install_type = 1;</code>
       * @param value The antInstallType to set.
       * @return This builder for chaining.
       */
      public Builder setAntInstallType(int value) {
        
        antInstallType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 ant_install_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAntInstallType() {
        
        antInstallType_ = 0;
        onChanged();
        return this;
      }

      private int antOffset_ ;
      /**
       * <code>int32 ant_offset = 2;</code>
       * @return The antOffset.
       */
      @java.lang.Override
      public int getAntOffset() {
        return antOffset_;
      }
      /**
       * <code>int32 ant_offset = 2;</code>
       * @param value The antOffset to set.
       * @return This builder for chaining.
       */
      public Builder setAntOffset(int value) {
        
        antOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 ant_offset = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAntOffset() {
        
        antOffset_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LocalizationConfig)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LocalizationConfig)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LocalizationConfig>
        PARSER = new com.google.protobuf.AbstractParser<LocalizationConfig>() {
      @java.lang.Override
      public LocalizationConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LocalizationConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LocalizationConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LocalizationConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ControlConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ControlConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>double lon_kp_t = 1;</code>
     * @return The lonKpT.
     */
    double getLonKpT();

    /**
     * <code>double lon_ki_t = 2;</code>
     * @return The lonKiT.
     */
    double getLonKiT();

    /**
     * <code>double lon_kd_i = 3;</code>
     * @return The lonKdI.
     */
    double getLonKdI();

    /**
     * <code>double forward_len = 4;</code>
     * @return The forwardLen.
     */
    double getForwardLen();

    /**
     * <code>double wheel_base = 5;</code>
     * @return The wheelBase.
     */
    double getWheelBase();

    /**
     * <code>double wheel_distance_front = 6;</code>
     * @return The wheelDistanceFront.
     */
    double getWheelDistanceFront();

    /**
     * <code>double wheel_distance_back = 7;</code>
     * @return The wheelDistanceBack.
     */
    double getWheelDistanceBack();

    /**
     * <code>double min_radius = 8;</code>
     * @return The minRadius.
     */
    double getMinRadius();

    /**
     * <code>double kp = 9;</code>
     * @return The kp.
     */
    double getKp();

    /**
     * <code>double ki = 10;</code>
     * @return The ki.
     */
    double getKi();

    /**
     * <code>double kd = 11;</code>
     * @return The kd.
     */
    double getKd();

    /**
     * <code>double online_distance = 12;</code>
     * @return The onlineDistance.
     */
    double getOnlineDistance();

    /**
     * <code>double online_thrta = 13;</code>
     * @return The onlineThrta.
     */
    double getOnlineThrta();

    /**
     * <code>double kp_online = 14;</code>
     * @return The kpOnline.
     */
    double getKpOnline();

    /**
     * <code>double ki_online = 15;</code>
     * @return The kiOnline.
     */
    double getKiOnline();

    /**
     * <code>double kd_online = 16;</code>
     * @return The kdOnline.
     */
    double getKdOnline();

    /**
     * <code>double forward_len_online = 17;</code>
     * @return The forwardLenOnline.
     */
    double getForwardLenOnline();

    /**
     * <code>double slow_down_rate = 18;</code>
     * @return The slowDownRate.
     */
    double getSlowDownRate();

    /**
     * <code>double saturation = 19;</code>
     * @return The saturation.
     */
    double getSaturation();

    /**
     * <code>double integra_thres_hold = 20;</code>
     * @return The integraThresHold.
     */
    double getIntegraThresHold();

    /**
     * <code>double max_dec = 21;</code>
     * @return The maxDec.
     */
    double getMaxDec();

    /**
     * <code>double start_vel = 22;</code>
     * @return The startVel.
     */
    double getStartVel();

    /**
     * <code>double slowdown_dist = 23;</code>
     * @return The slowdownDist.
     */
    double getSlowdownDist();

    /**
     * <code>double max_acc = 24;</code>
     * @return The maxAcc.
     */
    double getMaxAcc();

    /**
     * <code>double hz = 25;</code>
     * @return The hz.
     */
    double getHz();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ControlConfig}
   */
  public static final class ControlConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ControlConfig)
      ControlConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ControlConfig.newBuilder() to construct.
    private ControlConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ControlConfig() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ControlConfig();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ControlConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {

              lonKpT_ = input.readDouble();
              break;
            }
            case 17: {

              lonKiT_ = input.readDouble();
              break;
            }
            case 25: {

              lonKdI_ = input.readDouble();
              break;
            }
            case 33: {

              forwardLen_ = input.readDouble();
              break;
            }
            case 41: {

              wheelBase_ = input.readDouble();
              break;
            }
            case 49: {

              wheelDistanceFront_ = input.readDouble();
              break;
            }
            case 57: {

              wheelDistanceBack_ = input.readDouble();
              break;
            }
            case 65: {

              minRadius_ = input.readDouble();
              break;
            }
            case 73: {

              kp_ = input.readDouble();
              break;
            }
            case 81: {

              ki_ = input.readDouble();
              break;
            }
            case 89: {

              kd_ = input.readDouble();
              break;
            }
            case 97: {

              onlineDistance_ = input.readDouble();
              break;
            }
            case 105: {

              onlineThrta_ = input.readDouble();
              break;
            }
            case 113: {

              kpOnline_ = input.readDouble();
              break;
            }
            case 121: {

              kiOnline_ = input.readDouble();
              break;
            }
            case 129: {

              kdOnline_ = input.readDouble();
              break;
            }
            case 137: {

              forwardLenOnline_ = input.readDouble();
              break;
            }
            case 145: {

              slowDownRate_ = input.readDouble();
              break;
            }
            case 153: {

              saturation_ = input.readDouble();
              break;
            }
            case 161: {

              integraThresHold_ = input.readDouble();
              break;
            }
            case 169: {

              maxDec_ = input.readDouble();
              break;
            }
            case 177: {

              startVel_ = input.readDouble();
              break;
            }
            case 185: {

              slowdownDist_ = input.readDouble();
              break;
            }
            case 193: {

              maxAcc_ = input.readDouble();
              break;
            }
            case 201: {

              hz_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ControlConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ControlConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig.Builder.class);
    }

    public static final int LON_KP_T_FIELD_NUMBER = 1;
    private double lonKpT_;
    /**
     * <code>double lon_kp_t = 1;</code>
     * @return The lonKpT.
     */
    @java.lang.Override
    public double getLonKpT() {
      return lonKpT_;
    }

    public static final int LON_KI_T_FIELD_NUMBER = 2;
    private double lonKiT_;
    /**
     * <code>double lon_ki_t = 2;</code>
     * @return The lonKiT.
     */
    @java.lang.Override
    public double getLonKiT() {
      return lonKiT_;
    }

    public static final int LON_KD_I_FIELD_NUMBER = 3;
    private double lonKdI_;
    /**
     * <code>double lon_kd_i = 3;</code>
     * @return The lonKdI.
     */
    @java.lang.Override
    public double getLonKdI() {
      return lonKdI_;
    }

    public static final int FORWARD_LEN_FIELD_NUMBER = 4;
    private double forwardLen_;
    /**
     * <code>double forward_len = 4;</code>
     * @return The forwardLen.
     */
    @java.lang.Override
    public double getForwardLen() {
      return forwardLen_;
    }

    public static final int WHEEL_BASE_FIELD_NUMBER = 5;
    private double wheelBase_;
    /**
     * <code>double wheel_base = 5;</code>
     * @return The wheelBase.
     */
    @java.lang.Override
    public double getWheelBase() {
      return wheelBase_;
    }

    public static final int WHEEL_DISTANCE_FRONT_FIELD_NUMBER = 6;
    private double wheelDistanceFront_;
    /**
     * <code>double wheel_distance_front = 6;</code>
     * @return The wheelDistanceFront.
     */
    @java.lang.Override
    public double getWheelDistanceFront() {
      return wheelDistanceFront_;
    }

    public static final int WHEEL_DISTANCE_BACK_FIELD_NUMBER = 7;
    private double wheelDistanceBack_;
    /**
     * <code>double wheel_distance_back = 7;</code>
     * @return The wheelDistanceBack.
     */
    @java.lang.Override
    public double getWheelDistanceBack() {
      return wheelDistanceBack_;
    }

    public static final int MIN_RADIUS_FIELD_NUMBER = 8;
    private double minRadius_;
    /**
     * <code>double min_radius = 8;</code>
     * @return The minRadius.
     */
    @java.lang.Override
    public double getMinRadius() {
      return minRadius_;
    }

    public static final int KP_FIELD_NUMBER = 9;
    private double kp_;
    /**
     * <code>double kp = 9;</code>
     * @return The kp.
     */
    @java.lang.Override
    public double getKp() {
      return kp_;
    }

    public static final int KI_FIELD_NUMBER = 10;
    private double ki_;
    /**
     * <code>double ki = 10;</code>
     * @return The ki.
     */
    @java.lang.Override
    public double getKi() {
      return ki_;
    }

    public static final int KD_FIELD_NUMBER = 11;
    private double kd_;
    /**
     * <code>double kd = 11;</code>
     * @return The kd.
     */
    @java.lang.Override
    public double getKd() {
      return kd_;
    }

    public static final int ONLINE_DISTANCE_FIELD_NUMBER = 12;
    private double onlineDistance_;
    /**
     * <code>double online_distance = 12;</code>
     * @return The onlineDistance.
     */
    @java.lang.Override
    public double getOnlineDistance() {
      return onlineDistance_;
    }

    public static final int ONLINE_THRTA_FIELD_NUMBER = 13;
    private double onlineThrta_;
    /**
     * <code>double online_thrta = 13;</code>
     * @return The onlineThrta.
     */
    @java.lang.Override
    public double getOnlineThrta() {
      return onlineThrta_;
    }

    public static final int KP_ONLINE_FIELD_NUMBER = 14;
    private double kpOnline_;
    /**
     * <code>double kp_online = 14;</code>
     * @return The kpOnline.
     */
    @java.lang.Override
    public double getKpOnline() {
      return kpOnline_;
    }

    public static final int KI_ONLINE_FIELD_NUMBER = 15;
    private double kiOnline_;
    /**
     * <code>double ki_online = 15;</code>
     * @return The kiOnline.
     */
    @java.lang.Override
    public double getKiOnline() {
      return kiOnline_;
    }

    public static final int KD_ONLINE_FIELD_NUMBER = 16;
    private double kdOnline_;
    /**
     * <code>double kd_online = 16;</code>
     * @return The kdOnline.
     */
    @java.lang.Override
    public double getKdOnline() {
      return kdOnline_;
    }

    public static final int FORWARD_LEN_ONLINE_FIELD_NUMBER = 17;
    private double forwardLenOnline_;
    /**
     * <code>double forward_len_online = 17;</code>
     * @return The forwardLenOnline.
     */
    @java.lang.Override
    public double getForwardLenOnline() {
      return forwardLenOnline_;
    }

    public static final int SLOW_DOWN_RATE_FIELD_NUMBER = 18;
    private double slowDownRate_;
    /**
     * <code>double slow_down_rate = 18;</code>
     * @return The slowDownRate.
     */
    @java.lang.Override
    public double getSlowDownRate() {
      return slowDownRate_;
    }

    public static final int SATURATION_FIELD_NUMBER = 19;
    private double saturation_;
    /**
     * <code>double saturation = 19;</code>
     * @return The saturation.
     */
    @java.lang.Override
    public double getSaturation() {
      return saturation_;
    }

    public static final int INTEGRA_THRES_HOLD_FIELD_NUMBER = 20;
    private double integraThresHold_;
    /**
     * <code>double integra_thres_hold = 20;</code>
     * @return The integraThresHold.
     */
    @java.lang.Override
    public double getIntegraThresHold() {
      return integraThresHold_;
    }

    public static final int MAX_DEC_FIELD_NUMBER = 21;
    private double maxDec_;
    /**
     * <code>double max_dec = 21;</code>
     * @return The maxDec.
     */
    @java.lang.Override
    public double getMaxDec() {
      return maxDec_;
    }

    public static final int START_VEL_FIELD_NUMBER = 22;
    private double startVel_;
    /**
     * <code>double start_vel = 22;</code>
     * @return The startVel.
     */
    @java.lang.Override
    public double getStartVel() {
      return startVel_;
    }

    public static final int SLOWDOWN_DIST_FIELD_NUMBER = 23;
    private double slowdownDist_;
    /**
     * <code>double slowdown_dist = 23;</code>
     * @return The slowdownDist.
     */
    @java.lang.Override
    public double getSlowdownDist() {
      return slowdownDist_;
    }

    public static final int MAX_ACC_FIELD_NUMBER = 24;
    private double maxAcc_;
    /**
     * <code>double max_acc = 24;</code>
     * @return The maxAcc.
     */
    @java.lang.Override
    public double getMaxAcc() {
      return maxAcc_;
    }

    public static final int HZ_FIELD_NUMBER = 25;
    private double hz_;
    /**
     * <code>double hz = 25;</code>
     * @return The hz.
     */
    @java.lang.Override
    public double getHz() {
      return hz_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (lonKpT_ != 0D) {
        output.writeDouble(1, lonKpT_);
      }
      if (lonKiT_ != 0D) {
        output.writeDouble(2, lonKiT_);
      }
      if (lonKdI_ != 0D) {
        output.writeDouble(3, lonKdI_);
      }
      if (forwardLen_ != 0D) {
        output.writeDouble(4, forwardLen_);
      }
      if (wheelBase_ != 0D) {
        output.writeDouble(5, wheelBase_);
      }
      if (wheelDistanceFront_ != 0D) {
        output.writeDouble(6, wheelDistanceFront_);
      }
      if (wheelDistanceBack_ != 0D) {
        output.writeDouble(7, wheelDistanceBack_);
      }
      if (minRadius_ != 0D) {
        output.writeDouble(8, minRadius_);
      }
      if (kp_ != 0D) {
        output.writeDouble(9, kp_);
      }
      if (ki_ != 0D) {
        output.writeDouble(10, ki_);
      }
      if (kd_ != 0D) {
        output.writeDouble(11, kd_);
      }
      if (onlineDistance_ != 0D) {
        output.writeDouble(12, onlineDistance_);
      }
      if (onlineThrta_ != 0D) {
        output.writeDouble(13, onlineThrta_);
      }
      if (kpOnline_ != 0D) {
        output.writeDouble(14, kpOnline_);
      }
      if (kiOnline_ != 0D) {
        output.writeDouble(15, kiOnline_);
      }
      if (kdOnline_ != 0D) {
        output.writeDouble(16, kdOnline_);
      }
      if (forwardLenOnline_ != 0D) {
        output.writeDouble(17, forwardLenOnline_);
      }
      if (slowDownRate_ != 0D) {
        output.writeDouble(18, slowDownRate_);
      }
      if (saturation_ != 0D) {
        output.writeDouble(19, saturation_);
      }
      if (integraThresHold_ != 0D) {
        output.writeDouble(20, integraThresHold_);
      }
      if (maxDec_ != 0D) {
        output.writeDouble(21, maxDec_);
      }
      if (startVel_ != 0D) {
        output.writeDouble(22, startVel_);
      }
      if (slowdownDist_ != 0D) {
        output.writeDouble(23, slowdownDist_);
      }
      if (maxAcc_ != 0D) {
        output.writeDouble(24, maxAcc_);
      }
      if (hz_ != 0D) {
        output.writeDouble(25, hz_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (lonKpT_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, lonKpT_);
      }
      if (lonKiT_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, lonKiT_);
      }
      if (lonKdI_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, lonKdI_);
      }
      if (forwardLen_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, forwardLen_);
      }
      if (wheelBase_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, wheelBase_);
      }
      if (wheelDistanceFront_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, wheelDistanceFront_);
      }
      if (wheelDistanceBack_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, wheelDistanceBack_);
      }
      if (minRadius_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, minRadius_);
      }
      if (kp_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, kp_);
      }
      if (ki_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, ki_);
      }
      if (kd_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, kd_);
      }
      if (onlineDistance_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, onlineDistance_);
      }
      if (onlineThrta_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, onlineThrta_);
      }
      if (kpOnline_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(14, kpOnline_);
      }
      if (kiOnline_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(15, kiOnline_);
      }
      if (kdOnline_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(16, kdOnline_);
      }
      if (forwardLenOnline_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(17, forwardLenOnline_);
      }
      if (slowDownRate_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(18, slowDownRate_);
      }
      if (saturation_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(19, saturation_);
      }
      if (integraThresHold_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(20, integraThresHold_);
      }
      if (maxDec_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(21, maxDec_);
      }
      if (startVel_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(22, startVel_);
      }
      if (slowdownDist_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(23, slowdownDist_);
      }
      if (maxAcc_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(24, maxAcc_);
      }
      if (hz_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(25, hz_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig) obj;

      if (java.lang.Double.doubleToLongBits(getLonKpT())
          != java.lang.Double.doubleToLongBits(
              other.getLonKpT())) return false;
      if (java.lang.Double.doubleToLongBits(getLonKiT())
          != java.lang.Double.doubleToLongBits(
              other.getLonKiT())) return false;
      if (java.lang.Double.doubleToLongBits(getLonKdI())
          != java.lang.Double.doubleToLongBits(
              other.getLonKdI())) return false;
      if (java.lang.Double.doubleToLongBits(getForwardLen())
          != java.lang.Double.doubleToLongBits(
              other.getForwardLen())) return false;
      if (java.lang.Double.doubleToLongBits(getWheelBase())
          != java.lang.Double.doubleToLongBits(
              other.getWheelBase())) return false;
      if (java.lang.Double.doubleToLongBits(getWheelDistanceFront())
          != java.lang.Double.doubleToLongBits(
              other.getWheelDistanceFront())) return false;
      if (java.lang.Double.doubleToLongBits(getWheelDistanceBack())
          != java.lang.Double.doubleToLongBits(
              other.getWheelDistanceBack())) return false;
      if (java.lang.Double.doubleToLongBits(getMinRadius())
          != java.lang.Double.doubleToLongBits(
              other.getMinRadius())) return false;
      if (java.lang.Double.doubleToLongBits(getKp())
          != java.lang.Double.doubleToLongBits(
              other.getKp())) return false;
      if (java.lang.Double.doubleToLongBits(getKi())
          != java.lang.Double.doubleToLongBits(
              other.getKi())) return false;
      if (java.lang.Double.doubleToLongBits(getKd())
          != java.lang.Double.doubleToLongBits(
              other.getKd())) return false;
      if (java.lang.Double.doubleToLongBits(getOnlineDistance())
          != java.lang.Double.doubleToLongBits(
              other.getOnlineDistance())) return false;
      if (java.lang.Double.doubleToLongBits(getOnlineThrta())
          != java.lang.Double.doubleToLongBits(
              other.getOnlineThrta())) return false;
      if (java.lang.Double.doubleToLongBits(getKpOnline())
          != java.lang.Double.doubleToLongBits(
              other.getKpOnline())) return false;
      if (java.lang.Double.doubleToLongBits(getKiOnline())
          != java.lang.Double.doubleToLongBits(
              other.getKiOnline())) return false;
      if (java.lang.Double.doubleToLongBits(getKdOnline())
          != java.lang.Double.doubleToLongBits(
              other.getKdOnline())) return false;
      if (java.lang.Double.doubleToLongBits(getForwardLenOnline())
          != java.lang.Double.doubleToLongBits(
              other.getForwardLenOnline())) return false;
      if (java.lang.Double.doubleToLongBits(getSlowDownRate())
          != java.lang.Double.doubleToLongBits(
              other.getSlowDownRate())) return false;
      if (java.lang.Double.doubleToLongBits(getSaturation())
          != java.lang.Double.doubleToLongBits(
              other.getSaturation())) return false;
      if (java.lang.Double.doubleToLongBits(getIntegraThresHold())
          != java.lang.Double.doubleToLongBits(
              other.getIntegraThresHold())) return false;
      if (java.lang.Double.doubleToLongBits(getMaxDec())
          != java.lang.Double.doubleToLongBits(
              other.getMaxDec())) return false;
      if (java.lang.Double.doubleToLongBits(getStartVel())
          != java.lang.Double.doubleToLongBits(
              other.getStartVel())) return false;
      if (java.lang.Double.doubleToLongBits(getSlowdownDist())
          != java.lang.Double.doubleToLongBits(
              other.getSlowdownDist())) return false;
      if (java.lang.Double.doubleToLongBits(getMaxAcc())
          != java.lang.Double.doubleToLongBits(
              other.getMaxAcc())) return false;
      if (java.lang.Double.doubleToLongBits(getHz())
          != java.lang.Double.doubleToLongBits(
              other.getHz())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LON_KP_T_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLonKpT()));
      hash = (37 * hash) + LON_KI_T_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLonKiT()));
      hash = (37 * hash) + LON_KD_I_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLonKdI()));
      hash = (37 * hash) + FORWARD_LEN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getForwardLen()));
      hash = (37 * hash) + WHEEL_BASE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getWheelBase()));
      hash = (37 * hash) + WHEEL_DISTANCE_FRONT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getWheelDistanceFront()));
      hash = (37 * hash) + WHEEL_DISTANCE_BACK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getWheelDistanceBack()));
      hash = (37 * hash) + MIN_RADIUS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMinRadius()));
      hash = (37 * hash) + KP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getKp()));
      hash = (37 * hash) + KI_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getKi()));
      hash = (37 * hash) + KD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getKd()));
      hash = (37 * hash) + ONLINE_DISTANCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getOnlineDistance()));
      hash = (37 * hash) + ONLINE_THRTA_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getOnlineThrta()));
      hash = (37 * hash) + KP_ONLINE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getKpOnline()));
      hash = (37 * hash) + KI_ONLINE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getKiOnline()));
      hash = (37 * hash) + KD_ONLINE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getKdOnline()));
      hash = (37 * hash) + FORWARD_LEN_ONLINE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getForwardLenOnline()));
      hash = (37 * hash) + SLOW_DOWN_RATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSlowDownRate()));
      hash = (37 * hash) + SATURATION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSaturation()));
      hash = (37 * hash) + INTEGRA_THRES_HOLD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getIntegraThresHold()));
      hash = (37 * hash) + MAX_DEC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMaxDec()));
      hash = (37 * hash) + START_VEL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getStartVel()));
      hash = (37 * hash) + SLOWDOWN_DIST_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSlowdownDist()));
      hash = (37 * hash) + MAX_ACC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMaxAcc()));
      hash = (37 * hash) + HZ_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getHz()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ControlConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ControlConfig)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ControlConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ControlConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        lonKpT_ = 0D;

        lonKiT_ = 0D;

        lonKdI_ = 0D;

        forwardLen_ = 0D;

        wheelBase_ = 0D;

        wheelDistanceFront_ = 0D;

        wheelDistanceBack_ = 0D;

        minRadius_ = 0D;

        kp_ = 0D;

        ki_ = 0D;

        kd_ = 0D;

        onlineDistance_ = 0D;

        onlineThrta_ = 0D;

        kpOnline_ = 0D;

        kiOnline_ = 0D;

        kdOnline_ = 0D;

        forwardLenOnline_ = 0D;

        slowDownRate_ = 0D;

        saturation_ = 0D;

        integraThresHold_ = 0D;

        maxDec_ = 0D;

        startVel_ = 0D;

        slowdownDist_ = 0D;

        maxAcc_ = 0D;

        hz_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ControlConfig_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig(this);
        result.lonKpT_ = lonKpT_;
        result.lonKiT_ = lonKiT_;
        result.lonKdI_ = lonKdI_;
        result.forwardLen_ = forwardLen_;
        result.wheelBase_ = wheelBase_;
        result.wheelDistanceFront_ = wheelDistanceFront_;
        result.wheelDistanceBack_ = wheelDistanceBack_;
        result.minRadius_ = minRadius_;
        result.kp_ = kp_;
        result.ki_ = ki_;
        result.kd_ = kd_;
        result.onlineDistance_ = onlineDistance_;
        result.onlineThrta_ = onlineThrta_;
        result.kpOnline_ = kpOnline_;
        result.kiOnline_ = kiOnline_;
        result.kdOnline_ = kdOnline_;
        result.forwardLenOnline_ = forwardLenOnline_;
        result.slowDownRate_ = slowDownRate_;
        result.saturation_ = saturation_;
        result.integraThresHold_ = integraThresHold_;
        result.maxDec_ = maxDec_;
        result.startVel_ = startVel_;
        result.slowdownDist_ = slowdownDist_;
        result.maxAcc_ = maxAcc_;
        result.hz_ = hz_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig.getDefaultInstance()) return this;
        if (other.getLonKpT() != 0D) {
          setLonKpT(other.getLonKpT());
        }
        if (other.getLonKiT() != 0D) {
          setLonKiT(other.getLonKiT());
        }
        if (other.getLonKdI() != 0D) {
          setLonKdI(other.getLonKdI());
        }
        if (other.getForwardLen() != 0D) {
          setForwardLen(other.getForwardLen());
        }
        if (other.getWheelBase() != 0D) {
          setWheelBase(other.getWheelBase());
        }
        if (other.getWheelDistanceFront() != 0D) {
          setWheelDistanceFront(other.getWheelDistanceFront());
        }
        if (other.getWheelDistanceBack() != 0D) {
          setWheelDistanceBack(other.getWheelDistanceBack());
        }
        if (other.getMinRadius() != 0D) {
          setMinRadius(other.getMinRadius());
        }
        if (other.getKp() != 0D) {
          setKp(other.getKp());
        }
        if (other.getKi() != 0D) {
          setKi(other.getKi());
        }
        if (other.getKd() != 0D) {
          setKd(other.getKd());
        }
        if (other.getOnlineDistance() != 0D) {
          setOnlineDistance(other.getOnlineDistance());
        }
        if (other.getOnlineThrta() != 0D) {
          setOnlineThrta(other.getOnlineThrta());
        }
        if (other.getKpOnline() != 0D) {
          setKpOnline(other.getKpOnline());
        }
        if (other.getKiOnline() != 0D) {
          setKiOnline(other.getKiOnline());
        }
        if (other.getKdOnline() != 0D) {
          setKdOnline(other.getKdOnline());
        }
        if (other.getForwardLenOnline() != 0D) {
          setForwardLenOnline(other.getForwardLenOnline());
        }
        if (other.getSlowDownRate() != 0D) {
          setSlowDownRate(other.getSlowDownRate());
        }
        if (other.getSaturation() != 0D) {
          setSaturation(other.getSaturation());
        }
        if (other.getIntegraThresHold() != 0D) {
          setIntegraThresHold(other.getIntegraThresHold());
        }
        if (other.getMaxDec() != 0D) {
          setMaxDec(other.getMaxDec());
        }
        if (other.getStartVel() != 0D) {
          setStartVel(other.getStartVel());
        }
        if (other.getSlowdownDist() != 0D) {
          setSlowdownDist(other.getSlowdownDist());
        }
        if (other.getMaxAcc() != 0D) {
          setMaxAcc(other.getMaxAcc());
        }
        if (other.getHz() != 0D) {
          setHz(other.getHz());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private double lonKpT_ ;
      /**
       * <code>double lon_kp_t = 1;</code>
       * @return The lonKpT.
       */
      @java.lang.Override
      public double getLonKpT() {
        return lonKpT_;
      }
      /**
       * <code>double lon_kp_t = 1;</code>
       * @param value The lonKpT to set.
       * @return This builder for chaining.
       */
      public Builder setLonKpT(double value) {
        
        lonKpT_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double lon_kp_t = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLonKpT() {
        
        lonKpT_ = 0D;
        onChanged();
        return this;
      }

      private double lonKiT_ ;
      /**
       * <code>double lon_ki_t = 2;</code>
       * @return The lonKiT.
       */
      @java.lang.Override
      public double getLonKiT() {
        return lonKiT_;
      }
      /**
       * <code>double lon_ki_t = 2;</code>
       * @param value The lonKiT to set.
       * @return This builder for chaining.
       */
      public Builder setLonKiT(double value) {
        
        lonKiT_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double lon_ki_t = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLonKiT() {
        
        lonKiT_ = 0D;
        onChanged();
        return this;
      }

      private double lonKdI_ ;
      /**
       * <code>double lon_kd_i = 3;</code>
       * @return The lonKdI.
       */
      @java.lang.Override
      public double getLonKdI() {
        return lonKdI_;
      }
      /**
       * <code>double lon_kd_i = 3;</code>
       * @param value The lonKdI to set.
       * @return This builder for chaining.
       */
      public Builder setLonKdI(double value) {
        
        lonKdI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double lon_kd_i = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLonKdI() {
        
        lonKdI_ = 0D;
        onChanged();
        return this;
      }

      private double forwardLen_ ;
      /**
       * <code>double forward_len = 4;</code>
       * @return The forwardLen.
       */
      @java.lang.Override
      public double getForwardLen() {
        return forwardLen_;
      }
      /**
       * <code>double forward_len = 4;</code>
       * @param value The forwardLen to set.
       * @return This builder for chaining.
       */
      public Builder setForwardLen(double value) {
        
        forwardLen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double forward_len = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearForwardLen() {
        
        forwardLen_ = 0D;
        onChanged();
        return this;
      }

      private double wheelBase_ ;
      /**
       * <code>double wheel_base = 5;</code>
       * @return The wheelBase.
       */
      @java.lang.Override
      public double getWheelBase() {
        return wheelBase_;
      }
      /**
       * <code>double wheel_base = 5;</code>
       * @param value The wheelBase to set.
       * @return This builder for chaining.
       */
      public Builder setWheelBase(double value) {
        
        wheelBase_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double wheel_base = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearWheelBase() {
        
        wheelBase_ = 0D;
        onChanged();
        return this;
      }

      private double wheelDistanceFront_ ;
      /**
       * <code>double wheel_distance_front = 6;</code>
       * @return The wheelDistanceFront.
       */
      @java.lang.Override
      public double getWheelDistanceFront() {
        return wheelDistanceFront_;
      }
      /**
       * <code>double wheel_distance_front = 6;</code>
       * @param value The wheelDistanceFront to set.
       * @return This builder for chaining.
       */
      public Builder setWheelDistanceFront(double value) {
        
        wheelDistanceFront_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double wheel_distance_front = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearWheelDistanceFront() {
        
        wheelDistanceFront_ = 0D;
        onChanged();
        return this;
      }

      private double wheelDistanceBack_ ;
      /**
       * <code>double wheel_distance_back = 7;</code>
       * @return The wheelDistanceBack.
       */
      @java.lang.Override
      public double getWheelDistanceBack() {
        return wheelDistanceBack_;
      }
      /**
       * <code>double wheel_distance_back = 7;</code>
       * @param value The wheelDistanceBack to set.
       * @return This builder for chaining.
       */
      public Builder setWheelDistanceBack(double value) {
        
        wheelDistanceBack_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double wheel_distance_back = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearWheelDistanceBack() {
        
        wheelDistanceBack_ = 0D;
        onChanged();
        return this;
      }

      private double minRadius_ ;
      /**
       * <code>double min_radius = 8;</code>
       * @return The minRadius.
       */
      @java.lang.Override
      public double getMinRadius() {
        return minRadius_;
      }
      /**
       * <code>double min_radius = 8;</code>
       * @param value The minRadius to set.
       * @return This builder for chaining.
       */
      public Builder setMinRadius(double value) {
        
        minRadius_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double min_radius = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinRadius() {
        
        minRadius_ = 0D;
        onChanged();
        return this;
      }

      private double kp_ ;
      /**
       * <code>double kp = 9;</code>
       * @return The kp.
       */
      @java.lang.Override
      public double getKp() {
        return kp_;
      }
      /**
       * <code>double kp = 9;</code>
       * @param value The kp to set.
       * @return This builder for chaining.
       */
      public Builder setKp(double value) {
        
        kp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double kp = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearKp() {
        
        kp_ = 0D;
        onChanged();
        return this;
      }

      private double ki_ ;
      /**
       * <code>double ki = 10;</code>
       * @return The ki.
       */
      @java.lang.Override
      public double getKi() {
        return ki_;
      }
      /**
       * <code>double ki = 10;</code>
       * @param value The ki to set.
       * @return This builder for chaining.
       */
      public Builder setKi(double value) {
        
        ki_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double ki = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearKi() {
        
        ki_ = 0D;
        onChanged();
        return this;
      }

      private double kd_ ;
      /**
       * <code>double kd = 11;</code>
       * @return The kd.
       */
      @java.lang.Override
      public double getKd() {
        return kd_;
      }
      /**
       * <code>double kd = 11;</code>
       * @param value The kd to set.
       * @return This builder for chaining.
       */
      public Builder setKd(double value) {
        
        kd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double kd = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearKd() {
        
        kd_ = 0D;
        onChanged();
        return this;
      }

      private double onlineDistance_ ;
      /**
       * <code>double online_distance = 12;</code>
       * @return The onlineDistance.
       */
      @java.lang.Override
      public double getOnlineDistance() {
        return onlineDistance_;
      }
      /**
       * <code>double online_distance = 12;</code>
       * @param value The onlineDistance to set.
       * @return This builder for chaining.
       */
      public Builder setOnlineDistance(double value) {
        
        onlineDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double online_distance = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearOnlineDistance() {
        
        onlineDistance_ = 0D;
        onChanged();
        return this;
      }

      private double onlineThrta_ ;
      /**
       * <code>double online_thrta = 13;</code>
       * @return The onlineThrta.
       */
      @java.lang.Override
      public double getOnlineThrta() {
        return onlineThrta_;
      }
      /**
       * <code>double online_thrta = 13;</code>
       * @param value The onlineThrta to set.
       * @return This builder for chaining.
       */
      public Builder setOnlineThrta(double value) {
        
        onlineThrta_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double online_thrta = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearOnlineThrta() {
        
        onlineThrta_ = 0D;
        onChanged();
        return this;
      }

      private double kpOnline_ ;
      /**
       * <code>double kp_online = 14;</code>
       * @return The kpOnline.
       */
      @java.lang.Override
      public double getKpOnline() {
        return kpOnline_;
      }
      /**
       * <code>double kp_online = 14;</code>
       * @param value The kpOnline to set.
       * @return This builder for chaining.
       */
      public Builder setKpOnline(double value) {
        
        kpOnline_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double kp_online = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearKpOnline() {
        
        kpOnline_ = 0D;
        onChanged();
        return this;
      }

      private double kiOnline_ ;
      /**
       * <code>double ki_online = 15;</code>
       * @return The kiOnline.
       */
      @java.lang.Override
      public double getKiOnline() {
        return kiOnline_;
      }
      /**
       * <code>double ki_online = 15;</code>
       * @param value The kiOnline to set.
       * @return This builder for chaining.
       */
      public Builder setKiOnline(double value) {
        
        kiOnline_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double ki_online = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearKiOnline() {
        
        kiOnline_ = 0D;
        onChanged();
        return this;
      }

      private double kdOnline_ ;
      /**
       * <code>double kd_online = 16;</code>
       * @return The kdOnline.
       */
      @java.lang.Override
      public double getKdOnline() {
        return kdOnline_;
      }
      /**
       * <code>double kd_online = 16;</code>
       * @param value The kdOnline to set.
       * @return This builder for chaining.
       */
      public Builder setKdOnline(double value) {
        
        kdOnline_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double kd_online = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearKdOnline() {
        
        kdOnline_ = 0D;
        onChanged();
        return this;
      }

      private double forwardLenOnline_ ;
      /**
       * <code>double forward_len_online = 17;</code>
       * @return The forwardLenOnline.
       */
      @java.lang.Override
      public double getForwardLenOnline() {
        return forwardLenOnline_;
      }
      /**
       * <code>double forward_len_online = 17;</code>
       * @param value The forwardLenOnline to set.
       * @return This builder for chaining.
       */
      public Builder setForwardLenOnline(double value) {
        
        forwardLenOnline_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double forward_len_online = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearForwardLenOnline() {
        
        forwardLenOnline_ = 0D;
        onChanged();
        return this;
      }

      private double slowDownRate_ ;
      /**
       * <code>double slow_down_rate = 18;</code>
       * @return The slowDownRate.
       */
      @java.lang.Override
      public double getSlowDownRate() {
        return slowDownRate_;
      }
      /**
       * <code>double slow_down_rate = 18;</code>
       * @param value The slowDownRate to set.
       * @return This builder for chaining.
       */
      public Builder setSlowDownRate(double value) {
        
        slowDownRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double slow_down_rate = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearSlowDownRate() {
        
        slowDownRate_ = 0D;
        onChanged();
        return this;
      }

      private double saturation_ ;
      /**
       * <code>double saturation = 19;</code>
       * @return The saturation.
       */
      @java.lang.Override
      public double getSaturation() {
        return saturation_;
      }
      /**
       * <code>double saturation = 19;</code>
       * @param value The saturation to set.
       * @return This builder for chaining.
       */
      public Builder setSaturation(double value) {
        
        saturation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double saturation = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearSaturation() {
        
        saturation_ = 0D;
        onChanged();
        return this;
      }

      private double integraThresHold_ ;
      /**
       * <code>double integra_thres_hold = 20;</code>
       * @return The integraThresHold.
       */
      @java.lang.Override
      public double getIntegraThresHold() {
        return integraThresHold_;
      }
      /**
       * <code>double integra_thres_hold = 20;</code>
       * @param value The integraThresHold to set.
       * @return This builder for chaining.
       */
      public Builder setIntegraThresHold(double value) {
        
        integraThresHold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double integra_thres_hold = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearIntegraThresHold() {
        
        integraThresHold_ = 0D;
        onChanged();
        return this;
      }

      private double maxDec_ ;
      /**
       * <code>double max_dec = 21;</code>
       * @return The maxDec.
       */
      @java.lang.Override
      public double getMaxDec() {
        return maxDec_;
      }
      /**
       * <code>double max_dec = 21;</code>
       * @param value The maxDec to set.
       * @return This builder for chaining.
       */
      public Builder setMaxDec(double value) {
        
        maxDec_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double max_dec = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxDec() {
        
        maxDec_ = 0D;
        onChanged();
        return this;
      }

      private double startVel_ ;
      /**
       * <code>double start_vel = 22;</code>
       * @return The startVel.
       */
      @java.lang.Override
      public double getStartVel() {
        return startVel_;
      }
      /**
       * <code>double start_vel = 22;</code>
       * @param value The startVel to set.
       * @return This builder for chaining.
       */
      public Builder setStartVel(double value) {
        
        startVel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double start_vel = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartVel() {
        
        startVel_ = 0D;
        onChanged();
        return this;
      }

      private double slowdownDist_ ;
      /**
       * <code>double slowdown_dist = 23;</code>
       * @return The slowdownDist.
       */
      @java.lang.Override
      public double getSlowdownDist() {
        return slowdownDist_;
      }
      /**
       * <code>double slowdown_dist = 23;</code>
       * @param value The slowdownDist to set.
       * @return This builder for chaining.
       */
      public Builder setSlowdownDist(double value) {
        
        slowdownDist_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double slowdown_dist = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearSlowdownDist() {
        
        slowdownDist_ = 0D;
        onChanged();
        return this;
      }

      private double maxAcc_ ;
      /**
       * <code>double max_acc = 24;</code>
       * @return The maxAcc.
       */
      @java.lang.Override
      public double getMaxAcc() {
        return maxAcc_;
      }
      /**
       * <code>double max_acc = 24;</code>
       * @param value The maxAcc to set.
       * @return This builder for chaining.
       */
      public Builder setMaxAcc(double value) {
        
        maxAcc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double max_acc = 24;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxAcc() {
        
        maxAcc_ = 0D;
        onChanged();
        return this;
      }

      private double hz_ ;
      /**
       * <code>double hz = 25;</code>
       * @return The hz.
       */
      @java.lang.Override
      public double getHz() {
        return hz_;
      }
      /**
       * <code>double hz = 25;</code>
       * @param value The hz to set.
       * @return This builder for chaining.
       */
      public Builder setHz(double value) {
        
        hz_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double hz = 25;</code>
       * @return This builder for chaining.
       */
      public Builder clearHz() {
        
        hz_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ControlConfig)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ControlConfig)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ControlConfig>
        PARSER = new com.google.protobuf.AbstractParser<ControlConfig>() {
      @java.lang.Override
      public ControlConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ControlConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ControlConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ControlConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ChassisConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ChassisConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>double wheel_base = 1;</code>
     * @return The wheelBase.
     */
    double getWheelBase();

    /**
     * <code>double wheel_distance_front = 2;</code>
     * @return The wheelDistanceFront.
     */
    double getWheelDistanceFront();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ChassisConfig}
   */
  public static final class ChassisConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ChassisConfig)
      ChassisConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChassisConfig.newBuilder() to construct.
    private ChassisConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChassisConfig() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ChassisConfig();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChassisConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {

              wheelBase_ = input.readDouble();
              break;
            }
            case 17: {

              wheelDistanceFront_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ChassisConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ChassisConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig.Builder.class);
    }

    public static final int WHEEL_BASE_FIELD_NUMBER = 1;
    private double wheelBase_;
    /**
     * <code>double wheel_base = 1;</code>
     * @return The wheelBase.
     */
    @java.lang.Override
    public double getWheelBase() {
      return wheelBase_;
    }

    public static final int WHEEL_DISTANCE_FRONT_FIELD_NUMBER = 2;
    private double wheelDistanceFront_;
    /**
     * <code>double wheel_distance_front = 2;</code>
     * @return The wheelDistanceFront.
     */
    @java.lang.Override
    public double getWheelDistanceFront() {
      return wheelDistanceFront_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (wheelBase_ != 0D) {
        output.writeDouble(1, wheelBase_);
      }
      if (wheelDistanceFront_ != 0D) {
        output.writeDouble(2, wheelDistanceFront_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (wheelBase_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, wheelBase_);
      }
      if (wheelDistanceFront_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, wheelDistanceFront_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig) obj;

      if (java.lang.Double.doubleToLongBits(getWheelBase())
          != java.lang.Double.doubleToLongBits(
              other.getWheelBase())) return false;
      if (java.lang.Double.doubleToLongBits(getWheelDistanceFront())
          != java.lang.Double.doubleToLongBits(
              other.getWheelDistanceFront())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + WHEEL_BASE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getWheelBase()));
      hash = (37 * hash) + WHEEL_DISTANCE_FRONT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getWheelDistanceFront()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ChassisConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ChassisConfig)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ChassisConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ChassisConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        wheelBase_ = 0D;

        wheelDistanceFront_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ChassisConfig_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig(this);
        result.wheelBase_ = wheelBase_;
        result.wheelDistanceFront_ = wheelDistanceFront_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig.getDefaultInstance()) return this;
        if (other.getWheelBase() != 0D) {
          setWheelBase(other.getWheelBase());
        }
        if (other.getWheelDistanceFront() != 0D) {
          setWheelDistanceFront(other.getWheelDistanceFront());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private double wheelBase_ ;
      /**
       * <code>double wheel_base = 1;</code>
       * @return The wheelBase.
       */
      @java.lang.Override
      public double getWheelBase() {
        return wheelBase_;
      }
      /**
       * <code>double wheel_base = 1;</code>
       * @param value The wheelBase to set.
       * @return This builder for chaining.
       */
      public Builder setWheelBase(double value) {
        
        wheelBase_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double wheel_base = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearWheelBase() {
        
        wheelBase_ = 0D;
        onChanged();
        return this;
      }

      private double wheelDistanceFront_ ;
      /**
       * <code>double wheel_distance_front = 2;</code>
       * @return The wheelDistanceFront.
       */
      @java.lang.Override
      public double getWheelDistanceFront() {
        return wheelDistanceFront_;
      }
      /**
       * <code>double wheel_distance_front = 2;</code>
       * @param value The wheelDistanceFront to set.
       * @return This builder for chaining.
       */
      public Builder setWheelDistanceFront(double value) {
        
        wheelDistanceFront_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double wheel_distance_front = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearWheelDistanceFront() {
        
        wheelDistanceFront_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ChassisConfig)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ChassisConfig)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ChassisConfig>
        PARSER = new com.google.protobuf.AbstractParser<ChassisConfig>() {
      @java.lang.Override
      public ChassisConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChassisConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChassisConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChassisConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PlanningConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PlanningConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string dev_to_cloud_topic = 1;</code>
     * @return The devToCloudTopic.
     */
    java.lang.String getDevToCloudTopic();
    /**
     * <code>string dev_to_cloud_topic = 1;</code>
     * @return The bytes for devToCloudTopic.
     */
    com.google.protobuf.ByteString
        getDevToCloudTopicBytes();

    /**
     * <code>string cloud_to_dev_topic = 2;</code>
     * @return The cloudToDevTopic.
     */
    java.lang.String getCloudToDevTopic();
    /**
     * <code>string cloud_to_dev_topic = 2;</code>
     * @return The bytes for cloudToDevTopic.
     */
    com.google.protobuf.ByteString
        getCloudToDevTopicBytes();

    /**
     * <pre>
     *设备ID
     * </pre>
     *
     * <code>string dev_ID = 3;</code>
     * @return The devID.
     */
    java.lang.String getDevID();
    /**
     * <pre>
     *设备ID
     * </pre>
     *
     * <code>string dev_ID = 3;</code>
     * @return The bytes for devID.
     */
    com.google.protobuf.ByteString
        getDevIDBytes();

    /**
     * <pre>
     *上报给App的基础状态信息，无任务时的上报频率
     * </pre>
     *
     * <code>double basicstateinfo_freq_free_app = 4;</code>
     * @return The basicstateinfoFreqFreeApp.
     */
    double getBasicstateinfoFreqFreeApp();

    /**
     * <pre>
     *上报给App的基础状态信息，有任务时的上报频率
     * </pre>
     *
     * <code>double basicstateinfo_freq_work_app = 5;</code>
     * @return The basicstateinfoFreqWorkApp.
     */
    double getBasicstateinfoFreqWorkApp();

    /**
     * <pre>
     *上报给Cloud的基础状态信息，无任务时的上报频率
     * </pre>
     *
     * <code>double basicstateinfo_freq_free_cloud = 6;</code>
     * @return The basicstateinfoFreqFreeCloud.
     */
    double getBasicstateinfoFreqFreeCloud();

    /**
     * <pre>
     *上报给Cloud的基础状态信息，有任务时的上报频率
     * </pre>
     *
     * <code>double basicstateinfo_freq_work_cloud = 7;</code>
     * @return The basicstateinfoFreqWorkCloud.
     */
    double getBasicstateinfoFreqWorkCloud();

    /**
     * <pre>
     *局部轨迹发布频率
     * </pre>
     *
     * <code>double local_traj_freq = 8;</code>
     * @return The localTrajFreq.
     */
    double getLocalTrajFreq();

    /**
     * <pre>
     *局部轨迹长度
     * </pre>
     *
     * <code>double local_traj_length = 9;</code>
     * @return The localTrajLength.
     */
    double getLocalTrajLength();

    /**
     * <pre>
     *App心跳超时是否断开链接
     * </pre>
     *
     * <code>bool disconnect_while_timeout = 10;</code>
     * @return The disconnectWhileTimeout.
     */
    boolean getDisconnectWhileTimeout();

    /**
     * <pre>
     *HMI为App时，断开链接是否停止任务
     * </pre>
     *
     * <code>bool disconnect_stop_work_app = 11;</code>
     * @return The disconnectStopWorkApp.
     */
    boolean getDisconnectStopWorkApp();

    /**
     * <pre>
     *HMI为Cloud时，断开链接是否停止任务
     * </pre>
     *
     * <code>bool disconnect_stop_work_cloud = 12;</code>
     * @return The disconnectStopWorkCloud.
     */
    boolean getDisconnectStopWorkCloud();

    /**
     * <pre>
     *默认task ID
     * </pre>
     *
     * <code>string default_cloud_task_id = 13;</code>
     * @return The defaultCloudTaskId.
     */
    java.lang.String getDefaultCloudTaskId();
    /**
     * <pre>
     *默认task ID
     * </pre>
     *
     * <code>string default_cloud_task_id = 13;</code>
     * @return The bytes for defaultCloudTaskId.
     */
    com.google.protobuf.ByteString
        getDefaultCloudTaskIdBytes();

    /**
     * <pre>
     *多机电台波特率
     * </pre>
     *
     * <code>int32 radio_baud_rate = 14;</code>
     * @return The radioBaudRate.
     */
    int getRadioBaudRate();

    /**
     * <pre>
     *电台串口           
     * </pre>
     *
     * <code>string radio_serial = 15;</code>
     * @return The radioSerial.
     */
    java.lang.String getRadioSerial();
    /**
     * <pre>
     *电台串口           
     * </pre>
     *
     * <code>string radio_serial = 15;</code>
     * @return The bytes for radioSerial.
     */
    com.google.protobuf.ByteString
        getRadioSerialBytes();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PlanningConfig}
   */
  public static final class PlanningConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PlanningConfig)
      PlanningConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PlanningConfig.newBuilder() to construct.
    private PlanningConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PlanningConfig() {
      devToCloudTopic_ = "";
      cloudToDevTopic_ = "";
      devID_ = "";
      defaultCloudTaskId_ = "";
      radioSerial_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PlanningConfig();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PlanningConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              devToCloudTopic_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              cloudToDevTopic_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              devID_ = s;
              break;
            }
            case 33: {

              basicstateinfoFreqFreeApp_ = input.readDouble();
              break;
            }
            case 41: {

              basicstateinfoFreqWorkApp_ = input.readDouble();
              break;
            }
            case 49: {

              basicstateinfoFreqFreeCloud_ = input.readDouble();
              break;
            }
            case 57: {

              basicstateinfoFreqWorkCloud_ = input.readDouble();
              break;
            }
            case 65: {

              localTrajFreq_ = input.readDouble();
              break;
            }
            case 73: {

              localTrajLength_ = input.readDouble();
              break;
            }
            case 80: {

              disconnectWhileTimeout_ = input.readBool();
              break;
            }
            case 88: {

              disconnectStopWorkApp_ = input.readBool();
              break;
            }
            case 96: {

              disconnectStopWorkCloud_ = input.readBool();
              break;
            }
            case 106: {
              java.lang.String s = input.readStringRequireUtf8();

              defaultCloudTaskId_ = s;
              break;
            }
            case 112: {

              radioBaudRate_ = input.readInt32();
              break;
            }
            case 122: {
              java.lang.String s = input.readStringRequireUtf8();

              radioSerial_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_PlanningConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_PlanningConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig.Builder.class);
    }

    public static final int DEV_TO_CLOUD_TOPIC_FIELD_NUMBER = 1;
    private volatile java.lang.Object devToCloudTopic_;
    /**
     * <code>string dev_to_cloud_topic = 1;</code>
     * @return The devToCloudTopic.
     */
    @java.lang.Override
    public java.lang.String getDevToCloudTopic() {
      java.lang.Object ref = devToCloudTopic_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        devToCloudTopic_ = s;
        return s;
      }
    }
    /**
     * <code>string dev_to_cloud_topic = 1;</code>
     * @return The bytes for devToCloudTopic.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDevToCloudTopicBytes() {
      java.lang.Object ref = devToCloudTopic_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        devToCloudTopic_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CLOUD_TO_DEV_TOPIC_FIELD_NUMBER = 2;
    private volatile java.lang.Object cloudToDevTopic_;
    /**
     * <code>string cloud_to_dev_topic = 2;</code>
     * @return The cloudToDevTopic.
     */
    @java.lang.Override
    public java.lang.String getCloudToDevTopic() {
      java.lang.Object ref = cloudToDevTopic_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cloudToDevTopic_ = s;
        return s;
      }
    }
    /**
     * <code>string cloud_to_dev_topic = 2;</code>
     * @return The bytes for cloudToDevTopic.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCloudToDevTopicBytes() {
      java.lang.Object ref = cloudToDevTopic_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cloudToDevTopic_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEV_ID_FIELD_NUMBER = 3;
    private volatile java.lang.Object devID_;
    /**
     * <pre>
     *设备ID
     * </pre>
     *
     * <code>string dev_ID = 3;</code>
     * @return The devID.
     */
    @java.lang.Override
    public java.lang.String getDevID() {
      java.lang.Object ref = devID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        devID_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *设备ID
     * </pre>
     *
     * <code>string dev_ID = 3;</code>
     * @return The bytes for devID.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDevIDBytes() {
      java.lang.Object ref = devID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        devID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BASICSTATEINFO_FREQ_FREE_APP_FIELD_NUMBER = 4;
    private double basicstateinfoFreqFreeApp_;
    /**
     * <pre>
     *上报给App的基础状态信息，无任务时的上报频率
     * </pre>
     *
     * <code>double basicstateinfo_freq_free_app = 4;</code>
     * @return The basicstateinfoFreqFreeApp.
     */
    @java.lang.Override
    public double getBasicstateinfoFreqFreeApp() {
      return basicstateinfoFreqFreeApp_;
    }

    public static final int BASICSTATEINFO_FREQ_WORK_APP_FIELD_NUMBER = 5;
    private double basicstateinfoFreqWorkApp_;
    /**
     * <pre>
     *上报给App的基础状态信息，有任务时的上报频率
     * </pre>
     *
     * <code>double basicstateinfo_freq_work_app = 5;</code>
     * @return The basicstateinfoFreqWorkApp.
     */
    @java.lang.Override
    public double getBasicstateinfoFreqWorkApp() {
      return basicstateinfoFreqWorkApp_;
    }

    public static final int BASICSTATEINFO_FREQ_FREE_CLOUD_FIELD_NUMBER = 6;
    private double basicstateinfoFreqFreeCloud_;
    /**
     * <pre>
     *上报给Cloud的基础状态信息，无任务时的上报频率
     * </pre>
     *
     * <code>double basicstateinfo_freq_free_cloud = 6;</code>
     * @return The basicstateinfoFreqFreeCloud.
     */
    @java.lang.Override
    public double getBasicstateinfoFreqFreeCloud() {
      return basicstateinfoFreqFreeCloud_;
    }

    public static final int BASICSTATEINFO_FREQ_WORK_CLOUD_FIELD_NUMBER = 7;
    private double basicstateinfoFreqWorkCloud_;
    /**
     * <pre>
     *上报给Cloud的基础状态信息，有任务时的上报频率
     * </pre>
     *
     * <code>double basicstateinfo_freq_work_cloud = 7;</code>
     * @return The basicstateinfoFreqWorkCloud.
     */
    @java.lang.Override
    public double getBasicstateinfoFreqWorkCloud() {
      return basicstateinfoFreqWorkCloud_;
    }

    public static final int LOCAL_TRAJ_FREQ_FIELD_NUMBER = 8;
    private double localTrajFreq_;
    /**
     * <pre>
     *局部轨迹发布频率
     * </pre>
     *
     * <code>double local_traj_freq = 8;</code>
     * @return The localTrajFreq.
     */
    @java.lang.Override
    public double getLocalTrajFreq() {
      return localTrajFreq_;
    }

    public static final int LOCAL_TRAJ_LENGTH_FIELD_NUMBER = 9;
    private double localTrajLength_;
    /**
     * <pre>
     *局部轨迹长度
     * </pre>
     *
     * <code>double local_traj_length = 9;</code>
     * @return The localTrajLength.
     */
    @java.lang.Override
    public double getLocalTrajLength() {
      return localTrajLength_;
    }

    public static final int DISCONNECT_WHILE_TIMEOUT_FIELD_NUMBER = 10;
    private boolean disconnectWhileTimeout_;
    /**
     * <pre>
     *App心跳超时是否断开链接
     * </pre>
     *
     * <code>bool disconnect_while_timeout = 10;</code>
     * @return The disconnectWhileTimeout.
     */
    @java.lang.Override
    public boolean getDisconnectWhileTimeout() {
      return disconnectWhileTimeout_;
    }

    public static final int DISCONNECT_STOP_WORK_APP_FIELD_NUMBER = 11;
    private boolean disconnectStopWorkApp_;
    /**
     * <pre>
     *HMI为App时，断开链接是否停止任务
     * </pre>
     *
     * <code>bool disconnect_stop_work_app = 11;</code>
     * @return The disconnectStopWorkApp.
     */
    @java.lang.Override
    public boolean getDisconnectStopWorkApp() {
      return disconnectStopWorkApp_;
    }

    public static final int DISCONNECT_STOP_WORK_CLOUD_FIELD_NUMBER = 12;
    private boolean disconnectStopWorkCloud_;
    /**
     * <pre>
     *HMI为Cloud时，断开链接是否停止任务
     * </pre>
     *
     * <code>bool disconnect_stop_work_cloud = 12;</code>
     * @return The disconnectStopWorkCloud.
     */
    @java.lang.Override
    public boolean getDisconnectStopWorkCloud() {
      return disconnectStopWorkCloud_;
    }

    public static final int DEFAULT_CLOUD_TASK_ID_FIELD_NUMBER = 13;
    private volatile java.lang.Object defaultCloudTaskId_;
    /**
     * <pre>
     *默认task ID
     * </pre>
     *
     * <code>string default_cloud_task_id = 13;</code>
     * @return The defaultCloudTaskId.
     */
    @java.lang.Override
    public java.lang.String getDefaultCloudTaskId() {
      java.lang.Object ref = defaultCloudTaskId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        defaultCloudTaskId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *默认task ID
     * </pre>
     *
     * <code>string default_cloud_task_id = 13;</code>
     * @return The bytes for defaultCloudTaskId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDefaultCloudTaskIdBytes() {
      java.lang.Object ref = defaultCloudTaskId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        defaultCloudTaskId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RADIO_BAUD_RATE_FIELD_NUMBER = 14;
    private int radioBaudRate_;
    /**
     * <pre>
     *多机电台波特率
     * </pre>
     *
     * <code>int32 radio_baud_rate = 14;</code>
     * @return The radioBaudRate.
     */
    @java.lang.Override
    public int getRadioBaudRate() {
      return radioBaudRate_;
    }

    public static final int RADIO_SERIAL_FIELD_NUMBER = 15;
    private volatile java.lang.Object radioSerial_;
    /**
     * <pre>
     *电台串口           
     * </pre>
     *
     * <code>string radio_serial = 15;</code>
     * @return The radioSerial.
     */
    @java.lang.Override
    public java.lang.String getRadioSerial() {
      java.lang.Object ref = radioSerial_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        radioSerial_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *电台串口           
     * </pre>
     *
     * <code>string radio_serial = 15;</code>
     * @return The bytes for radioSerial.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRadioSerialBytes() {
      java.lang.Object ref = radioSerial_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        radioSerial_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getDevToCloudTopicBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, devToCloudTopic_);
      }
      if (!getCloudToDevTopicBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, cloudToDevTopic_);
      }
      if (!getDevIDBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, devID_);
      }
      if (basicstateinfoFreqFreeApp_ != 0D) {
        output.writeDouble(4, basicstateinfoFreqFreeApp_);
      }
      if (basicstateinfoFreqWorkApp_ != 0D) {
        output.writeDouble(5, basicstateinfoFreqWorkApp_);
      }
      if (basicstateinfoFreqFreeCloud_ != 0D) {
        output.writeDouble(6, basicstateinfoFreqFreeCloud_);
      }
      if (basicstateinfoFreqWorkCloud_ != 0D) {
        output.writeDouble(7, basicstateinfoFreqWorkCloud_);
      }
      if (localTrajFreq_ != 0D) {
        output.writeDouble(8, localTrajFreq_);
      }
      if (localTrajLength_ != 0D) {
        output.writeDouble(9, localTrajLength_);
      }
      if (disconnectWhileTimeout_ != false) {
        output.writeBool(10, disconnectWhileTimeout_);
      }
      if (disconnectStopWorkApp_ != false) {
        output.writeBool(11, disconnectStopWorkApp_);
      }
      if (disconnectStopWorkCloud_ != false) {
        output.writeBool(12, disconnectStopWorkCloud_);
      }
      if (!getDefaultCloudTaskIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 13, defaultCloudTaskId_);
      }
      if (radioBaudRate_ != 0) {
        output.writeInt32(14, radioBaudRate_);
      }
      if (!getRadioSerialBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 15, radioSerial_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getDevToCloudTopicBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, devToCloudTopic_);
      }
      if (!getCloudToDevTopicBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, cloudToDevTopic_);
      }
      if (!getDevIDBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, devID_);
      }
      if (basicstateinfoFreqFreeApp_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, basicstateinfoFreqFreeApp_);
      }
      if (basicstateinfoFreqWorkApp_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, basicstateinfoFreqWorkApp_);
      }
      if (basicstateinfoFreqFreeCloud_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, basicstateinfoFreqFreeCloud_);
      }
      if (basicstateinfoFreqWorkCloud_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, basicstateinfoFreqWorkCloud_);
      }
      if (localTrajFreq_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, localTrajFreq_);
      }
      if (localTrajLength_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, localTrajLength_);
      }
      if (disconnectWhileTimeout_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, disconnectWhileTimeout_);
      }
      if (disconnectStopWorkApp_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, disconnectStopWorkApp_);
      }
      if (disconnectStopWorkCloud_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, disconnectStopWorkCloud_);
      }
      if (!getDefaultCloudTaskIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, defaultCloudTaskId_);
      }
      if (radioBaudRate_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, radioBaudRate_);
      }
      if (!getRadioSerialBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, radioSerial_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig) obj;

      if (!getDevToCloudTopic()
          .equals(other.getDevToCloudTopic())) return false;
      if (!getCloudToDevTopic()
          .equals(other.getCloudToDevTopic())) return false;
      if (!getDevID()
          .equals(other.getDevID())) return false;
      if (java.lang.Double.doubleToLongBits(getBasicstateinfoFreqFreeApp())
          != java.lang.Double.doubleToLongBits(
              other.getBasicstateinfoFreqFreeApp())) return false;
      if (java.lang.Double.doubleToLongBits(getBasicstateinfoFreqWorkApp())
          != java.lang.Double.doubleToLongBits(
              other.getBasicstateinfoFreqWorkApp())) return false;
      if (java.lang.Double.doubleToLongBits(getBasicstateinfoFreqFreeCloud())
          != java.lang.Double.doubleToLongBits(
              other.getBasicstateinfoFreqFreeCloud())) return false;
      if (java.lang.Double.doubleToLongBits(getBasicstateinfoFreqWorkCloud())
          != java.lang.Double.doubleToLongBits(
              other.getBasicstateinfoFreqWorkCloud())) return false;
      if (java.lang.Double.doubleToLongBits(getLocalTrajFreq())
          != java.lang.Double.doubleToLongBits(
              other.getLocalTrajFreq())) return false;
      if (java.lang.Double.doubleToLongBits(getLocalTrajLength())
          != java.lang.Double.doubleToLongBits(
              other.getLocalTrajLength())) return false;
      if (getDisconnectWhileTimeout()
          != other.getDisconnectWhileTimeout()) return false;
      if (getDisconnectStopWorkApp()
          != other.getDisconnectStopWorkApp()) return false;
      if (getDisconnectStopWorkCloud()
          != other.getDisconnectStopWorkCloud()) return false;
      if (!getDefaultCloudTaskId()
          .equals(other.getDefaultCloudTaskId())) return false;
      if (getRadioBaudRate()
          != other.getRadioBaudRate()) return false;
      if (!getRadioSerial()
          .equals(other.getRadioSerial())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DEV_TO_CLOUD_TOPIC_FIELD_NUMBER;
      hash = (53 * hash) + getDevToCloudTopic().hashCode();
      hash = (37 * hash) + CLOUD_TO_DEV_TOPIC_FIELD_NUMBER;
      hash = (53 * hash) + getCloudToDevTopic().hashCode();
      hash = (37 * hash) + DEV_ID_FIELD_NUMBER;
      hash = (53 * hash) + getDevID().hashCode();
      hash = (37 * hash) + BASICSTATEINFO_FREQ_FREE_APP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getBasicstateinfoFreqFreeApp()));
      hash = (37 * hash) + BASICSTATEINFO_FREQ_WORK_APP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getBasicstateinfoFreqWorkApp()));
      hash = (37 * hash) + BASICSTATEINFO_FREQ_FREE_CLOUD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getBasicstateinfoFreqFreeCloud()));
      hash = (37 * hash) + BASICSTATEINFO_FREQ_WORK_CLOUD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getBasicstateinfoFreqWorkCloud()));
      hash = (37 * hash) + LOCAL_TRAJ_FREQ_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLocalTrajFreq()));
      hash = (37 * hash) + LOCAL_TRAJ_LENGTH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLocalTrajLength()));
      hash = (37 * hash) + DISCONNECT_WHILE_TIMEOUT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDisconnectWhileTimeout());
      hash = (37 * hash) + DISCONNECT_STOP_WORK_APP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDisconnectStopWorkApp());
      hash = (37 * hash) + DISCONNECT_STOP_WORK_CLOUD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDisconnectStopWorkCloud());
      hash = (37 * hash) + DEFAULT_CLOUD_TASK_ID_FIELD_NUMBER;
      hash = (53 * hash) + getDefaultCloudTaskId().hashCode();
      hash = (37 * hash) + RADIO_BAUD_RATE_FIELD_NUMBER;
      hash = (53 * hash) + getRadioBaudRate();
      hash = (37 * hash) + RADIO_SERIAL_FIELD_NUMBER;
      hash = (53 * hash) + getRadioSerial().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PlanningConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PlanningConfig)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_PlanningConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_PlanningConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        devToCloudTopic_ = "";

        cloudToDevTopic_ = "";

        devID_ = "";

        basicstateinfoFreqFreeApp_ = 0D;

        basicstateinfoFreqWorkApp_ = 0D;

        basicstateinfoFreqFreeCloud_ = 0D;

        basicstateinfoFreqWorkCloud_ = 0D;

        localTrajFreq_ = 0D;

        localTrajLength_ = 0D;

        disconnectWhileTimeout_ = false;

        disconnectStopWorkApp_ = false;

        disconnectStopWorkCloud_ = false;

        defaultCloudTaskId_ = "";

        radioBaudRate_ = 0;

        radioSerial_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_PlanningConfig_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig(this);
        result.devToCloudTopic_ = devToCloudTopic_;
        result.cloudToDevTopic_ = cloudToDevTopic_;
        result.devID_ = devID_;
        result.basicstateinfoFreqFreeApp_ = basicstateinfoFreqFreeApp_;
        result.basicstateinfoFreqWorkApp_ = basicstateinfoFreqWorkApp_;
        result.basicstateinfoFreqFreeCloud_ = basicstateinfoFreqFreeCloud_;
        result.basicstateinfoFreqWorkCloud_ = basicstateinfoFreqWorkCloud_;
        result.localTrajFreq_ = localTrajFreq_;
        result.localTrajLength_ = localTrajLength_;
        result.disconnectWhileTimeout_ = disconnectWhileTimeout_;
        result.disconnectStopWorkApp_ = disconnectStopWorkApp_;
        result.disconnectStopWorkCloud_ = disconnectStopWorkCloud_;
        result.defaultCloudTaskId_ = defaultCloudTaskId_;
        result.radioBaudRate_ = radioBaudRate_;
        result.radioSerial_ = radioSerial_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig.getDefaultInstance()) return this;
        if (!other.getDevToCloudTopic().isEmpty()) {
          devToCloudTopic_ = other.devToCloudTopic_;
          onChanged();
        }
        if (!other.getCloudToDevTopic().isEmpty()) {
          cloudToDevTopic_ = other.cloudToDevTopic_;
          onChanged();
        }
        if (!other.getDevID().isEmpty()) {
          devID_ = other.devID_;
          onChanged();
        }
        if (other.getBasicstateinfoFreqFreeApp() != 0D) {
          setBasicstateinfoFreqFreeApp(other.getBasicstateinfoFreqFreeApp());
        }
        if (other.getBasicstateinfoFreqWorkApp() != 0D) {
          setBasicstateinfoFreqWorkApp(other.getBasicstateinfoFreqWorkApp());
        }
        if (other.getBasicstateinfoFreqFreeCloud() != 0D) {
          setBasicstateinfoFreqFreeCloud(other.getBasicstateinfoFreqFreeCloud());
        }
        if (other.getBasicstateinfoFreqWorkCloud() != 0D) {
          setBasicstateinfoFreqWorkCloud(other.getBasicstateinfoFreqWorkCloud());
        }
        if (other.getLocalTrajFreq() != 0D) {
          setLocalTrajFreq(other.getLocalTrajFreq());
        }
        if (other.getLocalTrajLength() != 0D) {
          setLocalTrajLength(other.getLocalTrajLength());
        }
        if (other.getDisconnectWhileTimeout() != false) {
          setDisconnectWhileTimeout(other.getDisconnectWhileTimeout());
        }
        if (other.getDisconnectStopWorkApp() != false) {
          setDisconnectStopWorkApp(other.getDisconnectStopWorkApp());
        }
        if (other.getDisconnectStopWorkCloud() != false) {
          setDisconnectStopWorkCloud(other.getDisconnectStopWorkCloud());
        }
        if (!other.getDefaultCloudTaskId().isEmpty()) {
          defaultCloudTaskId_ = other.defaultCloudTaskId_;
          onChanged();
        }
        if (other.getRadioBaudRate() != 0) {
          setRadioBaudRate(other.getRadioBaudRate());
        }
        if (!other.getRadioSerial().isEmpty()) {
          radioSerial_ = other.radioSerial_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object devToCloudTopic_ = "";
      /**
       * <code>string dev_to_cloud_topic = 1;</code>
       * @return The devToCloudTopic.
       */
      public java.lang.String getDevToCloudTopic() {
        java.lang.Object ref = devToCloudTopic_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          devToCloudTopic_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string dev_to_cloud_topic = 1;</code>
       * @return The bytes for devToCloudTopic.
       */
      public com.google.protobuf.ByteString
          getDevToCloudTopicBytes() {
        java.lang.Object ref = devToCloudTopic_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          devToCloudTopic_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string dev_to_cloud_topic = 1;</code>
       * @param value The devToCloudTopic to set.
       * @return This builder for chaining.
       */
      public Builder setDevToCloudTopic(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        devToCloudTopic_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string dev_to_cloud_topic = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDevToCloudTopic() {
        
        devToCloudTopic_ = getDefaultInstance().getDevToCloudTopic();
        onChanged();
        return this;
      }
      /**
       * <code>string dev_to_cloud_topic = 1;</code>
       * @param value The bytes for devToCloudTopic to set.
       * @return This builder for chaining.
       */
      public Builder setDevToCloudTopicBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        devToCloudTopic_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object cloudToDevTopic_ = "";
      /**
       * <code>string cloud_to_dev_topic = 2;</code>
       * @return The cloudToDevTopic.
       */
      public java.lang.String getCloudToDevTopic() {
        java.lang.Object ref = cloudToDevTopic_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          cloudToDevTopic_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string cloud_to_dev_topic = 2;</code>
       * @return The bytes for cloudToDevTopic.
       */
      public com.google.protobuf.ByteString
          getCloudToDevTopicBytes() {
        java.lang.Object ref = cloudToDevTopic_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cloudToDevTopic_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string cloud_to_dev_topic = 2;</code>
       * @param value The cloudToDevTopic to set.
       * @return This builder for chaining.
       */
      public Builder setCloudToDevTopic(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        cloudToDevTopic_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string cloud_to_dev_topic = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCloudToDevTopic() {
        
        cloudToDevTopic_ = getDefaultInstance().getCloudToDevTopic();
        onChanged();
        return this;
      }
      /**
       * <code>string cloud_to_dev_topic = 2;</code>
       * @param value The bytes for cloudToDevTopic to set.
       * @return This builder for chaining.
       */
      public Builder setCloudToDevTopicBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        cloudToDevTopic_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object devID_ = "";
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>string dev_ID = 3;</code>
       * @return The devID.
       */
      public java.lang.String getDevID() {
        java.lang.Object ref = devID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          devID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>string dev_ID = 3;</code>
       * @return The bytes for devID.
       */
      public com.google.protobuf.ByteString
          getDevIDBytes() {
        java.lang.Object ref = devID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          devID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>string dev_ID = 3;</code>
       * @param value The devID to set.
       * @return This builder for chaining.
       */
      public Builder setDevID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        devID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>string dev_ID = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearDevID() {
        
        devID_ = getDefaultInstance().getDevID();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>string dev_ID = 3;</code>
       * @param value The bytes for devID to set.
       * @return This builder for chaining.
       */
      public Builder setDevIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        devID_ = value;
        onChanged();
        return this;
      }

      private double basicstateinfoFreqFreeApp_ ;
      /**
       * <pre>
       *上报给App的基础状态信息，无任务时的上报频率
       * </pre>
       *
       * <code>double basicstateinfo_freq_free_app = 4;</code>
       * @return The basicstateinfoFreqFreeApp.
       */
      @java.lang.Override
      public double getBasicstateinfoFreqFreeApp() {
        return basicstateinfoFreqFreeApp_;
      }
      /**
       * <pre>
       *上报给App的基础状态信息，无任务时的上报频率
       * </pre>
       *
       * <code>double basicstateinfo_freq_free_app = 4;</code>
       * @param value The basicstateinfoFreqFreeApp to set.
       * @return This builder for chaining.
       */
      public Builder setBasicstateinfoFreqFreeApp(double value) {
        
        basicstateinfoFreqFreeApp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *上报给App的基础状态信息，无任务时的上报频率
       * </pre>
       *
       * <code>double basicstateinfo_freq_free_app = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearBasicstateinfoFreqFreeApp() {
        
        basicstateinfoFreqFreeApp_ = 0D;
        onChanged();
        return this;
      }

      private double basicstateinfoFreqWorkApp_ ;
      /**
       * <pre>
       *上报给App的基础状态信息，有任务时的上报频率
       * </pre>
       *
       * <code>double basicstateinfo_freq_work_app = 5;</code>
       * @return The basicstateinfoFreqWorkApp.
       */
      @java.lang.Override
      public double getBasicstateinfoFreqWorkApp() {
        return basicstateinfoFreqWorkApp_;
      }
      /**
       * <pre>
       *上报给App的基础状态信息，有任务时的上报频率
       * </pre>
       *
       * <code>double basicstateinfo_freq_work_app = 5;</code>
       * @param value The basicstateinfoFreqWorkApp to set.
       * @return This builder for chaining.
       */
      public Builder setBasicstateinfoFreqWorkApp(double value) {
        
        basicstateinfoFreqWorkApp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *上报给App的基础状态信息，有任务时的上报频率
       * </pre>
       *
       * <code>double basicstateinfo_freq_work_app = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearBasicstateinfoFreqWorkApp() {
        
        basicstateinfoFreqWorkApp_ = 0D;
        onChanged();
        return this;
      }

      private double basicstateinfoFreqFreeCloud_ ;
      /**
       * <pre>
       *上报给Cloud的基础状态信息，无任务时的上报频率
       * </pre>
       *
       * <code>double basicstateinfo_freq_free_cloud = 6;</code>
       * @return The basicstateinfoFreqFreeCloud.
       */
      @java.lang.Override
      public double getBasicstateinfoFreqFreeCloud() {
        return basicstateinfoFreqFreeCloud_;
      }
      /**
       * <pre>
       *上报给Cloud的基础状态信息，无任务时的上报频率
       * </pre>
       *
       * <code>double basicstateinfo_freq_free_cloud = 6;</code>
       * @param value The basicstateinfoFreqFreeCloud to set.
       * @return This builder for chaining.
       */
      public Builder setBasicstateinfoFreqFreeCloud(double value) {
        
        basicstateinfoFreqFreeCloud_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *上报给Cloud的基础状态信息，无任务时的上报频率
       * </pre>
       *
       * <code>double basicstateinfo_freq_free_cloud = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearBasicstateinfoFreqFreeCloud() {
        
        basicstateinfoFreqFreeCloud_ = 0D;
        onChanged();
        return this;
      }

      private double basicstateinfoFreqWorkCloud_ ;
      /**
       * <pre>
       *上报给Cloud的基础状态信息，有任务时的上报频率
       * </pre>
       *
       * <code>double basicstateinfo_freq_work_cloud = 7;</code>
       * @return The basicstateinfoFreqWorkCloud.
       */
      @java.lang.Override
      public double getBasicstateinfoFreqWorkCloud() {
        return basicstateinfoFreqWorkCloud_;
      }
      /**
       * <pre>
       *上报给Cloud的基础状态信息，有任务时的上报频率
       * </pre>
       *
       * <code>double basicstateinfo_freq_work_cloud = 7;</code>
       * @param value The basicstateinfoFreqWorkCloud to set.
       * @return This builder for chaining.
       */
      public Builder setBasicstateinfoFreqWorkCloud(double value) {
        
        basicstateinfoFreqWorkCloud_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *上报给Cloud的基础状态信息，有任务时的上报频率
       * </pre>
       *
       * <code>double basicstateinfo_freq_work_cloud = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearBasicstateinfoFreqWorkCloud() {
        
        basicstateinfoFreqWorkCloud_ = 0D;
        onChanged();
        return this;
      }

      private double localTrajFreq_ ;
      /**
       * <pre>
       *局部轨迹发布频率
       * </pre>
       *
       * <code>double local_traj_freq = 8;</code>
       * @return The localTrajFreq.
       */
      @java.lang.Override
      public double getLocalTrajFreq() {
        return localTrajFreq_;
      }
      /**
       * <pre>
       *局部轨迹发布频率
       * </pre>
       *
       * <code>double local_traj_freq = 8;</code>
       * @param value The localTrajFreq to set.
       * @return This builder for chaining.
       */
      public Builder setLocalTrajFreq(double value) {
        
        localTrajFreq_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *局部轨迹发布频率
       * </pre>
       *
       * <code>double local_traj_freq = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearLocalTrajFreq() {
        
        localTrajFreq_ = 0D;
        onChanged();
        return this;
      }

      private double localTrajLength_ ;
      /**
       * <pre>
       *局部轨迹长度
       * </pre>
       *
       * <code>double local_traj_length = 9;</code>
       * @return The localTrajLength.
       */
      @java.lang.Override
      public double getLocalTrajLength() {
        return localTrajLength_;
      }
      /**
       * <pre>
       *局部轨迹长度
       * </pre>
       *
       * <code>double local_traj_length = 9;</code>
       * @param value The localTrajLength to set.
       * @return This builder for chaining.
       */
      public Builder setLocalTrajLength(double value) {
        
        localTrajLength_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *局部轨迹长度
       * </pre>
       *
       * <code>double local_traj_length = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearLocalTrajLength() {
        
        localTrajLength_ = 0D;
        onChanged();
        return this;
      }

      private boolean disconnectWhileTimeout_ ;
      /**
       * <pre>
       *App心跳超时是否断开链接
       * </pre>
       *
       * <code>bool disconnect_while_timeout = 10;</code>
       * @return The disconnectWhileTimeout.
       */
      @java.lang.Override
      public boolean getDisconnectWhileTimeout() {
        return disconnectWhileTimeout_;
      }
      /**
       * <pre>
       *App心跳超时是否断开链接
       * </pre>
       *
       * <code>bool disconnect_while_timeout = 10;</code>
       * @param value The disconnectWhileTimeout to set.
       * @return This builder for chaining.
       */
      public Builder setDisconnectWhileTimeout(boolean value) {
        
        disconnectWhileTimeout_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *App心跳超时是否断开链接
       * </pre>
       *
       * <code>bool disconnect_while_timeout = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearDisconnectWhileTimeout() {
        
        disconnectWhileTimeout_ = false;
        onChanged();
        return this;
      }

      private boolean disconnectStopWorkApp_ ;
      /**
       * <pre>
       *HMI为App时，断开链接是否停止任务
       * </pre>
       *
       * <code>bool disconnect_stop_work_app = 11;</code>
       * @return The disconnectStopWorkApp.
       */
      @java.lang.Override
      public boolean getDisconnectStopWorkApp() {
        return disconnectStopWorkApp_;
      }
      /**
       * <pre>
       *HMI为App时，断开链接是否停止任务
       * </pre>
       *
       * <code>bool disconnect_stop_work_app = 11;</code>
       * @param value The disconnectStopWorkApp to set.
       * @return This builder for chaining.
       */
      public Builder setDisconnectStopWorkApp(boolean value) {
        
        disconnectStopWorkApp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *HMI为App时，断开链接是否停止任务
       * </pre>
       *
       * <code>bool disconnect_stop_work_app = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearDisconnectStopWorkApp() {
        
        disconnectStopWorkApp_ = false;
        onChanged();
        return this;
      }

      private boolean disconnectStopWorkCloud_ ;
      /**
       * <pre>
       *HMI为Cloud时，断开链接是否停止任务
       * </pre>
       *
       * <code>bool disconnect_stop_work_cloud = 12;</code>
       * @return The disconnectStopWorkCloud.
       */
      @java.lang.Override
      public boolean getDisconnectStopWorkCloud() {
        return disconnectStopWorkCloud_;
      }
      /**
       * <pre>
       *HMI为Cloud时，断开链接是否停止任务
       * </pre>
       *
       * <code>bool disconnect_stop_work_cloud = 12;</code>
       * @param value The disconnectStopWorkCloud to set.
       * @return This builder for chaining.
       */
      public Builder setDisconnectStopWorkCloud(boolean value) {
        
        disconnectStopWorkCloud_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *HMI为Cloud时，断开链接是否停止任务
       * </pre>
       *
       * <code>bool disconnect_stop_work_cloud = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearDisconnectStopWorkCloud() {
        
        disconnectStopWorkCloud_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object defaultCloudTaskId_ = "";
      /**
       * <pre>
       *默认task ID
       * </pre>
       *
       * <code>string default_cloud_task_id = 13;</code>
       * @return The defaultCloudTaskId.
       */
      public java.lang.String getDefaultCloudTaskId() {
        java.lang.Object ref = defaultCloudTaskId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          defaultCloudTaskId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *默认task ID
       * </pre>
       *
       * <code>string default_cloud_task_id = 13;</code>
       * @return The bytes for defaultCloudTaskId.
       */
      public com.google.protobuf.ByteString
          getDefaultCloudTaskIdBytes() {
        java.lang.Object ref = defaultCloudTaskId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          defaultCloudTaskId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *默认task ID
       * </pre>
       *
       * <code>string default_cloud_task_id = 13;</code>
       * @param value The defaultCloudTaskId to set.
       * @return This builder for chaining.
       */
      public Builder setDefaultCloudTaskId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        defaultCloudTaskId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *默认task ID
       * </pre>
       *
       * <code>string default_cloud_task_id = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearDefaultCloudTaskId() {
        
        defaultCloudTaskId_ = getDefaultInstance().getDefaultCloudTaskId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *默认task ID
       * </pre>
       *
       * <code>string default_cloud_task_id = 13;</code>
       * @param value The bytes for defaultCloudTaskId to set.
       * @return This builder for chaining.
       */
      public Builder setDefaultCloudTaskIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        defaultCloudTaskId_ = value;
        onChanged();
        return this;
      }

      private int radioBaudRate_ ;
      /**
       * <pre>
       *多机电台波特率
       * </pre>
       *
       * <code>int32 radio_baud_rate = 14;</code>
       * @return The radioBaudRate.
       */
      @java.lang.Override
      public int getRadioBaudRate() {
        return radioBaudRate_;
      }
      /**
       * <pre>
       *多机电台波特率
       * </pre>
       *
       * <code>int32 radio_baud_rate = 14;</code>
       * @param value The radioBaudRate to set.
       * @return This builder for chaining.
       */
      public Builder setRadioBaudRate(int value) {
        
        radioBaudRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *多机电台波特率
       * </pre>
       *
       * <code>int32 radio_baud_rate = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearRadioBaudRate() {
        
        radioBaudRate_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object radioSerial_ = "";
      /**
       * <pre>
       *电台串口           
       * </pre>
       *
       * <code>string radio_serial = 15;</code>
       * @return The radioSerial.
       */
      public java.lang.String getRadioSerial() {
        java.lang.Object ref = radioSerial_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          radioSerial_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *电台串口           
       * </pre>
       *
       * <code>string radio_serial = 15;</code>
       * @return The bytes for radioSerial.
       */
      public com.google.protobuf.ByteString
          getRadioSerialBytes() {
        java.lang.Object ref = radioSerial_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          radioSerial_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *电台串口           
       * </pre>
       *
       * <code>string radio_serial = 15;</code>
       * @param value The radioSerial to set.
       * @return This builder for chaining.
       */
      public Builder setRadioSerial(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        radioSerial_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *电台串口           
       * </pre>
       *
       * <code>string radio_serial = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearRadioSerial() {
        
        radioSerial_ = getDefaultInstance().getRadioSerial();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *电台串口           
       * </pre>
       *
       * <code>string radio_serial = 15;</code>
       * @param value The bytes for radioSerial to set.
       * @return This builder for chaining.
       */
      public Builder setRadioSerialBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        radioSerial_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PlanningConfig)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PlanningConfig)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PlanningConfig>
        PARSER = new com.google.protobuf.AbstractParser<PlanningConfig>() {
      @java.lang.Override
      public PlanningConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlanningConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PlanningConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PlanningConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConfigParamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigType type = 1;</code>
     * @return The type.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigType getType();

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.GnssConfig gnss_config = 2;</code>
     * @return Whether the gnssConfig field is set.
     */
    boolean hasGnssConfig();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.GnssConfig gnss_config = 2;</code>
     * @return The gnssConfig.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig getGnssConfig();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.GnssConfig gnss_config = 2;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfigOrBuilder getGnssConfigOrBuilder();

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LocalizationConfig localization_config = 3;</code>
     * @return Whether the localizationConfig field is set.
     */
    boolean hasLocalizationConfig();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LocalizationConfig localization_config = 3;</code>
     * @return The localizationConfig.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig getLocalizationConfig();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LocalizationConfig localization_config = 3;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfigOrBuilder getLocalizationConfigOrBuilder();

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ControlConfig control_config = 4;</code>
     * @return Whether the controlConfig field is set.
     */
    boolean hasControlConfig();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ControlConfig control_config = 4;</code>
     * @return The controlConfig.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig getControlConfig();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ControlConfig control_config = 4;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfigOrBuilder getControlConfigOrBuilder();

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ChassisConfig chassis_config = 5;</code>
     * @return Whether the chassisConfig field is set.
     */
    boolean hasChassisConfig();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ChassisConfig chassis_config = 5;</code>
     * @return The chassisConfig.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig getChassisConfig();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ChassisConfig chassis_config = 5;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfigOrBuilder getChassisConfigOrBuilder();

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PlanningConfig planning_config = 6;</code>
     * @return Whether the planningConfig field is set.
     */
    boolean hasPlanningConfig();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PlanningConfig planning_config = 6;</code>
     * @return The planningConfig.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig getPlanningConfig();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PlanningConfig planning_config = 6;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfigOrBuilder getPlanningConfigOrBuilder();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam}
   */
  public static final class ConfigParam extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam)
      ConfigParamOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConfigParam.newBuilder() to construct.
    private ConfigParam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConfigParam() {
      type_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ConfigParam();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ConfigParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig.Builder subBuilder = null;
              if (gnssConfig_ != null) {
                subBuilder = gnssConfig_.toBuilder();
              }
              gnssConfig_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gnssConfig_);
                gnssConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig.Builder subBuilder = null;
              if (localizationConfig_ != null) {
                subBuilder = localizationConfig_.toBuilder();
              }
              localizationConfig_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(localizationConfig_);
                localizationConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig.Builder subBuilder = null;
              if (controlConfig_ != null) {
                subBuilder = controlConfig_.toBuilder();
              }
              controlConfig_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(controlConfig_);
                controlConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig.Builder subBuilder = null;
              if (chassisConfig_ != null) {
                subBuilder = chassisConfig_.toBuilder();
              }
              chassisConfig_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(chassisConfig_);
                chassisConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig.Builder subBuilder = null;
              if (planningConfig_ != null) {
                subBuilder = planningConfig_.toBuilder();
              }
              planningConfig_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(planningConfig_);
                planningConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ConfigParam_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ConfigParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigType getType() {
      @SuppressWarnings("deprecation")
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigType result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigType.valueOf(type_);
      return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigType.UNRECOGNIZED : result;
    }

    public static final int GNSS_CONFIG_FIELD_NUMBER = 2;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig gnssConfig_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.GnssConfig gnss_config = 2;</code>
     * @return Whether the gnssConfig field is set.
     */
    @java.lang.Override
    public boolean hasGnssConfig() {
      return gnssConfig_ != null;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.GnssConfig gnss_config = 2;</code>
     * @return The gnssConfig.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig getGnssConfig() {
      return gnssConfig_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig.getDefaultInstance() : gnssConfig_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.GnssConfig gnss_config = 2;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfigOrBuilder getGnssConfigOrBuilder() {
      return getGnssConfig();
    }

    public static final int LOCALIZATION_CONFIG_FIELD_NUMBER = 3;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig localizationConfig_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LocalizationConfig localization_config = 3;</code>
     * @return Whether the localizationConfig field is set.
     */
    @java.lang.Override
    public boolean hasLocalizationConfig() {
      return localizationConfig_ != null;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LocalizationConfig localization_config = 3;</code>
     * @return The localizationConfig.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig getLocalizationConfig() {
      return localizationConfig_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig.getDefaultInstance() : localizationConfig_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LocalizationConfig localization_config = 3;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfigOrBuilder getLocalizationConfigOrBuilder() {
      return getLocalizationConfig();
    }

    public static final int CONTROL_CONFIG_FIELD_NUMBER = 4;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig controlConfig_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ControlConfig control_config = 4;</code>
     * @return Whether the controlConfig field is set.
     */
    @java.lang.Override
    public boolean hasControlConfig() {
      return controlConfig_ != null;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ControlConfig control_config = 4;</code>
     * @return The controlConfig.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig getControlConfig() {
      return controlConfig_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig.getDefaultInstance() : controlConfig_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ControlConfig control_config = 4;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfigOrBuilder getControlConfigOrBuilder() {
      return getControlConfig();
    }

    public static final int CHASSIS_CONFIG_FIELD_NUMBER = 5;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig chassisConfig_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ChassisConfig chassis_config = 5;</code>
     * @return Whether the chassisConfig field is set.
     */
    @java.lang.Override
    public boolean hasChassisConfig() {
      return chassisConfig_ != null;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ChassisConfig chassis_config = 5;</code>
     * @return The chassisConfig.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig getChassisConfig() {
      return chassisConfig_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig.getDefaultInstance() : chassisConfig_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ChassisConfig chassis_config = 5;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfigOrBuilder getChassisConfigOrBuilder() {
      return getChassisConfig();
    }

    public static final int PLANNING_CONFIG_FIELD_NUMBER = 6;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig planningConfig_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PlanningConfig planning_config = 6;</code>
     * @return Whether the planningConfig field is set.
     */
    @java.lang.Override
    public boolean hasPlanningConfig() {
      return planningConfig_ != null;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PlanningConfig planning_config = 6;</code>
     * @return The planningConfig.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig getPlanningConfig() {
      return planningConfig_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig.getDefaultInstance() : planningConfig_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PlanningConfig planning_config = 6;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfigOrBuilder getPlanningConfigOrBuilder() {
      return getPlanningConfig();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigType.CFG_NULL.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (gnssConfig_ != null) {
        output.writeMessage(2, getGnssConfig());
      }
      if (localizationConfig_ != null) {
        output.writeMessage(3, getLocalizationConfig());
      }
      if (controlConfig_ != null) {
        output.writeMessage(4, getControlConfig());
      }
      if (chassisConfig_ != null) {
        output.writeMessage(5, getChassisConfig());
      }
      if (planningConfig_ != null) {
        output.writeMessage(6, getPlanningConfig());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigType.CFG_NULL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (gnssConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getGnssConfig());
      }
      if (localizationConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getLocalizationConfig());
      }
      if (controlConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getControlConfig());
      }
      if (chassisConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getChassisConfig());
      }
      if (planningConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getPlanningConfig());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam) obj;

      if (type_ != other.type_) return false;
      if (hasGnssConfig() != other.hasGnssConfig()) return false;
      if (hasGnssConfig()) {
        if (!getGnssConfig()
            .equals(other.getGnssConfig())) return false;
      }
      if (hasLocalizationConfig() != other.hasLocalizationConfig()) return false;
      if (hasLocalizationConfig()) {
        if (!getLocalizationConfig()
            .equals(other.getLocalizationConfig())) return false;
      }
      if (hasControlConfig() != other.hasControlConfig()) return false;
      if (hasControlConfig()) {
        if (!getControlConfig()
            .equals(other.getControlConfig())) return false;
      }
      if (hasChassisConfig() != other.hasChassisConfig()) return false;
      if (hasChassisConfig()) {
        if (!getChassisConfig()
            .equals(other.getChassisConfig())) return false;
      }
      if (hasPlanningConfig() != other.hasPlanningConfig()) return false;
      if (hasPlanningConfig()) {
        if (!getPlanningConfig()
            .equals(other.getPlanningConfig())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (hasGnssConfig()) {
        hash = (37 * hash) + GNSS_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getGnssConfig().hashCode();
      }
      if (hasLocalizationConfig()) {
        hash = (37 * hash) + LOCALIZATION_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getLocalizationConfig().hashCode();
      }
      if (hasControlConfig()) {
        hash = (37 * hash) + CONTROL_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getControlConfig().hashCode();
      }
      if (hasChassisConfig()) {
        hash = (37 * hash) + CHASSIS_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getChassisConfig().hashCode();
      }
      if (hasPlanningConfig()) {
        hash = (37 * hash) + PLANNING_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getPlanningConfig().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ConfigParam_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ConfigParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        if (gnssConfigBuilder_ == null) {
          gnssConfig_ = null;
        } else {
          gnssConfig_ = null;
          gnssConfigBuilder_ = null;
        }
        if (localizationConfigBuilder_ == null) {
          localizationConfig_ = null;
        } else {
          localizationConfig_ = null;
          localizationConfigBuilder_ = null;
        }
        if (controlConfigBuilder_ == null) {
          controlConfig_ = null;
        } else {
          controlConfig_ = null;
          controlConfigBuilder_ = null;
        }
        if (chassisConfigBuilder_ == null) {
          chassisConfig_ = null;
        } else {
          chassisConfig_ = null;
          chassisConfigBuilder_ = null;
        }
        if (planningConfigBuilder_ == null) {
          planningConfig_ = null;
        } else {
          planningConfig_ = null;
          planningConfigBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ConfigParam_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam(this);
        result.type_ = type_;
        if (gnssConfigBuilder_ == null) {
          result.gnssConfig_ = gnssConfig_;
        } else {
          result.gnssConfig_ = gnssConfigBuilder_.build();
        }
        if (localizationConfigBuilder_ == null) {
          result.localizationConfig_ = localizationConfig_;
        } else {
          result.localizationConfig_ = localizationConfigBuilder_.build();
        }
        if (controlConfigBuilder_ == null) {
          result.controlConfig_ = controlConfig_;
        } else {
          result.controlConfig_ = controlConfigBuilder_.build();
        }
        if (chassisConfigBuilder_ == null) {
          result.chassisConfig_ = chassisConfig_;
        } else {
          result.chassisConfig_ = chassisConfigBuilder_.build();
        }
        if (planningConfigBuilder_ == null) {
          result.planningConfig_ = planningConfig_;
        } else {
          result.planningConfig_ = planningConfigBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.hasGnssConfig()) {
          mergeGnssConfig(other.getGnssConfig());
        }
        if (other.hasLocalizationConfig()) {
          mergeLocalizationConfig(other.getLocalizationConfig());
        }
        if (other.hasControlConfig()) {
          mergeControlConfig(other.getControlConfig());
        }
        if (other.hasChassisConfig()) {
          mergeChassisConfig(other.getChassisConfig());
        }
        if (other.hasPlanningConfig()) {
          mergePlanningConfig(other.getPlanningConfig());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigType type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigType getType() {
        @SuppressWarnings("deprecation")
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigType result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigType.valueOf(type_);
        return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigType.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig gnssConfig_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfigOrBuilder> gnssConfigBuilder_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.GnssConfig gnss_config = 2;</code>
       * @return Whether the gnssConfig field is set.
       */
      public boolean hasGnssConfig() {
        return gnssConfigBuilder_ != null || gnssConfig_ != null;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.GnssConfig gnss_config = 2;</code>
       * @return The gnssConfig.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig getGnssConfig() {
        if (gnssConfigBuilder_ == null) {
          return gnssConfig_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig.getDefaultInstance() : gnssConfig_;
        } else {
          return gnssConfigBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.GnssConfig gnss_config = 2;</code>
       */
      public Builder setGnssConfig(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig value) {
        if (gnssConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gnssConfig_ = value;
          onChanged();
        } else {
          gnssConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.GnssConfig gnss_config = 2;</code>
       */
      public Builder setGnssConfig(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig.Builder builderForValue) {
        if (gnssConfigBuilder_ == null) {
          gnssConfig_ = builderForValue.build();
          onChanged();
        } else {
          gnssConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.GnssConfig gnss_config = 2;</code>
       */
      public Builder mergeGnssConfig(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig value) {
        if (gnssConfigBuilder_ == null) {
          if (gnssConfig_ != null) {
            gnssConfig_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig.newBuilder(gnssConfig_).mergeFrom(value).buildPartial();
          } else {
            gnssConfig_ = value;
          }
          onChanged();
        } else {
          gnssConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.GnssConfig gnss_config = 2;</code>
       */
      public Builder clearGnssConfig() {
        if (gnssConfigBuilder_ == null) {
          gnssConfig_ = null;
          onChanged();
        } else {
          gnssConfig_ = null;
          gnssConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.GnssConfig gnss_config = 2;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig.Builder getGnssConfigBuilder() {
        
        onChanged();
        return getGnssConfigFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.GnssConfig gnss_config = 2;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfigOrBuilder getGnssConfigOrBuilder() {
        if (gnssConfigBuilder_ != null) {
          return gnssConfigBuilder_.getMessageOrBuilder();
        } else {
          return gnssConfig_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig.getDefaultInstance() : gnssConfig_;
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.GnssConfig gnss_config = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfigOrBuilder> 
          getGnssConfigFieldBuilder() {
        if (gnssConfigBuilder_ == null) {
          gnssConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfig.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.GnssConfigOrBuilder>(
                  getGnssConfig(),
                  getParentForChildren(),
                  isClean());
          gnssConfig_ = null;
        }
        return gnssConfigBuilder_;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig localizationConfig_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfigOrBuilder> localizationConfigBuilder_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LocalizationConfig localization_config = 3;</code>
       * @return Whether the localizationConfig field is set.
       */
      public boolean hasLocalizationConfig() {
        return localizationConfigBuilder_ != null || localizationConfig_ != null;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LocalizationConfig localization_config = 3;</code>
       * @return The localizationConfig.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig getLocalizationConfig() {
        if (localizationConfigBuilder_ == null) {
          return localizationConfig_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig.getDefaultInstance() : localizationConfig_;
        } else {
          return localizationConfigBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LocalizationConfig localization_config = 3;</code>
       */
      public Builder setLocalizationConfig(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig value) {
        if (localizationConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          localizationConfig_ = value;
          onChanged();
        } else {
          localizationConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LocalizationConfig localization_config = 3;</code>
       */
      public Builder setLocalizationConfig(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig.Builder builderForValue) {
        if (localizationConfigBuilder_ == null) {
          localizationConfig_ = builderForValue.build();
          onChanged();
        } else {
          localizationConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LocalizationConfig localization_config = 3;</code>
       */
      public Builder mergeLocalizationConfig(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig value) {
        if (localizationConfigBuilder_ == null) {
          if (localizationConfig_ != null) {
            localizationConfig_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig.newBuilder(localizationConfig_).mergeFrom(value).buildPartial();
          } else {
            localizationConfig_ = value;
          }
          onChanged();
        } else {
          localizationConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LocalizationConfig localization_config = 3;</code>
       */
      public Builder clearLocalizationConfig() {
        if (localizationConfigBuilder_ == null) {
          localizationConfig_ = null;
          onChanged();
        } else {
          localizationConfig_ = null;
          localizationConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LocalizationConfig localization_config = 3;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig.Builder getLocalizationConfigBuilder() {
        
        onChanged();
        return getLocalizationConfigFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LocalizationConfig localization_config = 3;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfigOrBuilder getLocalizationConfigOrBuilder() {
        if (localizationConfigBuilder_ != null) {
          return localizationConfigBuilder_.getMessageOrBuilder();
        } else {
          return localizationConfig_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig.getDefaultInstance() : localizationConfig_;
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LocalizationConfig localization_config = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfigOrBuilder> 
          getLocalizationConfigFieldBuilder() {
        if (localizationConfigBuilder_ == null) {
          localizationConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfig.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LocalizationConfigOrBuilder>(
                  getLocalizationConfig(),
                  getParentForChildren(),
                  isClean());
          localizationConfig_ = null;
        }
        return localizationConfigBuilder_;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig controlConfig_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfigOrBuilder> controlConfigBuilder_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ControlConfig control_config = 4;</code>
       * @return Whether the controlConfig field is set.
       */
      public boolean hasControlConfig() {
        return controlConfigBuilder_ != null || controlConfig_ != null;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ControlConfig control_config = 4;</code>
       * @return The controlConfig.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig getControlConfig() {
        if (controlConfigBuilder_ == null) {
          return controlConfig_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig.getDefaultInstance() : controlConfig_;
        } else {
          return controlConfigBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ControlConfig control_config = 4;</code>
       */
      public Builder setControlConfig(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig value) {
        if (controlConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          controlConfig_ = value;
          onChanged();
        } else {
          controlConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ControlConfig control_config = 4;</code>
       */
      public Builder setControlConfig(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig.Builder builderForValue) {
        if (controlConfigBuilder_ == null) {
          controlConfig_ = builderForValue.build();
          onChanged();
        } else {
          controlConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ControlConfig control_config = 4;</code>
       */
      public Builder mergeControlConfig(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig value) {
        if (controlConfigBuilder_ == null) {
          if (controlConfig_ != null) {
            controlConfig_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig.newBuilder(controlConfig_).mergeFrom(value).buildPartial();
          } else {
            controlConfig_ = value;
          }
          onChanged();
        } else {
          controlConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ControlConfig control_config = 4;</code>
       */
      public Builder clearControlConfig() {
        if (controlConfigBuilder_ == null) {
          controlConfig_ = null;
          onChanged();
        } else {
          controlConfig_ = null;
          controlConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ControlConfig control_config = 4;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig.Builder getControlConfigBuilder() {
        
        onChanged();
        return getControlConfigFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ControlConfig control_config = 4;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfigOrBuilder getControlConfigOrBuilder() {
        if (controlConfigBuilder_ != null) {
          return controlConfigBuilder_.getMessageOrBuilder();
        } else {
          return controlConfig_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig.getDefaultInstance() : controlConfig_;
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ControlConfig control_config = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfigOrBuilder> 
          getControlConfigFieldBuilder() {
        if (controlConfigBuilder_ == null) {
          controlConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfig.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ControlConfigOrBuilder>(
                  getControlConfig(),
                  getParentForChildren(),
                  isClean());
          controlConfig_ = null;
        }
        return controlConfigBuilder_;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig chassisConfig_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfigOrBuilder> chassisConfigBuilder_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ChassisConfig chassis_config = 5;</code>
       * @return Whether the chassisConfig field is set.
       */
      public boolean hasChassisConfig() {
        return chassisConfigBuilder_ != null || chassisConfig_ != null;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ChassisConfig chassis_config = 5;</code>
       * @return The chassisConfig.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig getChassisConfig() {
        if (chassisConfigBuilder_ == null) {
          return chassisConfig_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig.getDefaultInstance() : chassisConfig_;
        } else {
          return chassisConfigBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ChassisConfig chassis_config = 5;</code>
       */
      public Builder setChassisConfig(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig value) {
        if (chassisConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          chassisConfig_ = value;
          onChanged();
        } else {
          chassisConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ChassisConfig chassis_config = 5;</code>
       */
      public Builder setChassisConfig(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig.Builder builderForValue) {
        if (chassisConfigBuilder_ == null) {
          chassisConfig_ = builderForValue.build();
          onChanged();
        } else {
          chassisConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ChassisConfig chassis_config = 5;</code>
       */
      public Builder mergeChassisConfig(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig value) {
        if (chassisConfigBuilder_ == null) {
          if (chassisConfig_ != null) {
            chassisConfig_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig.newBuilder(chassisConfig_).mergeFrom(value).buildPartial();
          } else {
            chassisConfig_ = value;
          }
          onChanged();
        } else {
          chassisConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ChassisConfig chassis_config = 5;</code>
       */
      public Builder clearChassisConfig() {
        if (chassisConfigBuilder_ == null) {
          chassisConfig_ = null;
          onChanged();
        } else {
          chassisConfig_ = null;
          chassisConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ChassisConfig chassis_config = 5;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig.Builder getChassisConfigBuilder() {
        
        onChanged();
        return getChassisConfigFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ChassisConfig chassis_config = 5;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfigOrBuilder getChassisConfigOrBuilder() {
        if (chassisConfigBuilder_ != null) {
          return chassisConfigBuilder_.getMessageOrBuilder();
        } else {
          return chassisConfig_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig.getDefaultInstance() : chassisConfig_;
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ChassisConfig chassis_config = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfigOrBuilder> 
          getChassisConfigFieldBuilder() {
        if (chassisConfigBuilder_ == null) {
          chassisConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfig.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ChassisConfigOrBuilder>(
                  getChassisConfig(),
                  getParentForChildren(),
                  isClean());
          chassisConfig_ = null;
        }
        return chassisConfigBuilder_;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig planningConfig_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfigOrBuilder> planningConfigBuilder_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PlanningConfig planning_config = 6;</code>
       * @return Whether the planningConfig field is set.
       */
      public boolean hasPlanningConfig() {
        return planningConfigBuilder_ != null || planningConfig_ != null;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PlanningConfig planning_config = 6;</code>
       * @return The planningConfig.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig getPlanningConfig() {
        if (planningConfigBuilder_ == null) {
          return planningConfig_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig.getDefaultInstance() : planningConfig_;
        } else {
          return planningConfigBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PlanningConfig planning_config = 6;</code>
       */
      public Builder setPlanningConfig(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig value) {
        if (planningConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          planningConfig_ = value;
          onChanged();
        } else {
          planningConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PlanningConfig planning_config = 6;</code>
       */
      public Builder setPlanningConfig(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig.Builder builderForValue) {
        if (planningConfigBuilder_ == null) {
          planningConfig_ = builderForValue.build();
          onChanged();
        } else {
          planningConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PlanningConfig planning_config = 6;</code>
       */
      public Builder mergePlanningConfig(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig value) {
        if (planningConfigBuilder_ == null) {
          if (planningConfig_ != null) {
            planningConfig_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig.newBuilder(planningConfig_).mergeFrom(value).buildPartial();
          } else {
            planningConfig_ = value;
          }
          onChanged();
        } else {
          planningConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PlanningConfig planning_config = 6;</code>
       */
      public Builder clearPlanningConfig() {
        if (planningConfigBuilder_ == null) {
          planningConfig_ = null;
          onChanged();
        } else {
          planningConfig_ = null;
          planningConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PlanningConfig planning_config = 6;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig.Builder getPlanningConfigBuilder() {
        
        onChanged();
        return getPlanningConfigFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PlanningConfig planning_config = 6;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfigOrBuilder getPlanningConfigOrBuilder() {
        if (planningConfigBuilder_ != null) {
          return planningConfigBuilder_.getMessageOrBuilder();
        } else {
          return planningConfig_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig.getDefaultInstance() : planningConfig_;
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.PlanningConfig planning_config = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfigOrBuilder> 
          getPlanningConfigFieldBuilder() {
        if (planningConfigBuilder_ == null) {
          planningConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfig.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PlanningConfigOrBuilder>(
                  getPlanningConfig(),
                  getParentForChildren(),
                  isClean());
          planningConfig_ = null;
        }
        return planningConfigBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ConfigParam)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConfigParam>
        PARSER = new com.google.protobuf.AbstractParser<ConfigParam>() {
      @java.lang.Override
      public ConfigParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConfigParam(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConfigParam> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConfigParam> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ConfigParam getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ManualControlOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *例“HY8088”
     * </pre>
     *
     * <code>string vehicleType = 1;</code>
     * @return The vehicleType.
     */
    java.lang.String getVehicleType();
    /**
     * <pre>
     *例“HY8088”
     * </pre>
     *
     * <code>string vehicleType = 1;</code>
     * @return The bytes for vehicleType.
     */
    com.google.protobuf.ByteString
        getVehicleTypeBytes();

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl.infoManualControl manualControlInfo = 2;</code>
     * @return Whether the manualControlInfo field is set.
     */
    boolean hasManualControlInfo();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl.infoManualControl manualControlInfo = 2;</code>
     * @return The manualControlInfo.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl getManualControlInfo();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl.infoManualControl manualControlInfo = 2;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControlOrBuilder getManualControlInfoOrBuilder();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl}
   */
  public static final class ManualControl extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl)
      ManualControlOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ManualControl.newBuilder() to construct.
    private ManualControl(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ManualControl() {
      vehicleType_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ManualControl();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ManualControl(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              vehicleType_ = s;
              break;
            }
            case 18: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl.Builder subBuilder = null;
              if (manualControlInfo_ != null) {
                subBuilder = manualControlInfo_.toBuilder();
              }
              manualControlInfo_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(manualControlInfo_);
                manualControlInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ManualControl_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ManualControl_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.Builder.class);
    }

    public interface infoManualControlOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl.infoManualControl)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       *消息参数ID，参考车云协议皓耘HY8088型收获机远控表
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @return The id.
       */
      int getId();

      /**
       * <pre>
       *消息值
       * </pre>
       *
       * <code>double value = 2;</code>
       * @return The value.
       */
      double getValue();
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl.infoManualControl}
     */
    public static final class infoManualControl extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl.infoManualControl)
        infoManualControlOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use infoManualControl.newBuilder() to construct.
      private infoManualControl(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private infoManualControl() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new infoManualControl();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private infoManualControl(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                id_ = input.readUInt32();
                break;
              }
              case 17: {

                value_ = input.readDouble();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ManualControl_infoManualControl_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ManualControl_infoManualControl_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl.Builder.class);
      }

      public static final int ID_FIELD_NUMBER = 1;
      private int id_;
      /**
       * <pre>
       *消息参数ID，参考车云协议皓耘HY8088型收获机远控表
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }

      public static final int VALUE_FIELD_NUMBER = 2;
      private double value_;
      /**
       * <pre>
       *消息值
       * </pre>
       *
       * <code>double value = 2;</code>
       * @return The value.
       */
      @java.lang.Override
      public double getValue() {
        return value_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (id_ != 0) {
          output.writeUInt32(1, id_);
        }
        if (value_ != 0D) {
          output.writeDouble(2, value_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (id_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, id_);
        }
        if (value_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, value_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl)) {
          return super.equals(obj);
        }
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl) obj;

        if (getId()
            != other.getId()) return false;
        if (java.lang.Double.doubleToLongBits(getValue())
            != java.lang.Double.doubleToLongBits(
                other.getValue())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId();
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getValue()));
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl.infoManualControl}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl.infoManualControl)
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControlOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ManualControl_infoManualControl_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ManualControl_infoManualControl_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl.Builder.class);
        }

        // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          id_ = 0;

          value_ = 0D;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ManualControl_infoManualControl_descriptor;
        }

        @java.lang.Override
        public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl getDefaultInstanceForType() {
          return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl.getDefaultInstance();
        }

        @java.lang.Override
        public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl build() {
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl buildPartial() {
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl(this);
          result.id_ = id_;
          result.value_ = value_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl) {
            return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl other) {
          if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl.getDefaultInstance()) return this;
          if (other.getId() != 0) {
            setId(other.getId());
          }
          if (other.getValue() != 0D) {
            setValue(other.getValue());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int id_ ;
        /**
         * <pre>
         *消息参数ID，参考车云协议皓耘HY8088型收获机远控表
         * </pre>
         *
         * <code>uint32 id = 1;</code>
         * @return The id.
         */
        @java.lang.Override
        public int getId() {
          return id_;
        }
        /**
         * <pre>
         *消息参数ID，参考车云协议皓耘HY8088型收获机远控表
         * </pre>
         *
         * <code>uint32 id = 1;</code>
         * @param value The id to set.
         * @return This builder for chaining.
         */
        public Builder setId(int value) {
          
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *消息参数ID，参考车云协议皓耘HY8088型收获机远控表
         * </pre>
         *
         * <code>uint32 id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearId() {
          
          id_ = 0;
          onChanged();
          return this;
        }

        private double value_ ;
        /**
         * <pre>
         *消息值
         * </pre>
         *
         * <code>double value = 2;</code>
         * @return The value.
         */
        @java.lang.Override
        public double getValue() {
          return value_;
        }
        /**
         * <pre>
         *消息值
         * </pre>
         *
         * <code>double value = 2;</code>
         * @param value The value to set.
         * @return This builder for chaining.
         */
        public Builder setValue(double value) {
          
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *消息值
         * </pre>
         *
         * <code>double value = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearValue() {
          
          value_ = 0D;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl.infoManualControl)
      }

      // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl.infoManualControl)
      private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl();
      }

      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<infoManualControl>
          PARSER = new com.google.protobuf.AbstractParser<infoManualControl>() {
        @java.lang.Override
        public infoManualControl parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new infoManualControl(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<infoManualControl> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<infoManualControl> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int VEHICLETYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object vehicleType_;
    /**
     * <pre>
     *例“HY8088”
     * </pre>
     *
     * <code>string vehicleType = 1;</code>
     * @return The vehicleType.
     */
    @java.lang.Override
    public java.lang.String getVehicleType() {
      java.lang.Object ref = vehicleType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        vehicleType_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *例“HY8088”
     * </pre>
     *
     * <code>string vehicleType = 1;</code>
     * @return The bytes for vehicleType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVehicleTypeBytes() {
      java.lang.Object ref = vehicleType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        vehicleType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MANUALCONTROLINFO_FIELD_NUMBER = 2;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl manualControlInfo_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl.infoManualControl manualControlInfo = 2;</code>
     * @return Whether the manualControlInfo field is set.
     */
    @java.lang.Override
    public boolean hasManualControlInfo() {
      return manualControlInfo_ != null;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl.infoManualControl manualControlInfo = 2;</code>
     * @return The manualControlInfo.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl getManualControlInfo() {
      return manualControlInfo_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl.getDefaultInstance() : manualControlInfo_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl.infoManualControl manualControlInfo = 2;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControlOrBuilder getManualControlInfoOrBuilder() {
      return getManualControlInfo();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getVehicleTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, vehicleType_);
      }
      if (manualControlInfo_ != null) {
        output.writeMessage(2, getManualControlInfo());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getVehicleTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, vehicleType_);
      }
      if (manualControlInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getManualControlInfo());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl) obj;

      if (!getVehicleType()
          .equals(other.getVehicleType())) return false;
      if (hasManualControlInfo() != other.hasManualControlInfo()) return false;
      if (hasManualControlInfo()) {
        if (!getManualControlInfo()
            .equals(other.getManualControlInfo())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VEHICLETYPE_FIELD_NUMBER;
      hash = (53 * hash) + getVehicleType().hashCode();
      if (hasManualControlInfo()) {
        hash = (37 * hash) + MANUALCONTROLINFO_FIELD_NUMBER;
        hash = (53 * hash) + getManualControlInfo().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ManualControl_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ManualControl_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        vehicleType_ = "";

        if (manualControlInfoBuilder_ == null) {
          manualControlInfo_ = null;
        } else {
          manualControlInfo_ = null;
          manualControlInfoBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ManualControl_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl(this);
        result.vehicleType_ = vehicleType_;
        if (manualControlInfoBuilder_ == null) {
          result.manualControlInfo_ = manualControlInfo_;
        } else {
          result.manualControlInfo_ = manualControlInfoBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.getDefaultInstance()) return this;
        if (!other.getVehicleType().isEmpty()) {
          vehicleType_ = other.vehicleType_;
          onChanged();
        }
        if (other.hasManualControlInfo()) {
          mergeManualControlInfo(other.getManualControlInfo());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object vehicleType_ = "";
      /**
       * <pre>
       *例“HY8088”
       * </pre>
       *
       * <code>string vehicleType = 1;</code>
       * @return The vehicleType.
       */
      public java.lang.String getVehicleType() {
        java.lang.Object ref = vehicleType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          vehicleType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *例“HY8088”
       * </pre>
       *
       * <code>string vehicleType = 1;</code>
       * @return The bytes for vehicleType.
       */
      public com.google.protobuf.ByteString
          getVehicleTypeBytes() {
        java.lang.Object ref = vehicleType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          vehicleType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *例“HY8088”
       * </pre>
       *
       * <code>string vehicleType = 1;</code>
       * @param value The vehicleType to set.
       * @return This builder for chaining.
       */
      public Builder setVehicleType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        vehicleType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *例“HY8088”
       * </pre>
       *
       * <code>string vehicleType = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearVehicleType() {
        
        vehicleType_ = getDefaultInstance().getVehicleType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *例“HY8088”
       * </pre>
       *
       * <code>string vehicleType = 1;</code>
       * @param value The bytes for vehicleType to set.
       * @return This builder for chaining.
       */
      public Builder setVehicleTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        vehicleType_ = value;
        onChanged();
        return this;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl manualControlInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControlOrBuilder> manualControlInfoBuilder_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl.infoManualControl manualControlInfo = 2;</code>
       * @return Whether the manualControlInfo field is set.
       */
      public boolean hasManualControlInfo() {
        return manualControlInfoBuilder_ != null || manualControlInfo_ != null;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl.infoManualControl manualControlInfo = 2;</code>
       * @return The manualControlInfo.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl getManualControlInfo() {
        if (manualControlInfoBuilder_ == null) {
          return manualControlInfo_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl.getDefaultInstance() : manualControlInfo_;
        } else {
          return manualControlInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl.infoManualControl manualControlInfo = 2;</code>
       */
      public Builder setManualControlInfo(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl value) {
        if (manualControlInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          manualControlInfo_ = value;
          onChanged();
        } else {
          manualControlInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl.infoManualControl manualControlInfo = 2;</code>
       */
      public Builder setManualControlInfo(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl.Builder builderForValue) {
        if (manualControlInfoBuilder_ == null) {
          manualControlInfo_ = builderForValue.build();
          onChanged();
        } else {
          manualControlInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl.infoManualControl manualControlInfo = 2;</code>
       */
      public Builder mergeManualControlInfo(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl value) {
        if (manualControlInfoBuilder_ == null) {
          if (manualControlInfo_ != null) {
            manualControlInfo_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl.newBuilder(manualControlInfo_).mergeFrom(value).buildPartial();
          } else {
            manualControlInfo_ = value;
          }
          onChanged();
        } else {
          manualControlInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl.infoManualControl manualControlInfo = 2;</code>
       */
      public Builder clearManualControlInfo() {
        if (manualControlInfoBuilder_ == null) {
          manualControlInfo_ = null;
          onChanged();
        } else {
          manualControlInfo_ = null;
          manualControlInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl.infoManualControl manualControlInfo = 2;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl.Builder getManualControlInfoBuilder() {
        
        onChanged();
        return getManualControlInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl.infoManualControl manualControlInfo = 2;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControlOrBuilder getManualControlInfoOrBuilder() {
        if (manualControlInfoBuilder_ != null) {
          return manualControlInfoBuilder_.getMessageOrBuilder();
        } else {
          return manualControlInfo_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl.getDefaultInstance() : manualControlInfo_;
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl.infoManualControl manualControlInfo = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControlOrBuilder> 
          getManualControlInfoFieldBuilder() {
        if (manualControlInfoBuilder_ == null) {
          manualControlInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControl.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl.infoManualControlOrBuilder>(
                  getManualControlInfo(),
                  getParentForChildren(),
                  isClean());
          manualControlInfo_ = null;
        }
        return manualControlInfoBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControl)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ManualControl>
        PARSER = new com.google.protobuf.AbstractParser<ManualControl>() {
      @java.lang.Override
      public ManualControl parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ManualControl(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ManualControl> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ManualControl> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControl getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CalibrationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Calibration)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationType type = 1;</code>
     * @return The type.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationType getType();

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 2;</code>
     * @return Whether the routeParam field is set.
     */
    boolean hasRouteParam();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 2;</code>
     * @return The routeParam.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam getRouteParam();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 2;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamOrBuilder getRouteParamOrBuilder();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Calibration}
   */
  public static final class Calibration extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Calibration)
      CalibrationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Calibration.newBuilder() to construct.
    private Calibration(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Calibration() {
      type_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Calibration();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Calibration(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.Builder subBuilder = null;
              if (routeParam_ != null) {
                subBuilder = routeParam_.toBuilder();
              }
              routeParam_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(routeParam_);
                routeParam_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Calibration_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Calibration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationType getType() {
      @SuppressWarnings("deprecation")
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationType result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationType.valueOf(type_);
      return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationType.UNRECOGNIZED : result;
    }

    public static final int ROUTE_PARAM_FIELD_NUMBER = 2;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam routeParam_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 2;</code>
     * @return Whether the routeParam field is set.
     */
    @java.lang.Override
    public boolean hasRouteParam() {
      return routeParam_ != null;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 2;</code>
     * @return The routeParam.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam getRouteParam() {
      return routeParam_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.getDefaultInstance() : routeParam_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 2;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamOrBuilder getRouteParamOrBuilder() {
      return getRouteParam();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationType.TYPE_NULL.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (routeParam_ != null) {
        output.writeMessage(2, getRouteParam());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationType.TYPE_NULL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (routeParam_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getRouteParam());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration) obj;

      if (type_ != other.type_) return false;
      if (hasRouteParam() != other.hasRouteParam()) return false;
      if (hasRouteParam()) {
        if (!getRouteParam()
            .equals(other.getRouteParam())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (hasRouteParam()) {
        hash = (37 * hash) + ROUTE_PARAM_FIELD_NUMBER;
        hash = (53 * hash) + getRouteParam().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Calibration}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Calibration)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Calibration_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Calibration_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        if (routeParamBuilder_ == null) {
          routeParam_ = null;
        } else {
          routeParam_ = null;
          routeParamBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Calibration_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration(this);
        result.type_ = type_;
        if (routeParamBuilder_ == null) {
          result.routeParam_ = routeParam_;
        } else {
          result.routeParam_ = routeParamBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.hasRouteParam()) {
          mergeRouteParam(other.getRouteParam());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationType type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationType getType() {
        @SuppressWarnings("deprecation")
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationType result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationType.valueOf(type_);
        return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationType.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam routeParam_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamOrBuilder> routeParamBuilder_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 2;</code>
       * @return Whether the routeParam field is set.
       */
      public boolean hasRouteParam() {
        return routeParamBuilder_ != null || routeParam_ != null;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 2;</code>
       * @return The routeParam.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam getRouteParam() {
        if (routeParamBuilder_ == null) {
          return routeParam_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.getDefaultInstance() : routeParam_;
        } else {
          return routeParamBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 2;</code>
       */
      public Builder setRouteParam(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam value) {
        if (routeParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          routeParam_ = value;
          onChanged();
        } else {
          routeParamBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 2;</code>
       */
      public Builder setRouteParam(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.Builder builderForValue) {
        if (routeParamBuilder_ == null) {
          routeParam_ = builderForValue.build();
          onChanged();
        } else {
          routeParamBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 2;</code>
       */
      public Builder mergeRouteParam(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam value) {
        if (routeParamBuilder_ == null) {
          if (routeParam_ != null) {
            routeParam_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.newBuilder(routeParam_).mergeFrom(value).buildPartial();
          } else {
            routeParam_ = value;
          }
          onChanged();
        } else {
          routeParamBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 2;</code>
       */
      public Builder clearRouteParam() {
        if (routeParamBuilder_ == null) {
          routeParam_ = null;
          onChanged();
        } else {
          routeParam_ = null;
          routeParamBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 2;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.Builder getRouteParamBuilder() {
        
        onChanged();
        return getRouteParamFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 2;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamOrBuilder getRouteParamOrBuilder() {
        if (routeParamBuilder_ != null) {
          return routeParamBuilder_.getMessageOrBuilder();
        } else {
          return routeParam_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.getDefaultInstance() : routeParam_;
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamOrBuilder> 
          getRouteParamFieldBuilder() {
        if (routeParamBuilder_ == null) {
          routeParamBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamOrBuilder>(
                  getRouteParam(),
                  getParentForChildren(),
                  isClean());
          routeParam_ = null;
        }
        return routeParamBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Calibration)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Calibration)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Calibration>
        PARSER = new com.google.protobuf.AbstractParser<Calibration>() {
      @java.lang.Override
      public Calibration parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Calibration(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Calibration> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Calibration> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Calibration getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LastTaskOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTask)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header task_header = 1;</code>
     * @return Whether the taskHeader field is set.
     */
    boolean hasTaskHeader();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header task_header = 1;</code>
     * @return The taskHeader.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header getTaskHeader();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header task_header = 1;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HeaderOrBuilder getTaskHeaderOrBuilder();

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 2;</code>
     * @return Whether the routeParam field is set.
     */
    boolean hasRouteParam();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 2;</code>
     * @return The routeParam.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam getRouteParam();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 2;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamOrBuilder getRouteParamOrBuilder();

    /**
     * <pre>
     *作业路径标号  机具细化处理
     * </pre>
     *
     * <code>int32 last_work_path_num = 3;</code>
     * @return The lastWorkPathNum.
     */
    int getLastWorkPathNum();

    /**
     * <pre>
     *最后一次作业点位置 
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose last_pose = 4;</code>
     * @return Whether the lastPose field is set.
     */
    boolean hasLastPose();
    /**
     * <pre>
     *最后一次作业点位置 
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose last_pose = 4;</code>
     * @return The lastPose.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose getLastPose();
    /**
     * <pre>
     *最后一次作业点位置 
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose last_pose = 4;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PoseOrBuilder getLastPoseOrBuilder();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTask}
   */
  public static final class LastTask extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTask)
      LastTaskOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LastTask.newBuilder() to construct.
    private LastTask(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LastTask() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LastTask();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LastTask(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.Builder subBuilder = null;
              if (taskHeader_ != null) {
                subBuilder = taskHeader_.toBuilder();
              }
              taskHeader_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(taskHeader_);
                taskHeader_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.Builder subBuilder = null;
              if (routeParam_ != null) {
                subBuilder = routeParam_.toBuilder();
              }
              routeParam_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(routeParam_);
                routeParam_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              lastWorkPathNum_ = input.readInt32();
              break;
            }
            case 34: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.Builder subBuilder = null;
              if (lastPose_ != null) {
                subBuilder = lastPose_.toBuilder();
              }
              lastPose_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(lastPose_);
                lastPose_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_LastTask_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_LastTask_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask.Builder.class);
    }

    public static final int TASK_HEADER_FIELD_NUMBER = 1;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header taskHeader_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header task_header = 1;</code>
     * @return Whether the taskHeader field is set.
     */
    @java.lang.Override
    public boolean hasTaskHeader() {
      return taskHeader_ != null;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header task_header = 1;</code>
     * @return The taskHeader.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header getTaskHeader() {
      return taskHeader_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.getDefaultInstance() : taskHeader_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header task_header = 1;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HeaderOrBuilder getTaskHeaderOrBuilder() {
      return getTaskHeader();
    }

    public static final int ROUTE_PARAM_FIELD_NUMBER = 2;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam routeParam_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 2;</code>
     * @return Whether the routeParam field is set.
     */
    @java.lang.Override
    public boolean hasRouteParam() {
      return routeParam_ != null;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 2;</code>
     * @return The routeParam.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam getRouteParam() {
      return routeParam_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.getDefaultInstance() : routeParam_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 2;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamOrBuilder getRouteParamOrBuilder() {
      return getRouteParam();
    }

    public static final int LAST_WORK_PATH_NUM_FIELD_NUMBER = 3;
    private int lastWorkPathNum_;
    /**
     * <pre>
     *作业路径标号  机具细化处理
     * </pre>
     *
     * <code>int32 last_work_path_num = 3;</code>
     * @return The lastWorkPathNum.
     */
    @java.lang.Override
    public int getLastWorkPathNum() {
      return lastWorkPathNum_;
    }

    public static final int LAST_POSE_FIELD_NUMBER = 4;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose lastPose_;
    /**
     * <pre>
     *最后一次作业点位置 
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose last_pose = 4;</code>
     * @return Whether the lastPose field is set.
     */
    @java.lang.Override
    public boolean hasLastPose() {
      return lastPose_ != null;
    }
    /**
     * <pre>
     *最后一次作业点位置 
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose last_pose = 4;</code>
     * @return The lastPose.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose getLastPose() {
      return lastPose_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.getDefaultInstance() : lastPose_;
    }
    /**
     * <pre>
     *最后一次作业点位置 
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose last_pose = 4;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PoseOrBuilder getLastPoseOrBuilder() {
      return getLastPose();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (taskHeader_ != null) {
        output.writeMessage(1, getTaskHeader());
      }
      if (routeParam_ != null) {
        output.writeMessage(2, getRouteParam());
      }
      if (lastWorkPathNum_ != 0) {
        output.writeInt32(3, lastWorkPathNum_);
      }
      if (lastPose_ != null) {
        output.writeMessage(4, getLastPose());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (taskHeader_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTaskHeader());
      }
      if (routeParam_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getRouteParam());
      }
      if (lastWorkPathNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, lastWorkPathNum_);
      }
      if (lastPose_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getLastPose());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask) obj;

      if (hasTaskHeader() != other.hasTaskHeader()) return false;
      if (hasTaskHeader()) {
        if (!getTaskHeader()
            .equals(other.getTaskHeader())) return false;
      }
      if (hasRouteParam() != other.hasRouteParam()) return false;
      if (hasRouteParam()) {
        if (!getRouteParam()
            .equals(other.getRouteParam())) return false;
      }
      if (getLastWorkPathNum()
          != other.getLastWorkPathNum()) return false;
      if (hasLastPose() != other.hasLastPose()) return false;
      if (hasLastPose()) {
        if (!getLastPose()
            .equals(other.getLastPose())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTaskHeader()) {
        hash = (37 * hash) + TASK_HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getTaskHeader().hashCode();
      }
      if (hasRouteParam()) {
        hash = (37 * hash) + ROUTE_PARAM_FIELD_NUMBER;
        hash = (53 * hash) + getRouteParam().hashCode();
      }
      hash = (37 * hash) + LAST_WORK_PATH_NUM_FIELD_NUMBER;
      hash = (53 * hash) + getLastWorkPathNum();
      if (hasLastPose()) {
        hash = (37 * hash) + LAST_POSE_FIELD_NUMBER;
        hash = (53 * hash) + getLastPose().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTask}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTask)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTaskOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_LastTask_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_LastTask_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (taskHeaderBuilder_ == null) {
          taskHeader_ = null;
        } else {
          taskHeader_ = null;
          taskHeaderBuilder_ = null;
        }
        if (routeParamBuilder_ == null) {
          routeParam_ = null;
        } else {
          routeParam_ = null;
          routeParamBuilder_ = null;
        }
        lastWorkPathNum_ = 0;

        if (lastPoseBuilder_ == null) {
          lastPose_ = null;
        } else {
          lastPose_ = null;
          lastPoseBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_LastTask_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask(this);
        if (taskHeaderBuilder_ == null) {
          result.taskHeader_ = taskHeader_;
        } else {
          result.taskHeader_ = taskHeaderBuilder_.build();
        }
        if (routeParamBuilder_ == null) {
          result.routeParam_ = routeParam_;
        } else {
          result.routeParam_ = routeParamBuilder_.build();
        }
        result.lastWorkPathNum_ = lastWorkPathNum_;
        if (lastPoseBuilder_ == null) {
          result.lastPose_ = lastPose_;
        } else {
          result.lastPose_ = lastPoseBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask.getDefaultInstance()) return this;
        if (other.hasTaskHeader()) {
          mergeTaskHeader(other.getTaskHeader());
        }
        if (other.hasRouteParam()) {
          mergeRouteParam(other.getRouteParam());
        }
        if (other.getLastWorkPathNum() != 0) {
          setLastWorkPathNum(other.getLastWorkPathNum());
        }
        if (other.hasLastPose()) {
          mergeLastPose(other.getLastPose());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header taskHeader_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HeaderOrBuilder> taskHeaderBuilder_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header task_header = 1;</code>
       * @return Whether the taskHeader field is set.
       */
      public boolean hasTaskHeader() {
        return taskHeaderBuilder_ != null || taskHeader_ != null;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header task_header = 1;</code>
       * @return The taskHeader.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header getTaskHeader() {
        if (taskHeaderBuilder_ == null) {
          return taskHeader_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.getDefaultInstance() : taskHeader_;
        } else {
          return taskHeaderBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header task_header = 1;</code>
       */
      public Builder setTaskHeader(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header value) {
        if (taskHeaderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          taskHeader_ = value;
          onChanged();
        } else {
          taskHeaderBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header task_header = 1;</code>
       */
      public Builder setTaskHeader(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.Builder builderForValue) {
        if (taskHeaderBuilder_ == null) {
          taskHeader_ = builderForValue.build();
          onChanged();
        } else {
          taskHeaderBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header task_header = 1;</code>
       */
      public Builder mergeTaskHeader(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header value) {
        if (taskHeaderBuilder_ == null) {
          if (taskHeader_ != null) {
            taskHeader_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.newBuilder(taskHeader_).mergeFrom(value).buildPartial();
          } else {
            taskHeader_ = value;
          }
          onChanged();
        } else {
          taskHeaderBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header task_header = 1;</code>
       */
      public Builder clearTaskHeader() {
        if (taskHeaderBuilder_ == null) {
          taskHeader_ = null;
          onChanged();
        } else {
          taskHeader_ = null;
          taskHeaderBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header task_header = 1;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.Builder getTaskHeaderBuilder() {
        
        onChanged();
        return getTaskHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header task_header = 1;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HeaderOrBuilder getTaskHeaderOrBuilder() {
        if (taskHeaderBuilder_ != null) {
          return taskHeaderBuilder_.getMessageOrBuilder();
        } else {
          return taskHeader_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.getDefaultInstance() : taskHeader_;
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Header task_header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HeaderOrBuilder> 
          getTaskHeaderFieldBuilder() {
        if (taskHeaderBuilder_ == null) {
          taskHeaderBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Header.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HeaderOrBuilder>(
                  getTaskHeader(),
                  getParentForChildren(),
                  isClean());
          taskHeader_ = null;
        }
        return taskHeaderBuilder_;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam routeParam_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamOrBuilder> routeParamBuilder_;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 2;</code>
       * @return Whether the routeParam field is set.
       */
      public boolean hasRouteParam() {
        return routeParamBuilder_ != null || routeParam_ != null;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 2;</code>
       * @return The routeParam.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam getRouteParam() {
        if (routeParamBuilder_ == null) {
          return routeParam_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.getDefaultInstance() : routeParam_;
        } else {
          return routeParamBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 2;</code>
       */
      public Builder setRouteParam(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam value) {
        if (routeParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          routeParam_ = value;
          onChanged();
        } else {
          routeParamBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 2;</code>
       */
      public Builder setRouteParam(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.Builder builderForValue) {
        if (routeParamBuilder_ == null) {
          routeParam_ = builderForValue.build();
          onChanged();
        } else {
          routeParamBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 2;</code>
       */
      public Builder mergeRouteParam(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam value) {
        if (routeParamBuilder_ == null) {
          if (routeParam_ != null) {
            routeParam_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.newBuilder(routeParam_).mergeFrom(value).buildPartial();
          } else {
            routeParam_ = value;
          }
          onChanged();
        } else {
          routeParamBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 2;</code>
       */
      public Builder clearRouteParam() {
        if (routeParamBuilder_ == null) {
          routeParam_ = null;
          onChanged();
        } else {
          routeParam_ = null;
          routeParamBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 2;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.Builder getRouteParamBuilder() {
        
        onChanged();
        return getRouteParamFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 2;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamOrBuilder getRouteParamOrBuilder() {
        if (routeParamBuilder_ != null) {
          return routeParamBuilder_.getMessageOrBuilder();
        } else {
          return routeParam_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.getDefaultInstance() : routeParam_;
        }
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RouteParam route_param = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamOrBuilder> 
          getRouteParamFieldBuilder() {
        if (routeParamBuilder_ == null) {
          routeParamBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParam.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.RouteParamOrBuilder>(
                  getRouteParam(),
                  getParentForChildren(),
                  isClean());
          routeParam_ = null;
        }
        return routeParamBuilder_;
      }

      private int lastWorkPathNum_ ;
      /**
       * <pre>
       *作业路径标号  机具细化处理
       * </pre>
       *
       * <code>int32 last_work_path_num = 3;</code>
       * @return The lastWorkPathNum.
       */
      @java.lang.Override
      public int getLastWorkPathNum() {
        return lastWorkPathNum_;
      }
      /**
       * <pre>
       *作业路径标号  机具细化处理
       * </pre>
       *
       * <code>int32 last_work_path_num = 3;</code>
       * @param value The lastWorkPathNum to set.
       * @return This builder for chaining.
       */
      public Builder setLastWorkPathNum(int value) {
        
        lastWorkPathNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *作业路径标号  机具细化处理
       * </pre>
       *
       * <code>int32 last_work_path_num = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastWorkPathNum() {
        
        lastWorkPathNum_ = 0;
        onChanged();
        return this;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose lastPose_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PoseOrBuilder> lastPoseBuilder_;
      /**
       * <pre>
       *最后一次作业点位置 
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose last_pose = 4;</code>
       * @return Whether the lastPose field is set.
       */
      public boolean hasLastPose() {
        return lastPoseBuilder_ != null || lastPose_ != null;
      }
      /**
       * <pre>
       *最后一次作业点位置 
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose last_pose = 4;</code>
       * @return The lastPose.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose getLastPose() {
        if (lastPoseBuilder_ == null) {
          return lastPose_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.getDefaultInstance() : lastPose_;
        } else {
          return lastPoseBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *最后一次作业点位置 
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose last_pose = 4;</code>
       */
      public Builder setLastPose(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose value) {
        if (lastPoseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lastPose_ = value;
          onChanged();
        } else {
          lastPoseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *最后一次作业点位置 
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose last_pose = 4;</code>
       */
      public Builder setLastPose(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.Builder builderForValue) {
        if (lastPoseBuilder_ == null) {
          lastPose_ = builderForValue.build();
          onChanged();
        } else {
          lastPoseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *最后一次作业点位置 
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose last_pose = 4;</code>
       */
      public Builder mergeLastPose(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose value) {
        if (lastPoseBuilder_ == null) {
          if (lastPose_ != null) {
            lastPose_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.newBuilder(lastPose_).mergeFrom(value).buildPartial();
          } else {
            lastPose_ = value;
          }
          onChanged();
        } else {
          lastPoseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *最后一次作业点位置 
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose last_pose = 4;</code>
       */
      public Builder clearLastPose() {
        if (lastPoseBuilder_ == null) {
          lastPose_ = null;
          onChanged();
        } else {
          lastPose_ = null;
          lastPoseBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *最后一次作业点位置 
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose last_pose = 4;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.Builder getLastPoseBuilder() {
        
        onChanged();
        return getLastPoseFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *最后一次作业点位置 
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose last_pose = 4;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PoseOrBuilder getLastPoseOrBuilder() {
        if (lastPoseBuilder_ != null) {
          return lastPoseBuilder_.getMessageOrBuilder();
        } else {
          return lastPose_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.getDefaultInstance() : lastPose_;
        }
      }
      /**
       * <pre>
       *最后一次作业点位置 
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose last_pose = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PoseOrBuilder> 
          getLastPoseFieldBuilder() {
        if (lastPoseBuilder_ == null) {
          lastPoseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.Pose.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.PoseOrBuilder>(
                  getLastPose(),
                  getParentForChildren(),
                  isClean());
          lastPose_ = null;
        }
        return lastPoseBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTask)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LastTask)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LastTask>
        PARSER = new com.google.protobuf.AbstractParser<LastTask>() {
      @java.lang.Override
      public LastTask parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LastTask(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LastTask> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LastTask> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.LastTask getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TboxParameterSetResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSetResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *0:无意义 1：成功 2：失败
     * </pre>
     *
     * <code>uint32 result = 1;</code>
     * @return The result.
     */
    int getResult();

    /**
     * <pre>
     *失败的错误码
     * </pre>
     *
     * <code>int32 code = 2;</code>
     * @return The code.
     */
    int getCode();
  }
  /**
   * <pre>
   *****************************************CMD VCTL RESPONSE START***************************************************
   * </pre>
   *
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSetResult}
   */
  public static final class TboxParameterSetResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSetResult)
      TboxParameterSetResultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TboxParameterSetResult.newBuilder() to construct.
    private TboxParameterSetResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TboxParameterSetResult() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TboxParameterSetResult();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TboxParameterSetResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              result_ = input.readUInt32();
              break;
            }
            case 16: {

              code_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterSetResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterSetResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult.Builder.class);
    }

    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <pre>
     *0:无意义 1：成功 2：失败
     * </pre>
     *
     * <code>uint32 result = 1;</code>
     * @return The result.
     */
    @java.lang.Override
    public int getResult() {
      return result_;
    }

    public static final int CODE_FIELD_NUMBER = 2;
    private int code_;
    /**
     * <pre>
     *失败的错误码
     * </pre>
     *
     * <code>int32 code = 2;</code>
     * @return The code.
     */
    @java.lang.Override
    public int getCode() {
      return code_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (result_ != 0) {
        output.writeUInt32(1, result_);
      }
      if (code_ != 0) {
        output.writeInt32(2, code_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (result_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, result_);
      }
      if (code_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, code_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult) obj;

      if (getResult()
          != other.getResult()) return false;
      if (getCode()
          != other.getCode()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RESULT_FIELD_NUMBER;
      hash = (53 * hash) + getResult();
      hash = (37 * hash) + CODE_FIELD_NUMBER;
      hash = (53 * hash) + getCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *****************************************CMD VCTL RESPONSE START***************************************************
     * </pre>
     *
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSetResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSetResult)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterSetResult_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterSetResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        result_ = 0;

        code_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterSetResult_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult(this);
        result.result_ = result_;
        result.code_ = code_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult.getDefaultInstance()) return this;
        if (other.getResult() != 0) {
          setResult(other.getResult());
        }
        if (other.getCode() != 0) {
          setCode(other.getCode());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int result_ ;
      /**
       * <pre>
       *0:无意义 1：成功 2：失败
       * </pre>
       *
       * <code>uint32 result = 1;</code>
       * @return The result.
       */
      @java.lang.Override
      public int getResult() {
        return result_;
      }
      /**
       * <pre>
       *0:无意义 1：成功 2：失败
       * </pre>
       *
       * <code>uint32 result = 1;</code>
       * @param value The result to set.
       * @return This builder for chaining.
       */
      public Builder setResult(int value) {
        
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *0:无意义 1：成功 2：失败
       * </pre>
       *
       * <code>uint32 result = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearResult() {
        
        result_ = 0;
        onChanged();
        return this;
      }

      private int code_ ;
      /**
       * <pre>
       *失败的错误码
       * </pre>
       *
       * <code>int32 code = 2;</code>
       * @return The code.
       */
      @java.lang.Override
      public int getCode() {
        return code_;
      }
      /**
       * <pre>
       *失败的错误码
       * </pre>
       *
       * <code>int32 code = 2;</code>
       * @param value The code to set.
       * @return This builder for chaining.
       */
      public Builder setCode(int value) {
        
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *失败的错误码
       * </pre>
       *
       * <code>int32 code = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCode() {
        
        code_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSetResult)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterSetResult)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TboxParameterSetResult>
        PARSER = new com.google.protobuf.AbstractParser<TboxParameterSetResult>() {
      @java.lang.Override
      public TboxParameterSetResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TboxParameterSetResult(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TboxParameterSetResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TboxParameterSetResult> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterSetResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TboxParameterGetResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGetResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *参数ID
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <pre>
     *参数值
     * </pre>
     *
     * <code>string value = 2;</code>
     * @return The value.
     */
    java.lang.String getValue();
    /**
     * <pre>
     *参数值
     * </pre>
     *
     * <code>string value = 2;</code>
     * @return The bytes for value.
     */
    com.google.protobuf.ByteString
        getValueBytes();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGetResponse}
   */
  public static final class TboxParameterGetResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGetResponse)
      TboxParameterGetResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TboxParameterGetResponse.newBuilder() to construct.
    private TboxParameterGetResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TboxParameterGetResponse() {
      value_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TboxParameterGetResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TboxParameterGetResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readUInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              value_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterGetResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterGetResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <pre>
     *参数ID
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private volatile java.lang.Object value_;
    /**
     * <pre>
     *参数值
     * </pre>
     *
     * <code>string value = 2;</code>
     * @return The value.
     */
    @java.lang.Override
    public java.lang.String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        value_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *参数值
     * </pre>
     *
     * <code>string value = 2;</code>
     * @return The bytes for value.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeUInt32(1, id_);
      }
      if (!getValueBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (!getValueBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse) obj;

      if (getId()
          != other.getId()) return false;
      if (!getValue()
          .equals(other.getValue())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGetResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGetResponse)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterGetResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterGetResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = 0;

        value_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterGetResponse_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse(this);
        result.id_ = id_;
        result.value_ = value_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (!other.getValue().isEmpty()) {
          value_ = other.value_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int id_ ;
      /**
       * <pre>
       *参数ID
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       *参数ID
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *参数ID
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object value_ = "";
      /**
       * <pre>
       *参数值
       * </pre>
       *
       * <code>string value = 2;</code>
       * @return The value.
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *参数值
       * </pre>
       *
       * <code>string value = 2;</code>
       * @return The bytes for value.
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *参数值
       * </pre>
       *
       * <code>string value = 2;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *参数值
       * </pre>
       *
       * <code>string value = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *参数值
       * </pre>
       *
       * <code>string value = 2;</code>
       * @param value The bytes for value to set.
       * @return This builder for chaining.
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        value_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGetResponse)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TboxParameterGetResponse)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TboxParameterGetResponse>
        PARSER = new com.google.protobuf.AbstractParser<TboxParameterGetResponse>() {
      @java.lang.Override
      public TboxParameterGetResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TboxParameterGetResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TboxParameterGetResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TboxParameterGetResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TboxParameterGetResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AutoPilotResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutoPilotResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool result = 1;</code>
     * @return The result.
     */
    boolean getResult();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutoPilotResponse}
   */
  public static final class AutoPilotResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutoPilotResponse)
      AutoPilotResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AutoPilotResponse.newBuilder() to construct.
    private AutoPilotResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AutoPilotResponse() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AutoPilotResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AutoPilotResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              result_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_AutoPilotResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_AutoPilotResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse.Builder.class);
    }

    public static final int RESULT_FIELD_NUMBER = 1;
    private boolean result_;
    /**
     * <code>bool result = 1;</code>
     * @return The result.
     */
    @java.lang.Override
    public boolean getResult() {
      return result_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (result_ != false) {
        output.writeBool(1, result_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (result_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, result_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse) obj;

      if (getResult()
          != other.getResult()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RESULT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getResult());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutoPilotResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutoPilotResponse)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_AutoPilotResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_AutoPilotResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        result_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_AutoPilotResponse_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse(this);
        result.result_ = result_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse.getDefaultInstance()) return this;
        if (other.getResult() != false) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean result_ ;
      /**
       * <code>bool result = 1;</code>
       * @return The result.
       */
      @java.lang.Override
      public boolean getResult() {
        return result_;
      }
      /**
       * <code>bool result = 1;</code>
       * @param value The result to set.
       * @return This builder for chaining.
       */
      public Builder setResult(boolean value) {
        
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool result = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearResult() {
        
        result_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutoPilotResponse)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.AutoPilotResponse)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AutoPilotResponse>
        PARSER = new com.google.protobuf.AbstractParser<AutoPilotResponse>() {
      @java.lang.Override
      public AutoPilotResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AutoPilotResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AutoPilotResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AutoPilotResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.AutoPilotResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WorkModeResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkModeResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool result = 1;</code>
     * @return The result.
     */
    boolean getResult();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkModeResponse}
   */
  public static final class WorkModeResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkModeResponse)
      WorkModeResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WorkModeResponse.newBuilder() to construct.
    private WorkModeResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WorkModeResponse() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new WorkModeResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private WorkModeResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              result_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_WorkModeResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_WorkModeResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse.Builder.class);
    }

    public static final int RESULT_FIELD_NUMBER = 1;
    private boolean result_;
    /**
     * <code>bool result = 1;</code>
     * @return The result.
     */
    @java.lang.Override
    public boolean getResult() {
      return result_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (result_ != false) {
        output.writeBool(1, result_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (result_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, result_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse) obj;

      if (getResult()
          != other.getResult()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RESULT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getResult());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkModeResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkModeResponse)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_WorkModeResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_WorkModeResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        result_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_WorkModeResponse_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse(this);
        result.result_ = result_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse.getDefaultInstance()) return this;
        if (other.getResult() != false) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean result_ ;
      /**
       * <code>bool result = 1;</code>
       * @return The result.
       */
      @java.lang.Override
      public boolean getResult() {
        return result_;
      }
      /**
       * <code>bool result = 1;</code>
       * @param value The result to set.
       * @return This builder for chaining.
       */
      public Builder setResult(boolean value) {
        
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool result = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearResult() {
        
        result_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkModeResponse)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.WorkModeResponse)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WorkModeResponse>
        PARSER = new com.google.protobuf.AbstractParser<WorkModeResponse>() {
      @java.lang.Override
      public WorkModeResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WorkModeResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WorkModeResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WorkModeResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.WorkModeResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HmiResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool result = 1;</code>
     * @return The result.
     */
    boolean getResult();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiResponse}
   */
  public static final class HmiResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiResponse)
      HmiResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use HmiResponse.newBuilder() to construct.
    private HmiResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HmiResponse() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new HmiResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HmiResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              result_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_HmiResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_HmiResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse.Builder.class);
    }

    public static final int RESULT_FIELD_NUMBER = 1;
    private boolean result_;
    /**
     * <code>bool result = 1;</code>
     * @return The result.
     */
    @java.lang.Override
    public boolean getResult() {
      return result_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (result_ != false) {
        output.writeBool(1, result_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (result_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, result_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse) obj;

      if (getResult()
          != other.getResult()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RESULT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getResult());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiResponse)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_HmiResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_HmiResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        result_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_HmiResponse_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse(this);
        result.result_ = result_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse.getDefaultInstance()) return this;
        if (other.getResult() != false) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean result_ ;
      /**
       * <code>bool result = 1;</code>
       * @return The result.
       */
      @java.lang.Override
      public boolean getResult() {
        return result_;
      }
      /**
       * <code>bool result = 1;</code>
       * @param value The result to set.
       * @return This builder for chaining.
       */
      public Builder setResult(boolean value) {
        
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool result = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearResult() {
        
        result_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiResponse)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.HmiResponse)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HmiResponse>
        PARSER = new com.google.protobuf.AbstractParser<HmiResponse>() {
      @java.lang.Override
      public HmiResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HmiResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HmiResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HmiResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.HmiResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CancelTaskResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool result = 1;</code>
     * @return The result.
     */
    boolean getResult();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskResponse}
   */
  public static final class CancelTaskResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskResponse)
      CancelTaskResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CancelTaskResponse.newBuilder() to construct.
    private CancelTaskResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CancelTaskResponse() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CancelTaskResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CancelTaskResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              result_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_CancelTaskResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_CancelTaskResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse.Builder.class);
    }

    public static final int RESULT_FIELD_NUMBER = 1;
    private boolean result_;
    /**
     * <code>bool result = 1;</code>
     * @return The result.
     */
    @java.lang.Override
    public boolean getResult() {
      return result_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (result_ != false) {
        output.writeBool(1, result_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (result_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, result_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse) obj;

      if (getResult()
          != other.getResult()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RESULT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getResult());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskResponse)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_CancelTaskResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_CancelTaskResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        result_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_CancelTaskResponse_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse(this);
        result.result_ = result_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse.getDefaultInstance()) return this;
        if (other.getResult() != false) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean result_ ;
      /**
       * <code>bool result = 1;</code>
       * @return The result.
       */
      @java.lang.Override
      public boolean getResult() {
        return result_;
      }
      /**
       * <code>bool result = 1;</code>
       * @param value The result to set.
       * @return This builder for chaining.
       */
      public Builder setResult(boolean value) {
        
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool result = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearResult() {
        
        result_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskResponse)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskResponse)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CancelTaskResponse>
        PARSER = new com.google.protobuf.AbstractParser<CancelTaskResponse>() {
      @java.lang.Override
      public CancelTaskResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CancelTaskResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CancelTaskResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CancelTaskResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UpdateRoutePathResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePathResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool result = 1;</code>
     * @return The result.
     */
    boolean getResult();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePathResult}
   */
  public static final class UpdateRoutePathResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePathResult)
      UpdateRoutePathResultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UpdateRoutePathResult.newBuilder() to construct.
    private UpdateRoutePathResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UpdateRoutePathResult() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new UpdateRoutePathResult();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UpdateRoutePathResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              result_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_UpdateRoutePathResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_UpdateRoutePathResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult.Builder.class);
    }

    public static final int RESULT_FIELD_NUMBER = 1;
    private boolean result_;
    /**
     * <code>bool result = 1;</code>
     * @return The result.
     */
    @java.lang.Override
    public boolean getResult() {
      return result_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (result_ != false) {
        output.writeBool(1, result_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (result_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, result_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult) obj;

      if (getResult()
          != other.getResult()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RESULT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getResult());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePathResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePathResult)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_UpdateRoutePathResult_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_UpdateRoutePathResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        result_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_UpdateRoutePathResult_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult(this);
        result.result_ = result_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult.getDefaultInstance()) return this;
        if (other.getResult() != false) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean result_ ;
      /**
       * <code>bool result = 1;</code>
       * @return The result.
       */
      @java.lang.Override
      public boolean getResult() {
        return result_;
      }
      /**
       * <code>bool result = 1;</code>
       * @param value The result to set.
       * @return This builder for chaining.
       */
      public Builder setResult(boolean value) {
        
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool result = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearResult() {
        
        result_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePathResult)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.UpdateRoutePathResult)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UpdateRoutePathResult>
        PARSER = new com.google.protobuf.AbstractParser<UpdateRoutePathResult>() {
      @java.lang.Override
      public UpdateRoutePathResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UpdateRoutePathResult(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UpdateRoutePathResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UpdateRoutePathResult> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.UpdateRoutePathResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CalibrationResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool result = 1;</code>
     * @return The result.
     */
    boolean getResult();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationResponse}
   */
  public static final class CalibrationResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationResponse)
      CalibrationResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CalibrationResponse.newBuilder() to construct.
    private CalibrationResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CalibrationResponse() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CalibrationResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CalibrationResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              result_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_CalibrationResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_CalibrationResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse.Builder.class);
    }

    public static final int RESULT_FIELD_NUMBER = 1;
    private boolean result_;
    /**
     * <code>bool result = 1;</code>
     * @return The result.
     */
    @java.lang.Override
    public boolean getResult() {
      return result_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (result_ != false) {
        output.writeBool(1, result_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (result_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, result_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse) obj;

      if (getResult()
          != other.getResult()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RESULT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getResult());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationResponse)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_CalibrationResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_CalibrationResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        result_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_CalibrationResponse_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse(this);
        result.result_ = result_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse.getDefaultInstance()) return this;
        if (other.getResult() != false) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean result_ ;
      /**
       * <code>bool result = 1;</code>
       * @return The result.
       */
      @java.lang.Override
      public boolean getResult() {
        return result_;
      }
      /**
       * <code>bool result = 1;</code>
       * @param value The result to set.
       * @return This builder for chaining.
       */
      public Builder setResult(boolean value) {
        
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool result = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearResult() {
        
        result_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationResponse)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationResponse)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CalibrationResponse>
        PARSER = new com.google.protobuf.AbstractParser<CalibrationResponse>() {
      @java.lang.Override
      public CalibrationResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CalibrationResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CalibrationResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CalibrationResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CalibrationConfirmResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationConfirmResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool result = 1;</code>
     * @return The result.
     */
    boolean getResult();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationConfirmResult}
   */
  public static final class CalibrationConfirmResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationConfirmResult)
      CalibrationConfirmResultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CalibrationConfirmResult.newBuilder() to construct.
    private CalibrationConfirmResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CalibrationConfirmResult() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CalibrationConfirmResult();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CalibrationConfirmResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              result_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_CalibrationConfirmResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_CalibrationConfirmResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult.Builder.class);
    }

    public static final int RESULT_FIELD_NUMBER = 1;
    private boolean result_;
    /**
     * <code>bool result = 1;</code>
     * @return The result.
     */
    @java.lang.Override
    public boolean getResult() {
      return result_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (result_ != false) {
        output.writeBool(1, result_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (result_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, result_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult) obj;

      if (getResult()
          != other.getResult()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RESULT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getResult());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationConfirmResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationConfirmResult)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_CalibrationConfirmResult_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_CalibrationConfirmResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        result_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_CalibrationConfirmResult_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult(this);
        result.result_ = result_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult.getDefaultInstance()) return this;
        if (other.getResult() != false) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean result_ ;
      /**
       * <code>bool result = 1;</code>
       * @return The result.
       */
      @java.lang.Override
      public boolean getResult() {
        return result_;
      }
      /**
       * <code>bool result = 1;</code>
       * @param value The result to set.
       * @return This builder for chaining.
       */
      public Builder setResult(boolean value) {
        
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool result = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearResult() {
        
        result_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationConfirmResult)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CalibrationConfirmResult)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CalibrationConfirmResult>
        PARSER = new com.google.protobuf.AbstractParser<CalibrationConfirmResult>() {
      @java.lang.Override
      public CalibrationConfirmResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CalibrationConfirmResult(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CalibrationConfirmResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CalibrationConfirmResult> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CalibrationConfirmResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CancelTaskConfirmResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskConfirmResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool result = 1;</code>
     * @return The result.
     */
    boolean getResult();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskConfirmResponse}
   */
  public static final class CancelTaskConfirmResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskConfirmResponse)
      CancelTaskConfirmResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CancelTaskConfirmResponse.newBuilder() to construct.
    private CancelTaskConfirmResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CancelTaskConfirmResponse() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CancelTaskConfirmResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CancelTaskConfirmResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              result_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_CancelTaskConfirmResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_CancelTaskConfirmResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse.Builder.class);
    }

    public static final int RESULT_FIELD_NUMBER = 1;
    private boolean result_;
    /**
     * <code>bool result = 1;</code>
     * @return The result.
     */
    @java.lang.Override
    public boolean getResult() {
      return result_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (result_ != false) {
        output.writeBool(1, result_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (result_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, result_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse) obj;

      if (getResult()
          != other.getResult()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RESULT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getResult());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskConfirmResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskConfirmResponse)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_CancelTaskConfirmResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_CancelTaskConfirmResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        result_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_CancelTaskConfirmResponse_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse(this);
        result.result_ = result_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse.getDefaultInstance()) return this;
        if (other.getResult() != false) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean result_ ;
      /**
       * <code>bool result = 1;</code>
       * @return The result.
       */
      @java.lang.Override
      public boolean getResult() {
        return result_;
      }
      /**
       * <code>bool result = 1;</code>
       * @param value The result to set.
       * @return This builder for chaining.
       */
      public Builder setResult(boolean value) {
        
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool result = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearResult() {
        
        result_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskConfirmResponse)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.CancelTaskConfirmResponse)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CancelTaskConfirmResponse>
        PARSER = new com.google.protobuf.AbstractParser<CancelTaskConfirmResponse>() {
      @java.lang.Override
      public CancelTaskConfirmResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CancelTaskConfirmResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CancelTaskConfirmResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CancelTaskConfirmResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.CancelTaskConfirmResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ManualControlResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControlResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool result = 1;</code>
     * @return The result.
     */
    boolean getResult();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControlResponse}
   */
  public static final class ManualControlResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControlResponse)
      ManualControlResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ManualControlResponse.newBuilder() to construct.
    private ManualControlResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ManualControlResponse() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ManualControlResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ManualControlResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              result_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ManualControlResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ManualControlResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse.Builder.class);
    }

    public static final int RESULT_FIELD_NUMBER = 1;
    private boolean result_;
    /**
     * <code>bool result = 1;</code>
     * @return The result.
     */
    @java.lang.Override
    public boolean getResult() {
      return result_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (result_ != false) {
        output.writeBool(1, result_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (result_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, result_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse) obj;

      if (getResult()
          != other.getResult()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RESULT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getResult());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControlResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControlResponse)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ManualControlResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ManualControlResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        result_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_ManualControlResponse_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse(this);
        result.result_ = result_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse.getDefaultInstance()) return this;
        if (other.getResult() != false) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean result_ ;
      /**
       * <code>bool result = 1;</code>
       * @return The result.
       */
      @java.lang.Override
      public boolean getResult() {
        return result_;
      }
      /**
       * <code>bool result = 1;</code>
       * @param value The result to set.
       * @return This builder for chaining.
       */
      public Builder setResult(boolean value) {
        
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool result = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearResult() {
        
        result_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControlResponse)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.ManualControlResponse)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ManualControlResponse>
        PARSER = new com.google.protobuf.AbstractParser<ManualControlResponse>() {
      @java.lang.Override
      public ManualControlResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ManualControlResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ManualControlResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ManualControlResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.ManualControlResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TaskFinishConfirmResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool result = 1;</code>
     * @return The result.
     */
    boolean getResult();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse}
   */
  public static final class TaskFinishConfirmResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse)
      TaskFinishConfirmResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TaskFinishConfirmResponse.newBuilder() to construct.
    private TaskFinishConfirmResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TaskFinishConfirmResponse() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TaskFinishConfirmResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TaskFinishConfirmResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              result_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_TaskFinishConfirmResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_TaskFinishConfirmResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse.Builder.class);
    }

    public static final int RESULT_FIELD_NUMBER = 1;
    private boolean result_;
    /**
     * <code>bool result = 1;</code>
     * @return The result.
     */
    @java.lang.Override
    public boolean getResult() {
      return result_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (result_ != false) {
        output.writeBool(1, result_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (result_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, result_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse) obj;

      if (getResult()
          != other.getResult()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RESULT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getResult());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_TaskFinishConfirmResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_TaskFinishConfirmResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        result_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_TaskFinishConfirmResponse_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse(this);
        result.result_ = result_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse.getDefaultInstance()) return this;
        if (other.getResult() != false) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean result_ ;
      /**
       * <code>bool result = 1;</code>
       * @return The result.
       */
      @java.lang.Override
      public boolean getResult() {
        return result_;
      }
      /**
       * <code>bool result = 1;</code>
       * @param value The result to set.
       * @return This builder for chaining.
       */
      public Builder setResult(boolean value) {
        
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool result = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearResult() {
        
        result_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.TaskFinishConfirmResponse)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TaskFinishConfirmResponse>
        PARSER = new com.google.protobuf.AbstractParser<TaskFinishConfirmResponse>() {
      @java.lang.Override
      public TaskFinishConfirmResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TaskFinishConfirmResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TaskFinishConfirmResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TaskFinishConfirmResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.TaskFinishConfirmResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VersionModelInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelType version_model_type = 1;</code>
     * @return The enum numeric value on the wire for versionModelType.
     */
    int getVersionModelTypeValue();
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelType version_model_type = 1;</code>
     * @return The versionModelType.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelType getVersionModelType();

    /**
     * <code>string info = 2;</code>
     * @return The info.
     */
    java.lang.String getInfo();
    /**
     * <code>string info = 2;</code>
     * @return The bytes for info.
     */
    com.google.protobuf.ByteString
        getInfoBytes();
  }
  /**
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelInfo}
   */
  public static final class VersionModelInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelInfo)
      VersionModelInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VersionModelInfo.newBuilder() to construct.
    private VersionModelInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VersionModelInfo() {
      versionModelType_ = 0;
      info_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new VersionModelInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private VersionModelInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              versionModelType_ = rawValue;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              info_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_VersionModelInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_VersionModelInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo.Builder.class);
    }

    public static final int VERSION_MODEL_TYPE_FIELD_NUMBER = 1;
    private int versionModelType_;
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelType version_model_type = 1;</code>
     * @return The enum numeric value on the wire for versionModelType.
     */
    @java.lang.Override public int getVersionModelTypeValue() {
      return versionModelType_;
    }
    /**
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelType version_model_type = 1;</code>
     * @return The versionModelType.
     */
    @java.lang.Override public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelType getVersionModelType() {
      @SuppressWarnings("deprecation")
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelType result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelType.valueOf(versionModelType_);
      return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelType.UNRECOGNIZED : result;
    }

    public static final int INFO_FIELD_NUMBER = 2;
    private volatile java.lang.Object info_;
    /**
     * <code>string info = 2;</code>
     * @return The info.
     */
    @java.lang.Override
    public java.lang.String getInfo() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        info_ = s;
        return s;
      }
    }
    /**
     * <code>string info = 2;</code>
     * @return The bytes for info.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getInfoBytes() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        info_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (versionModelType_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelType.VERSION_NULL.getNumber()) {
        output.writeEnum(1, versionModelType_);
      }
      if (!getInfoBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, info_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (versionModelType_ != com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelType.VERSION_NULL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, versionModelType_);
      }
      if (!getInfoBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, info_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo) obj;

      if (versionModelType_ != other.versionModelType_) return false;
      if (!getInfo()
          .equals(other.getInfo())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VERSION_MODEL_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + versionModelType_;
      hash = (37 * hash) + INFO_FIELD_NUMBER;
      hash = (53 * hash) + getInfo().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelInfo)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_VersionModelInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_VersionModelInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        versionModelType_ = 0;

        info_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.internal_static_com_hx_platformnetty_iotdevice_body_VersionModelInfo_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo(this);
        result.versionModelType_ = versionModelType_;
        result.info_ = info_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo.getDefaultInstance()) return this;
        if (other.versionModelType_ != 0) {
          setVersionModelTypeValue(other.getVersionModelTypeValue());
        }
        if (!other.getInfo().isEmpty()) {
          info_ = other.info_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int versionModelType_ = 0;
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelType version_model_type = 1;</code>
       * @return The enum numeric value on the wire for versionModelType.
       */
      @java.lang.Override public int getVersionModelTypeValue() {
        return versionModelType_;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelType version_model_type = 1;</code>
       * @param value The enum numeric value on the wire for versionModelType to set.
       * @return This builder for chaining.
       */
      public Builder setVersionModelTypeValue(int value) {
        
        versionModelType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelType version_model_type = 1;</code>
       * @return The versionModelType.
       */
      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelType getVersionModelType() {
        @SuppressWarnings("deprecation")
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelType result = com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelType.valueOf(versionModelType_);
        return result == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelType.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelType version_model_type = 1;</code>
       * @param value The versionModelType to set.
       * @return This builder for chaining.
       */
      public Builder setVersionModelType(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        versionModelType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelType version_model_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersionModelType() {
        
        versionModelType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object info_ = "";
      /**
       * <code>string info = 2;</code>
       * @return The info.
       */
      public java.lang.String getInfo() {
        java.lang.Object ref = info_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          info_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string info = 2;</code>
       * @return The bytes for info.
       */
      public com.google.protobuf.ByteString
          getInfoBytes() {
        java.lang.Object ref = info_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          info_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string info = 2;</code>
       * @param value The info to set.
       * @return This builder for chaining.
       */
      public Builder setInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        info_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string info = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearInfo() {
        
        info_ = getDefaultInstance().getInfo();
        onChanged();
        return this;
      }
      /**
       * <code>string info = 2;</code>
       * @param value The bytes for info to set.
       * @return This builder for chaining.
       */
      public Builder setInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        info_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelInfo)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.VersionModelInfo)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VersionModelInfo>
        PARSER = new com.google.protobuf.AbstractParser<VersionModelInfo>() {
      @java.lang.Override
      public VersionModelInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VersionModelInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VersionModelInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VersionModelInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.RemoteContrlMessageProtoc.VersionModelInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_RemoteContrlMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_RemoteContrlMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlRequest_ControlUnit_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlRequest_ControlUnit_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlResponse_ControlResultUnit_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlResponse_ControlResultUnit_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_Header_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_Header_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_CtrlValue_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_CtrlValue_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_ResponseValue_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_ResponseValue_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterSet_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterSet_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterGet_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterGet_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_UpdateRoutePath_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_UpdateRoutePath_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_PointXYZ_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_PointXYZ_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_RoutePath_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_RoutePath_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_Pose_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_Pose_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_RouteParam_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_RouteParam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_BaseLineTranslation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_BaseLineTranslation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_TransferLine_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_TransferLine_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_GnssConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_GnssConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_LocalizationConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_LocalizationConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_ControlConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_ControlConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_ChassisConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_ChassisConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_PlanningConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_PlanningConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_ConfigParam_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_ConfigParam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_ManualControl_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_ManualControl_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_ManualControl_infoManualControl_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_ManualControl_infoManualControl_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_Calibration_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_Calibration_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_LastTask_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_LastTask_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterSetResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterSetResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterGetResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterGetResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_AutoPilotResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_AutoPilotResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_WorkModeResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_WorkModeResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_HmiResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_HmiResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_CancelTaskResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_CancelTaskResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_UpdateRoutePathResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_UpdateRoutePathResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_CalibrationResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_CalibrationResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_CalibrationConfirmResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_CalibrationConfirmResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_CancelTaskConfirmResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_CancelTaskConfirmResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_ManualControlResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_ManualControlResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_TaskFinishConfirmResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_TaskFinishConfirmResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_VersionModelInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_VersionModelInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024VehicleControl.proto\022#com.hx.platformn" +
      "etty.iotdevice.body\"\356\001\n\023RemoteContrlMess" +
      "age\022?\n\004type\030\001 \001(\01621.com.elinxer.springcloud.platform.mqtt.broker" +
      ".iotdevice.body.eMessageType\022G\n\003req\030\002 \001(" +
      "\0132:.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body." +
      "VehicleControlRequest\022M\n\010response\030\003 \001(\0132" +
      ";.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Ve" +
      "hicleControlResponse\"\310\002\n\025VehicleControlR" +
      "equest\022;\n\006header\030\001 \001(\0132+.com.hx.platform" +
      "netty.iotdevice.body.Header\022]\n\rcontrol_u" +
      "nits\030\002 \003(\0132F.com.elinxer.springcloud.platform.mqtt.broker.iotdev" +
      "ice.body.VehicleControlRequest.ControlUn" +
      "it\032\222\001\n\013ControlUnit\022@\n\010ctrlType\030\001 \001(\0162..c" +
      "om.hx.platformnetty.iotdevice.body.eCtrl" +
      "Type\022A\n\tctrlValue\030\002 \001(\0132..com.hx.platfor" +
      "mnetty.iotdevice.body.CtrlValue\"\246\003\n\026Vehi" +
      "cleControlResponse\022;\n\006header\030\001 \001(\0132+.com" +
      ".hx.platformnetty.iotdevice.body.Header\022" +
      "k\n\024control_result_units\030\002 \003(\0132M.com.hx.p" +
      "latformnetty.iotdevice.body.VehicleContr" +
      "olResponse.ControlResultUnit\032\341\001\n\021Control" +
      "ResultUnit\022@\n\010ctrlType\030\001 \001(\0162..com.hx.pl" +
      "atformnetty.iotdevice.body.eCtrlType\022D\n\010" +
      "resValue\030\002 \001(\01322.com.elinxer.springcloud.platform.mqtt.broker.io" +
      "tdevice.body.ResponseValue\022D\n\010respType\030\003" +
      " \001(\01622.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.bo" +
      "dy.eCtrlRespType\"\213\001\n\006Header\022\017\n\007version\030\001" +
      " \001(\r\022\026\n\016unix_timestamp\030\002 \001(\004\022\013\n\003seq\030\003 \001(" +
      "\005\022\022\n\nsession_id\030\004 \001(\005\022\017\n\007task_id\030\005 \001(\t\022\022" +
      "\n\nmessage_id\030\006 \001(\t\022\022\n\noperate_id\030\007 \001(\t\"\265" +
      "\t\n\tCtrlValue\022H\n\rautopilot_cmd\030\001 \001(\01621.co" +
      "m.hx.platformnetty.iotdevice.body.Autopi" +
      "lotCmd\022@\n\twork_mode\030\002 \001(\0162-.com.hx.platf" +
      "ormnetty.iotdevice.body.WorkMode\022>\n\010hmi_" +
      "type\030\003 \001(\0162,.com.elinxer.springcloud.platform.mqtt.broker.iotdev" +
      "ice.body.HmiType\022O\n\021update_route_path\030\005 " +
      "\001(\01324.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.bod" +
      "y.UpdateRoutePath\022B\n\nroute_path\030\006 \001(\0132.." +
      "com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Rout" +
      "ePath\022D\n\013route_param\030\007 \001(\0132/.com.hx.plat" +
      "formnetty.iotdevice.body.RouteParam\022W\n\025b" +
      "ase_line_translation\030\014 \001(\01328.com.hx.plat" +
      "formnetty.iotdevice.body.BaseLineTransla" +
      "tion\022H\n\rtransfer_line\030\r \001(\01321.com.hx.pla" +
      "tformnetty.iotdevice.body.TransferLine\022J" +
      "\n\020set_config_param\030\017 \001(\01320.com.hx.platfo" +
      "rmnetty.iotdevice.body.ConfigParam\022Q\n\022ve" +
      "rsion_model_type\030\020 \001(\01625.com.hx.platform" +
      "netty.iotdevice.body.VersionModelType\022N\n" +
      "\025req_config_param_type\030\022 \001(\0162/.com.hx.pl" +
      "atformnetty.iotdevice.body.ConfigType\022J\n" +
      "\016manual_control\030\024 \001(\01322.com.hx.platformn" +
      "etty.iotdevice.body.ManualControl\022E\n\013cal" +
      "ibration\030\025 \001(\01320.com.elinxer.springcloud.platform.mqtt.broker.io" +
      "tdevice.body.Calibration\022L\n\rtbox_set_par" +
      "m\030( \001(\01325.com.elinxer.springcloud.platform.mqtt.broker.iotdevice" +
      ".body.TboxParameterSet\022L\n\rtbox_get_parm\030" +
      ") \001(\01325.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.b" +
      "ody.TboxParameterGet\022@\n\tlast_task\0302 \001(\0132" +
      "-.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.La" +
      "stTask\"\350\r\n\rResponseValue\022R\n\022atuopilot_re" +
      "sponse\030\001 \001(\01326.com.elinxer.springcloud.platform.mqtt.broker.iotd" +
      "evice.body.AutoPilotResponse\022Q\n\022work_mod" +
      "e_response\030\002 \001(\01325.com.elinxer.springcloud.platform.mqtt.broker." +
      "iotdevice.body.WorkModeResponse\022K\n\021hmi_m" +
      "ode_response\030\003 \001(\01320.com.hx.platformnett" +
      "y.iotdevice.body.HmiResponse\022U\n\024cancel_t" +
      "ask_response\030\004 \001(\01327.com.hx.platformnett" +
      "y.iotdevice.body.CancelTaskResponse\022\\\n\030u" +
      "pdate_route_path_result\030\005 \001(\0132:.com.hx.p" +
      "latformnetty.iotdevice.body.UpdateRouteP" +
      "athResult\022B\n\nroute_path\030\006 \001(\0132..com.hx.p" +
      "latformnetty.iotdevice.body.RoutePath\022U\n" +
      "\024route_param_response\030\007 \001(\01627.com.hx.pla" +
      "tformnetty.iotdevice.body.RouteParamResp" +
      "onse\022d\n\034task_finish_confirm_response\030\010 \001" +
      "(\0132>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body" +
      ".TaskFinishConfirmResponse\022d\n\034cancel_tas" +
      "k_confirm_response\030\t \001(\0132>.com.hx.platfo" +
      "rmnetty.iotdevice.body.CancelTaskConfirm" +
      "Response\022a\n\027base_line_tran_response\030\014 \001(" +
      "\0162@.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body." +
      "BaseLineTranslationResponse\022Y\n\026transfer_" +
      "line_response\030\r \001(\01629.com.hx.platformnet" +
      "ty.iotdevice.body.TransferLineResponse\022J" +
      "\n\020res_config_param\030\017 \001(\01320.com.hx.platfo" +
      "rmnetty.iotdevice.body.ConfigParam\022P\n\021ve" +
      "rsion_model_inf\030\020 \001(\01325.com.hx.platformn" +
      "etty.iotdevice.body.VersionModelInfo\022R\n\016" +
      "manual_control\030\024 \001(\0132:.com.hx.platformne" +
      "tty.iotdevice.body.ManualControlResponse" +
      "\022V\n\024calibration_response\030\025 \001(\01328.com.hx." +
      "platformnetty.iotdevice.body.Calibration" +
      "Response\022a\n\032calibration_confirm_result\030\026" +
      " \001(\0132=.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.bo" +
      "dy.CalibrationConfirmResult\022T\n\017tbox_set_" +
      "result\030( \001(\0132;.com.elinxer.springcloud.platform.mqtt.broker.iotd" +
      "evice.body.TboxParameterSetResult\022V\n\017tbo" +
      "x_get_result\030) \001(\0132=.com.hx.platformnett" +
      "y.iotdevice.body.TboxParameterGetRespons" +
      "e\022Q\n\022last_task_continue\0302 \001(\01625.com.hx.p" +
      "latformnetty.iotdevice.body.LastTaskCont" +
      "inue\022[\n\023task_finish_confirm\0303 \001(\0132>.com." +
      "hx.platformnetty.iotdevice.body.TaskFini" +
      "shConfirmResponse\"-\n\020TboxParameterSet\022\n\n" +
      "\002id\030\001 \001(\r\022\r\n\005value\030\002 \001(\t\"\036\n\020TboxParamete" +
      "rGet\022\n\n\002id\030\001 \001(\r\"\271\002\n\017UpdateRoutePath\022P\n\t" +
      "path_type\030\001 \001(\0162=.com.elinxer.springcloud.platform.mqtt.broker.i" +
      "otdevice.body.UpdateRoutePath.PathType\022N" +
      "\n\010dev_type\030\002 \001(\0162<.com.elinxer.springcloud.platform.mqtt.broker." +
      "iotdevice.body.UpdateRoutePath.DevType\"9" +
      "\n\010PathType\022\r\n\tPATH_NULL\020\000\022\016\n\nPATH_POINT\020" +
      "\001\022\016\n\nPATH_PARAM\020\002\"I\n\007DevType\022\014\n\010DEV_NULL" +
      "\020\000\022\021\n\rDEV_STANDLONE\020\001\022\016\n\nDEV_MASTER\020\002\022\r\n" +
      "\tDEV_SLAVE\020\003\"\307\001\n\010PointXYZ\022\t\n\001x\030\001 \001(\001\022\t\n\001" +
      "y\030\002 \001(\001\022\t\n\001z\030\003 \001(\001\022\013\n\003yaw\030\004 \001(\001\022\t\n\001v\030\005 \001" +
      "(\001\022\t\n\001s\030\006 \001(\001\022\013\n\003cur\030\007 \001(\001\022\014\n\004back\030\010 \001(\005" +
      "\022\016\n\006strCur\030\t \001(\005\022\017\n\007reverse\030\n \001(\010\022\014\n\004typ" +
      "e\030\013 \001(\005\022\025\n\rroad_left_dis\030\014 \001(\001\022\026\n\016road_r" +
      "ight_dis\030\r \001(\001\"\363\003\n\tRoutePath\022\027\n\017total_pa" +
      "ths_num\030\001 \001(\005\022\025\n\rcur_paths_num\030\002 \001(\005\022\027\n\017" +
      "total_point_num\030\003 \001(\005\022P\n\014routing_type\030\004 " +
      "\001(\0162:.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.bod" +
      "y.RoutePath.RoutingType\022@\n\tpoint_xyz\030\005 \003" +
      "(\0132-.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body" +
      ".PointXYZ\"\210\002\n\013RoutingType\022\023\n\017ROUTE_TYPE_" +
      "NULL\020\000\022\030\n\024ROUTE_TYPE_AB_SINGLE\020\001\022\027\n\023ROUT" +
      "E_TYPE_AB_MULTI\020\002\022\030\n\024ROUTE_TYPE_ABCD_LOO" +
      "P\020\003\022\035\n\031ROUTE_TYPE_ABCD_LOOP_WELT\020\004\022\034\n\030RO" +
      "UTE_TYPE_ABCD_FISHTAIL\020\005\022!\n\035ROUTE_TYPE_A" +
      "BCD_FISHTAIL_WELT\020\006\022\030\n\024ROUTE_TYPE_ABCD_P" +
      "EAR\020\007\022\035\n\031ROUTE_TYPE_ABCD_PEAR_WELT\020\010\"T\n\004" +
      "Pose\022\n\n\002px\030\001 \001(\001\022\n\n\002py\030\002 \001(\001\022\n\n\002pz\030\003 \001(\001" +
      "\022\013\n\003yaw\030\004 \001(\001\022\r\n\005pitch\030\005 \001(\001\022\014\n\004roll\030\006 \001" +
      "(\001\"\313\005\n\nRouteParam\022Q\n\014routing_type\030\001 \001(\0162" +
      ";.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Ro" +
      "uteParam.RoutingType\0227\n\004pose\030\002 \003(\0132).com" +
      ".hx.platformnetty.iotdevice.body.Pose\022 \n" +
      "\030agricultural_imple_width\030\003 \001(\001\022\022\n\nline_" +
      "space\030\004 \001(\001\022\021\n\tdirection\030\005 \001(\005\022\'\n\037agricu" +
      "ltural_imple_installerror\030\006 \001(\001\022\023\n\013turn_" +
      "radius\030\007 \001(\001\022\034\n\024change_operation_ori\030\010 \001" +
      "(\010\022\024\n\014reverse_flag\030\t \001(\010\022\026\n\016hang_down_di" +
      "st\030\n \001(\001\022\024\n\014hang_up_dist\030\013 \001(\001\022\024\n\014pto_of" +
      "f_dist\030\014 \001(\001\022\023\n\013pto_on_dist\030\r \001(\001\022\022\n\ntar" +
      "get_vel\030\016 \001(\001\"\210\002\n\013RoutingType\022\023\n\017ROUTE_T" +
      "YPE_NULL\020\000\022\030\n\024ROUTE_TYPE_AB_SINGLE\020\001\022\027\n\023" +
      "ROUTE_TYPE_AB_MULTI\020\002\022\030\n\024ROUTE_TYPE_ABCD" +
      "_LOOP\020\003\022\035\n\031ROUTE_TYPE_ABCD_LOOP_WELT\020\004\022\034" +
      "\n\030ROUTE_TYPE_ABCD_FISHTAIL\020\005\022!\n\035ROUTE_TY" +
      "PE_ABCD_FISHTAIL_WELT\020\006\022\030\n\024ROUTE_TYPE_AB" +
      "CD_PEAR\020\007\022\035\n\031ROUTE_TYPE_ABCD_PEAR_WELT\020\010" +
      "\"\351\001\n\023BaseLineTranslation\022b\n\020translation_" +
      "type\030\001 \001(\0162H.com.elinxer.springcloud.platform.mqtt.broker.iotdev" +
      "ice.body.BaseLineTranslation.Translation" +
      "Type\022\027\n\017baseline_offset\030\002 \001(\001\"U\n\017Transla" +
      "tionType\022\024\n\020TRANSLATION_NULL\020\000\022\024\n\020TRANSL" +
      "ATION_AUTO\020\001\022\026\n\022TRANSLATION_MANUAL\020\002\"5\n\014" +
      "TransferLine\022%\n\035agricultural_implement_o" +
      "ffset\030\001 \001(\001\"Y\n\nGnssConfig\022\022\n\ngnss_board\030" +
      "\001 \001(\t\022\031\n\021gnss_board_serial\030\002 \001(\t\022\034\n\024gnss" +
      "_board_baud_rate\030\003 \001(\t\"B\n\022LocalizationCo" +
      "nfig\022\030\n\020ant_install_type\030\001 \001(\005\022\022\n\nant_of" +
      "fset\030\002 \001(\005\"\205\004\n\rControlConfig\022\020\n\010lon_kp_t" +
      "\030\001 \001(\001\022\020\n\010lon_ki_t\030\002 \001(\001\022\020\n\010lon_kd_i\030\003 \001" +
      "(\001\022\023\n\013forward_len\030\004 \001(\001\022\022\n\nwheel_base\030\005 " +
      "\001(\001\022\034\n\024wheel_distance_front\030\006 \001(\001\022\033\n\023whe" +
      "el_distance_back\030\007 \001(\001\022\022\n\nmin_radius\030\010 \001" +
      "(\001\022\n\n\002kp\030\t \001(\001\022\n\n\002ki\030\n \001(\001\022\n\n\002kd\030\013 \001(\001\022\027" +
      "\n\017online_distance\030\014 \001(\001\022\024\n\014online_thrta\030" +
      "\r \001(\001\022\021\n\tkp_online\030\016 \001(\001\022\021\n\tki_online\030\017 " +
      "\001(\001\022\021\n\tkd_online\030\020 \001(\001\022\032\n\022forward_len_on" +
      "line\030\021 \001(\001\022\026\n\016slow_down_rate\030\022 \001(\001\022\022\n\nsa" +
      "turation\030\023 \001(\001\022\032\n\022integra_thres_hold\030\024 \001" +
      "(\001\022\017\n\007max_dec\030\025 \001(\001\022\021\n\tstart_vel\030\026 \001(\001\022\025" +
      "\n\rslowdown_dist\030\027 \001(\001\022\017\n\007max_acc\030\030 \001(\001\022\n" +
      "\n\002hz\030\031 \001(\001\"A\n\rChassisConfig\022\022\n\nwheel_bas" +
      "e\030\001 \001(\001\022\034\n\024wheel_distance_front\030\002 \001(\001\"\336\003" +
      "\n\016PlanningConfig\022\032\n\022dev_to_cloud_topic\030\001" +
      " \001(\t\022\032\n\022cloud_to_dev_topic\030\002 \001(\t\022\016\n\006dev_" +
      "ID\030\003 \001(\t\022$\n\034basicstateinfo_freq_free_app" +
      "\030\004 \001(\001\022$\n\034basicstateinfo_freq_work_app\030\005" +
      " \001(\001\022&\n\036basicstateinfo_freq_free_cloud\030\006" +
      " \001(\001\022&\n\036basicstateinfo_freq_work_cloud\030\007" +
      " \001(\001\022\027\n\017local_traj_freq\030\010 \001(\001\022\031\n\021local_t" +
      "raj_length\030\t \001(\001\022 \n\030disconnect_while_tim" +
      "eout\030\n \001(\010\022 \n\030disconnect_stop_work_app\030\013" +
      " \001(\010\022\"\n\032disconnect_stop_work_cloud\030\014 \001(\010" +
      "\022\035\n\025default_cloud_task_id\030\r \001(\t\022\027\n\017radio" +
      "_baud_rate\030\016 \001(\005\022\024\n\014radio_serial\030\017 \001(\t\"\316" +
      "\003\n\013ConfigParam\022=\n\004type\030\001 \001(\0162/.com.hx.pl" +
      "atformnetty.iotdevice.body.ConfigType\022D\n" +
      "\013gnss_config\030\002 \001(\0132/.com.hx.platformnett" +
      "y.iotdevice.body.GnssConfig\022T\n\023localizat" +
      "ion_config\030\003 \001(\01327.com.elinxer.springcloud.platform.mqtt.broker." +
      "iotdevice.body.LocalizationConfig\022J\n\016con" +
      "trol_config\030\004 \001(\01322.com.elinxer.springcloud.platform.mqtt.broker" +
      ".iotdevice.body.ControlConfig\022J\n\016chassis" +
      "_config\030\005 \001(\01322.com.elinxer.springcloud.platform.mqtt.broker.iot" +
      "device.body.ChassisConfig\022L\n\017planning_co" +
      "nfig\030\006 \001(\01323.com.elinxer.springcloud.platform.mqtt.broker.iotdev" +
      "ice.body.PlanningConfig\"\265\001\n\rManualContro" +
      "l\022\023\n\013vehicleType\030\001 \001(\t\022_\n\021manualControlI" +
      "nfo\030\002 \001(\0132D.com.elinxer.springcloud.platform.mqtt.broker.iotdevi" +
      "ce.body.ManualControl.infoManualControl\032" +
      ".\n\021infoManualControl\022\n\n\002id\030\001 \001(\r\022\r\n\005valu" +
      "e\030\002 \001(\001\"\227\001\n\013Calibration\022B\n\004type\030\001 \001(\01624." +
      "com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Cali" +
      "brationType\022D\n\013route_param\030\002 \001(\0132/.com.h" +
      "x.platformnetty.iotdevice.body.RoutePara" +
      "m\"\354\001\n\010LastTask\022@\n\013task_header\030\001 \001(\0132+.co" +
      "m.hx.platformnetty.iotdevice.body.Header" +
      "\022D\n\013route_param\030\002 \001(\0132/.com.hx.platformn" +
      "etty.iotdevice.body.RouteParam\022\032\n\022last_w" +
      "ork_path_num\030\003 \001(\005\022<\n\tlast_pose\030\004 \001(\0132)." +
      "com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Pose" +
      "\"6\n\026TboxParameterSetResult\022\016\n\006result\030\001 \001" +
      "(\r\022\014\n\004code\030\002 \001(\005\"5\n\030TboxParameterGetResp" +
      "onse\022\n\n\002id\030\001 \001(\r\022\r\n\005value\030\002 \001(\t\"#\n\021AutoP" +
      "ilotResponse\022\016\n\006result\030\001 \001(\010\"\"\n\020WorkMode" +
      "Response\022\016\n\006result\030\001 \001(\010\"\035\n\013HmiResponse\022" +
      "\016\n\006result\030\001 \001(\010\"$\n\022CancelTaskResponse\022\016\n" +
      "\006result\030\001 \001(\010\"\'\n\025UpdateRoutePathResult\022\016" +
      "\n\006result\030\001 \001(\010\"%\n\023CalibrationResponse\022\016\n" +
      "\006result\030\001 \001(\010\"*\n\030CalibrationConfirmResul" +
      "t\022\016\n\006result\030\001 \001(\010\"+\n\031CancelTaskConfirmRe" +
      "sponse\022\016\n\006result\030\001 \001(\010\"\'\n\025ManualControlR" +
      "esponse\022\016\n\006result\030\001 \001(\010\"+\n\031TaskFinishCon" +
      "firmResponse\022\016\n\006result\030\001 \001(\010\"s\n\020VersionM" +
      "odelInfo\022Q\n\022version_model_type\030\001 \001(\01625.c" +
      "om.hx.platformnetty.iotdevice.body.Versi" +
      "onModelType\022\014\n\004info\030\002 \001(\t*?\n\014eMessageTyp" +
      "e\022\014\n\010MSG_NULL\020\000\022\017\n\013MSG_COMMAND\020\001\022\020\n\014MSG_" +
      "RESPONSE\020\002*_\n\reCtrlRespType\022\r\n\tRESP_NONE" +
      "\020\000\022\016\n\nNOMAL_RESP\020\001\022\030\n\024MDC_TIMEOUT_ERR_RE" +
      "SP\020\002\022\025\n\021SEND_MDC_ERR_RESP\020\003*\375\004\n\teCtrlTyp" +
      "e\022\014\n\010CMD_NULL\020\000\022\032\n\026CMD_SET_AUTOPILOT_MOD" +
      "E\020\001\022\025\n\021CMD_SET_WORK_MODE\020\002\022\017\n\013CMD_SET_HM" +
      "I\020\003\022\027\n\023CMD_SET_CANCEL_TASK\020\004\022\031\n\025CMD_UPDA" +
      "TE_ROUTE_PATH\020\005\022\026\n\022CMD_SET_ROUTE_PATH\020\006\022" +
      "\027\n\023CMD_SET_ROUTE_PARAM\020\007\022\037\n\033CMD_SET_TASK" +
      "_FINISH_CONFIRM\020\010\022\037\n\033CMD_SET_CANCEL_TASK" +
      "_CONFIRM\020\t\022!\n\035CMD_SET_BASE_LINE_TRANSLAT" +
      "ION\020\014\022\031\n\025CMD_SET_TRANSFER_LINE\020\r\022\030\n\024CMD_" +
      "SET_CONFIG_PARAM\020\017\022\030\n\024CMD_REQ_VERSION_IN" +
      "FO\020\020\022\034\n\030CMD_REQ_BASIC_STATE_INFO\020\021\022\030\n\024CM" +
      "D_REQ_CONFIG_PARAM\020\022\022\026\n\022CMD_MANUAL_CONTR" +
      "OL\020\024\022\023\n\017CMD_CALIBRATION\020\025\022\033\n\027CMD_CONFIRM" +
      "_CALIBRATION\020\026\022\034\n\030CTRL_TYPE_TBOX_PARAM_S" +
      "ET\020(\022\034\n\030CTRL_TYPE_TBOX_PARAM_GET\020)\022&\n\"CM" +
      "D_REQ_CONFIRM_CONTINUE_LAST_TASK\0202\022\037\n\033CM" +
      "D_REQ_TASK_FINISH_CONFIRM\0203*]\n\014Autopilot" +
      "Cmd\022\022\n\016AUTOPILOT_NULL\020\000\022\020\n\014AUTOPILOT_NA\020" +
      "\001\022\023\n\017AUTOPILOT_START\020\002\022\022\n\016AUTOPILOT_STOP" +
      "\020\003*u\n\010WorkMode\022\022\n\016WORK_MODE_NULL\020\000\022\020\n\014WO" +
      "RK_MODE_NA\020\001\022\030\n\024WORK_MODE_STANDALONE\020\002\022\024" +
      "\n\020WORK_MODE_MASTER\020\003\022\023\n\017WORK_MODE_SLAVE\020" +
      "\004*J\n\007HmiType\022\014\n\010HMI_NULL\020\000\022\r\n\tHMI_CLOUD\020" +
      "\001\022\025\n\021HMI_CLOUD_OFFLINE\020\002\022\013\n\007HMI_APP\020\003*^\n" +
      "\nConfigType\022\014\n\010CFG_NULL\020\000\022\010\n\004GNSS\020\001\022\020\n\014L" +
      "OCALIZATION\020\002\022\013\n\007CONTROL\020\003\022\013\n\007CHASSIS\020\004\022" +
      "\014\n\010PLANNING\020\005*\331\001\n\020VersionModelType\022\020\n\014VE" +
      "RSION_NULL\020\000\022\007\n\003NCU\020\001\022\007\n\003MCU\020\002\022\n\n\006SYSTEM" +
      "\020\003\022\t\n\005CLOUD\020\004\022\016\n\nPERCEPTION\020\005\022\017\n\013WHEEL_A" +
      "NGLE\020\006\022\017\n\013STEER_MOTOR\020\007\022\016\n\nCONTROLLER\020\010\022" +
      "\016\n\nGNSS_BOARD\020\t\022\017\n\013RADIO_BOARD\020\n\022\010\n\004TBOX" +
      "\020\013\022\016\n\nHY_CHASSIS\020\014\022\r\n\tIMPLEMENT\020\r*\207\001\n\017Ca" +
      "librationType\022\r\n\tTYPE_NULL\020\000\022\021\n\rTYPE_GNS" +
      "S_ANT\020\001\022\024\n\020TYPE_WHEEL_ANGLE\020\002\022\024\n\020TYPE_ST" +
      "EER_MOTOR\020\003\022\030\n\024TYPE_HYDRAULIC_STEER\020\004\022\014\n" +
      "\010TYPE_IMU\020\005*W\n\033BaseLineTranslationRespon" +
      "se\022\016\n\nTRANS_NULL\020\000\022\022\n\016TRANS_ASSIGNED\020\001\022\024" +
      "\n\020TRANS_UNASSIGNED\020\002*h\n\024TransferLineResp" +
      "onse\022\026\n\022TRANSFER_LINE_NULL\020\000\022\032\n\026TRANSFER" +
      "_LINE_ASSIGNED\020\001\022\034\n\030TRANSFER_LINE_UNASSI" +
      "GNED\020\002*E\n\020LastTaskContinue\022\r\n\tTASK_NULL\020" +
      "\000\022\021\n\rTASK_CONTINUE\020\001\022\017\n\013TASK_CANCEL\020\002*`\n" +
      "\022RouteParamResponse\022\024\n\020ROUTE_PARAM_NULL\020" +
      "\000\022\030\n\024ROUTE_PARAM_ASSIGNED\020\001\022\032\n\026ROUTE_PAR" +
      "AM_UNASSIGNED\020\002B\035B\031RemoteContrlMessagePr" +
      "otocH\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_com_hx_platformnetty_iotdevice_body_RemoteContrlMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_hx_platformnetty_iotdevice_body_RemoteContrlMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_RemoteContrlMessage_descriptor,
        new java.lang.String[] { "Type", "Req", "Response", });
    internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlRequest_descriptor,
        new java.lang.String[] { "Header", "ControlUnits", });
    internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlRequest_ControlUnit_descriptor =
      internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlRequest_descriptor.getNestedTypes().get(0);
    internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlRequest_ControlUnit_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlRequest_ControlUnit_descriptor,
        new java.lang.String[] { "CtrlType", "CtrlValue", });
    internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlResponse_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlResponse_descriptor,
        new java.lang.String[] { "Header", "ControlResultUnits", });
    internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlResponse_ControlResultUnit_descriptor =
      internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlResponse_descriptor.getNestedTypes().get(0);
    internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlResponse_ControlResultUnit_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_VehicleControlResponse_ControlResultUnit_descriptor,
        new java.lang.String[] { "CtrlType", "ResValue", "RespType", });
    internal_static_com_hx_platformnetty_iotdevice_body_Header_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_com_hx_platformnetty_iotdevice_body_Header_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_Header_descriptor,
        new java.lang.String[] { "Version", "UnixTimestamp", "Seq", "SessionId", "TaskId", "MessageId", "OperateId", });
    internal_static_com_hx_platformnetty_iotdevice_body_CtrlValue_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_com_hx_platformnetty_iotdevice_body_CtrlValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_CtrlValue_descriptor,
        new java.lang.String[] { "AutopilotCmd", "WorkMode", "HmiType", "UpdateRoutePath", "RoutePath", "RouteParam", "BaseLineTranslation", "TransferLine", "SetConfigParam", "VersionModelType", "ReqConfigParamType", "ManualControl", "Calibration", "TboxSetParm", "TboxGetParm", "LastTask", });
    internal_static_com_hx_platformnetty_iotdevice_body_ResponseValue_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_com_hx_platformnetty_iotdevice_body_ResponseValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_ResponseValue_descriptor,
        new java.lang.String[] { "AtuopilotResponse", "WorkModeResponse", "HmiModeResponse", "CancelTaskResponse", "UpdateRoutePathResult", "RoutePath", "RouteParamResponse", "TaskFinishConfirmResponse", "CancelTaskConfirmResponse", "BaseLineTranResponse", "TransferLineResponse", "ResConfigParam", "VersionModelInf", "ManualControl", "CalibrationResponse", "CalibrationConfirmResult", "TboxSetResult", "TboxGetResult", "LastTaskContinue", "TaskFinishConfirm", });
    internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterSet_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterSet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterSet_descriptor,
        new java.lang.String[] { "Id", "Value", });
    internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterGet_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterGet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterGet_descriptor,
        new java.lang.String[] { "Id", });
    internal_static_com_hx_platformnetty_iotdevice_body_UpdateRoutePath_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_com_hx_platformnetty_iotdevice_body_UpdateRoutePath_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_UpdateRoutePath_descriptor,
        new java.lang.String[] { "PathType", "DevType", });
    internal_static_com_hx_platformnetty_iotdevice_body_PointXYZ_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_com_hx_platformnetty_iotdevice_body_PointXYZ_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_PointXYZ_descriptor,
        new java.lang.String[] { "X", "Y", "Z", "Yaw", "V", "S", "Cur", "Back", "StrCur", "Reverse", "Type", "RoadLeftDis", "RoadRightDis", });
    internal_static_com_hx_platformnetty_iotdevice_body_RoutePath_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_com_hx_platformnetty_iotdevice_body_RoutePath_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_RoutePath_descriptor,
        new java.lang.String[] { "TotalPathsNum", "CurPathsNum", "TotalPointNum", "RoutingType", "PointXyz", });
    internal_static_com_hx_platformnetty_iotdevice_body_Pose_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_com_hx_platformnetty_iotdevice_body_Pose_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_Pose_descriptor,
        new java.lang.String[] { "Px", "Py", "Pz", "Yaw", "Pitch", "Roll", });
    internal_static_com_hx_platformnetty_iotdevice_body_RouteParam_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_com_hx_platformnetty_iotdevice_body_RouteParam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_RouteParam_descriptor,
        new java.lang.String[] { "RoutingType", "Pose", "AgriculturalImpleWidth", "LineSpace", "Direction", "AgriculturalImpleInstallerror", "TurnRadius", "ChangeOperationOri", "ReverseFlag", "HangDownDist", "HangUpDist", "PtoOffDist", "PtoOnDist", "TargetVel", });
    internal_static_com_hx_platformnetty_iotdevice_body_BaseLineTranslation_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_com_hx_platformnetty_iotdevice_body_BaseLineTranslation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_BaseLineTranslation_descriptor,
        new java.lang.String[] { "TranslationType", "BaselineOffset", });
    internal_static_com_hx_platformnetty_iotdevice_body_TransferLine_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_com_hx_platformnetty_iotdevice_body_TransferLine_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_TransferLine_descriptor,
        new java.lang.String[] { "AgriculturalImplementOffset", });
    internal_static_com_hx_platformnetty_iotdevice_body_GnssConfig_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_com_hx_platformnetty_iotdevice_body_GnssConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_GnssConfig_descriptor,
        new java.lang.String[] { "GnssBoard", "GnssBoardSerial", "GnssBoardBaudRate", });
    internal_static_com_hx_platformnetty_iotdevice_body_LocalizationConfig_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_com_hx_platformnetty_iotdevice_body_LocalizationConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_LocalizationConfig_descriptor,
        new java.lang.String[] { "AntInstallType", "AntOffset", });
    internal_static_com_hx_platformnetty_iotdevice_body_ControlConfig_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_com_hx_platformnetty_iotdevice_body_ControlConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_ControlConfig_descriptor,
        new java.lang.String[] { "LonKpT", "LonKiT", "LonKdI", "ForwardLen", "WheelBase", "WheelDistanceFront", "WheelDistanceBack", "MinRadius", "Kp", "Ki", "Kd", "OnlineDistance", "OnlineThrta", "KpOnline", "KiOnline", "KdOnline", "ForwardLenOnline", "SlowDownRate", "Saturation", "IntegraThresHold", "MaxDec", "StartVel", "SlowdownDist", "MaxAcc", "Hz", });
    internal_static_com_hx_platformnetty_iotdevice_body_ChassisConfig_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_com_hx_platformnetty_iotdevice_body_ChassisConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_ChassisConfig_descriptor,
        new java.lang.String[] { "WheelBase", "WheelDistanceFront", });
    internal_static_com_hx_platformnetty_iotdevice_body_PlanningConfig_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_com_hx_platformnetty_iotdevice_body_PlanningConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_PlanningConfig_descriptor,
        new java.lang.String[] { "DevToCloudTopic", "CloudToDevTopic", "DevID", "BasicstateinfoFreqFreeApp", "BasicstateinfoFreqWorkApp", "BasicstateinfoFreqFreeCloud", "BasicstateinfoFreqWorkCloud", "LocalTrajFreq", "LocalTrajLength", "DisconnectWhileTimeout", "DisconnectStopWorkApp", "DisconnectStopWorkCloud", "DefaultCloudTaskId", "RadioBaudRate", "RadioSerial", });
    internal_static_com_hx_platformnetty_iotdevice_body_ConfigParam_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_com_hx_platformnetty_iotdevice_body_ConfigParam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_ConfigParam_descriptor,
        new java.lang.String[] { "Type", "GnssConfig", "LocalizationConfig", "ControlConfig", "ChassisConfig", "PlanningConfig", });
    internal_static_com_hx_platformnetty_iotdevice_body_ManualControl_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_com_hx_platformnetty_iotdevice_body_ManualControl_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_ManualControl_descriptor,
        new java.lang.String[] { "VehicleType", "ManualControlInfo", });
    internal_static_com_hx_platformnetty_iotdevice_body_ManualControl_infoManualControl_descriptor =
      internal_static_com_hx_platformnetty_iotdevice_body_ManualControl_descriptor.getNestedTypes().get(0);
    internal_static_com_hx_platformnetty_iotdevice_body_ManualControl_infoManualControl_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_ManualControl_infoManualControl_descriptor,
        new java.lang.String[] { "Id", "Value", });
    internal_static_com_hx_platformnetty_iotdevice_body_Calibration_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_com_hx_platformnetty_iotdevice_body_Calibration_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_Calibration_descriptor,
        new java.lang.String[] { "Type", "RouteParam", });
    internal_static_com_hx_platformnetty_iotdevice_body_LastTask_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_com_hx_platformnetty_iotdevice_body_LastTask_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_LastTask_descriptor,
        new java.lang.String[] { "TaskHeader", "RouteParam", "LastWorkPathNum", "LastPose", });
    internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterSetResult_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterSetResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterSetResult_descriptor,
        new java.lang.String[] { "Result", "Code", });
    internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterGetResponse_descriptor =
      getDescriptor().getMessageTypes().get(25);
    internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterGetResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_TboxParameterGetResponse_descriptor,
        new java.lang.String[] { "Id", "Value", });
    internal_static_com_hx_platformnetty_iotdevice_body_AutoPilotResponse_descriptor =
      getDescriptor().getMessageTypes().get(26);
    internal_static_com_hx_platformnetty_iotdevice_body_AutoPilotResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_AutoPilotResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_com_hx_platformnetty_iotdevice_body_WorkModeResponse_descriptor =
      getDescriptor().getMessageTypes().get(27);
    internal_static_com_hx_platformnetty_iotdevice_body_WorkModeResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_WorkModeResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_com_hx_platformnetty_iotdevice_body_HmiResponse_descriptor =
      getDescriptor().getMessageTypes().get(28);
    internal_static_com_hx_platformnetty_iotdevice_body_HmiResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_HmiResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_com_hx_platformnetty_iotdevice_body_CancelTaskResponse_descriptor =
      getDescriptor().getMessageTypes().get(29);
    internal_static_com_hx_platformnetty_iotdevice_body_CancelTaskResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_CancelTaskResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_com_hx_platformnetty_iotdevice_body_UpdateRoutePathResult_descriptor =
      getDescriptor().getMessageTypes().get(30);
    internal_static_com_hx_platformnetty_iotdevice_body_UpdateRoutePathResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_UpdateRoutePathResult_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_com_hx_platformnetty_iotdevice_body_CalibrationResponse_descriptor =
      getDescriptor().getMessageTypes().get(31);
    internal_static_com_hx_platformnetty_iotdevice_body_CalibrationResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_CalibrationResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_com_hx_platformnetty_iotdevice_body_CalibrationConfirmResult_descriptor =
      getDescriptor().getMessageTypes().get(32);
    internal_static_com_hx_platformnetty_iotdevice_body_CalibrationConfirmResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_CalibrationConfirmResult_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_com_hx_platformnetty_iotdevice_body_CancelTaskConfirmResponse_descriptor =
      getDescriptor().getMessageTypes().get(33);
    internal_static_com_hx_platformnetty_iotdevice_body_CancelTaskConfirmResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_CancelTaskConfirmResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_com_hx_platformnetty_iotdevice_body_ManualControlResponse_descriptor =
      getDescriptor().getMessageTypes().get(34);
    internal_static_com_hx_platformnetty_iotdevice_body_ManualControlResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_ManualControlResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_com_hx_platformnetty_iotdevice_body_TaskFinishConfirmResponse_descriptor =
      getDescriptor().getMessageTypes().get(35);
    internal_static_com_hx_platformnetty_iotdevice_body_TaskFinishConfirmResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_TaskFinishConfirmResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_com_hx_platformnetty_iotdevice_body_VersionModelInfo_descriptor =
      getDescriptor().getMessageTypes().get(36);
    internal_static_com_hx_platformnetty_iotdevice_body_VersionModelInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_VersionModelInfo_descriptor,
        new java.lang.String[] { "VersionModelType", "Info", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
