// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Loginout .proto

package com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body;

public final class LoginoutProtoc {
  private LoginoutProtoc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface LoginoutOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *version：协议版本号
     * </pre>
     *
     * <code>uint32 version = 1;</code>
     * @return The version.
     */
    int getVersion();

    /**
     * <pre>
     *business_type: 业务类型
     *0：无意义
     *1：登入请求
     *2：登出请求
     *3：登入响应
     *4：登出响应
     * </pre>
     *
     * <code>uint32 business_type = 2;</code>
     * @return The businessType.
     */
    int getBusinessType();

    /**
     * <pre>
     *loginout_request: 登入/登出请求message
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutRequest loginout_request = 3;</code>
     * @return Whether the loginoutRequest field is set.
     */
    boolean hasLoginoutRequest();
    /**
     * <pre>
     *loginout_request: 登入/登出请求message
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutRequest loginout_request = 3;</code>
     * @return The loginoutRequest.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest getLoginoutRequest();
    /**
     * <pre>
     *loginout_request: 登入/登出请求message
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutRequest loginout_request = 3;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequestOrBuilder getLoginoutRequestOrBuilder();

    /**
     * <pre>
     *loginout_response: 登入/登出请求回复message
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutResponse loginout_response = 4;</code>
     * @return Whether the loginoutResponse field is set.
     */
    boolean hasLoginoutResponse();
    /**
     * <pre>
     *loginout_response: 登入/登出请求回复message
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutResponse loginout_response = 4;</code>
     * @return The loginoutResponse.
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse getLoginoutResponse();
    /**
     * <pre>
     *loginout_response: 登入/登出请求回复message
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutResponse loginout_response = 4;</code>
     */
    com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponseOrBuilder getLoginoutResponseOrBuilder();
  }
  /**
   * <pre>
   *############################################################################
   * </pre>
   *
   * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout}
   */
  public static final class Loginout extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout)
      LoginoutOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Loginout.newBuilder() to construct.
    private Loginout(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Loginout() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Loginout();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Loginout(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              version_ = input.readUInt32();
              break;
            }
            case 16: {

              businessType_ = input.readUInt32();
              break;
            }
            case 26: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest.Builder subBuilder = null;
              if (loginoutRequest_ != null) {
                subBuilder = loginoutRequest_.toBuilder();
              }
              loginoutRequest_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(loginoutRequest_);
                loginoutRequest_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse.Builder subBuilder = null;
              if (loginoutResponse_ != null) {
                subBuilder = loginoutResponse_.toBuilder();
              }
              loginoutResponse_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(loginoutResponse_);
                loginoutResponse_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Loginout_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Loginout_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.Builder.class);
    }

    public interface LoginoutRequestOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutRequest)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * 登入登出流水
       * </pre>
       *
       * <code>uint32 sequence_id = 1;</code>
       * @return The sequenceId.
       */
      int getSequenceId();
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutRequest}
     */
    public static final class LoginoutRequest extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutRequest)
        LoginoutRequestOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use LoginoutRequest.newBuilder() to construct.
      private LoginoutRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private LoginoutRequest() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new LoginoutRequest();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private LoginoutRequest(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                sequenceId_ = input.readUInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Loginout_LoginoutRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Loginout_LoginoutRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest.Builder.class);
      }

      public static final int SEQUENCE_ID_FIELD_NUMBER = 1;
      private int sequenceId_;
      /**
       * <pre>
       * 登入登出流水
       * </pre>
       *
       * <code>uint32 sequence_id = 1;</code>
       * @return The sequenceId.
       */
      @java.lang.Override
      public int getSequenceId() {
        return sequenceId_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (sequenceId_ != 0) {
          output.writeUInt32(1, sequenceId_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (sequenceId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, sequenceId_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest)) {
          return super.equals(obj);
        }
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest) obj;

        if (getSequenceId()
            != other.getSequenceId()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + SEQUENCE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getSequenceId();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutRequest}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutRequest)
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequestOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Loginout_LoginoutRequest_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Loginout_LoginoutRequest_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest.Builder.class);
        }

        // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          sequenceId_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Loginout_LoginoutRequest_descriptor;
        }

        @java.lang.Override
        public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest getDefaultInstanceForType() {
          return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest.getDefaultInstance();
        }

        @java.lang.Override
        public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest build() {
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest buildPartial() {
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest(this);
          result.sequenceId_ = sequenceId_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest) {
            return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest other) {
          if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest.getDefaultInstance()) return this;
          if (other.getSequenceId() != 0) {
            setSequenceId(other.getSequenceId());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int sequenceId_ ;
        /**
         * <pre>
         * 登入登出流水
         * </pre>
         *
         * <code>uint32 sequence_id = 1;</code>
         * @return The sequenceId.
         */
        @java.lang.Override
        public int getSequenceId() {
          return sequenceId_;
        }
        /**
         * <pre>
         * 登入登出流水
         * </pre>
         *
         * <code>uint32 sequence_id = 1;</code>
         * @param value The sequenceId to set.
         * @return This builder for chaining.
         */
        public Builder setSequenceId(int value) {
          
          sequenceId_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * 登入登出流水
         * </pre>
         *
         * <code>uint32 sequence_id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearSequenceId() {
          
          sequenceId_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutRequest)
      }

      // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutRequest)
      private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest();
      }

      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<LoginoutRequest>
          PARSER = new com.google.protobuf.AbstractParser<LoginoutRequest>() {
        @java.lang.Override
        public LoginoutRequest parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new LoginoutRequest(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<LoginoutRequest> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<LoginoutRequest> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface LoginoutResponseOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutResponse)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * 在回复登入或登出请求时，填写对应登入登出流水
       * </pre>
       *
       * <code>uint32 sequence_id = 1;</code>
       * @return The sequenceId.
       */
      int getSequenceId();

      /**
       * <pre>
       *登入/登出结果message
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.CommonResult loginout_result = 2;</code>
       * @return Whether the loginoutResult field is set.
       */
      boolean hasLoginoutResult();
      /**
       * <pre>
       *登入/登出结果message
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.CommonResult loginout_result = 2;</code>
       * @return The loginoutResult.
       */
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult getLoginoutResult();
      /**
       * <pre>
       *登入/登出结果message
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.CommonResult loginout_result = 2;</code>
       */
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResultOrBuilder getLoginoutResultOrBuilder();
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutResponse}
     */
    public static final class LoginoutResponse extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutResponse)
        LoginoutResponseOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use LoginoutResponse.newBuilder() to construct.
      private LoginoutResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private LoginoutResponse() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new LoginoutResponse();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private LoginoutResponse(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                sequenceId_ = input.readUInt32();
                break;
              }
              case 18: {
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult.Builder subBuilder = null;
                if (loginoutResult_ != null) {
                  subBuilder = loginoutResult_.toBuilder();
                }
                loginoutResult_ = input.readMessage(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(loginoutResult_);
                  loginoutResult_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Loginout_LoginoutResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Loginout_LoginoutResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse.Builder.class);
      }

      public static final int SEQUENCE_ID_FIELD_NUMBER = 1;
      private int sequenceId_;
      /**
       * <pre>
       * 在回复登入或登出请求时，填写对应登入登出流水
       * </pre>
       *
       * <code>uint32 sequence_id = 1;</code>
       * @return The sequenceId.
       */
      @java.lang.Override
      public int getSequenceId() {
        return sequenceId_;
      }

      public static final int LOGINOUT_RESULT_FIELD_NUMBER = 2;
      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult loginoutResult_;
      /**
       * <pre>
       *登入/登出结果message
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.CommonResult loginout_result = 2;</code>
       * @return Whether the loginoutResult field is set.
       */
      @java.lang.Override
      public boolean hasLoginoutResult() {
        return loginoutResult_ != null;
      }
      /**
       * <pre>
       *登入/登出结果message
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.CommonResult loginout_result = 2;</code>
       * @return The loginoutResult.
       */
      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult getLoginoutResult() {
        return loginoutResult_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult.getDefaultInstance() : loginoutResult_;
      }
      /**
       * <pre>
       *登入/登出结果message
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.CommonResult loginout_result = 2;</code>
       */
      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResultOrBuilder getLoginoutResultOrBuilder() {
        return getLoginoutResult();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (sequenceId_ != 0) {
          output.writeUInt32(1, sequenceId_);
        }
        if (loginoutResult_ != null) {
          output.writeMessage(2, getLoginoutResult());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (sequenceId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, sequenceId_);
        }
        if (loginoutResult_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getLoginoutResult());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse)) {
          return super.equals(obj);
        }
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse) obj;

        if (getSequenceId()
            != other.getSequenceId()) return false;
        if (hasLoginoutResult() != other.hasLoginoutResult()) return false;
        if (hasLoginoutResult()) {
          if (!getLoginoutResult()
              .equals(other.getLoginoutResult())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + SEQUENCE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getSequenceId();
        if (hasLoginoutResult()) {
          hash = (37 * hash) + LOGINOUT_RESULT_FIELD_NUMBER;
          hash = (53 * hash) + getLoginoutResult().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutResponse}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutResponse)
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponseOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Loginout_LoginoutResponse_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Loginout_LoginoutResponse_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse.Builder.class);
        }

        // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          sequenceId_ = 0;

          if (loginoutResultBuilder_ == null) {
            loginoutResult_ = null;
          } else {
            loginoutResult_ = null;
            loginoutResultBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Loginout_LoginoutResponse_descriptor;
        }

        @java.lang.Override
        public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse getDefaultInstanceForType() {
          return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse.getDefaultInstance();
        }

        @java.lang.Override
        public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse build() {
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse buildPartial() {
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse(this);
          result.sequenceId_ = sequenceId_;
          if (loginoutResultBuilder_ == null) {
            result.loginoutResult_ = loginoutResult_;
          } else {
            result.loginoutResult_ = loginoutResultBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse) {
            return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse other) {
          if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse.getDefaultInstance()) return this;
          if (other.getSequenceId() != 0) {
            setSequenceId(other.getSequenceId());
          }
          if (other.hasLoginoutResult()) {
            mergeLoginoutResult(other.getLoginoutResult());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int sequenceId_ ;
        /**
         * <pre>
         * 在回复登入或登出请求时，填写对应登入登出流水
         * </pre>
         *
         * <code>uint32 sequence_id = 1;</code>
         * @return The sequenceId.
         */
        @java.lang.Override
        public int getSequenceId() {
          return sequenceId_;
        }
        /**
         * <pre>
         * 在回复登入或登出请求时，填写对应登入登出流水
         * </pre>
         *
         * <code>uint32 sequence_id = 1;</code>
         * @param value The sequenceId to set.
         * @return This builder for chaining.
         */
        public Builder setSequenceId(int value) {
          
          sequenceId_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * 在回复登入或登出请求时，填写对应登入登出流水
         * </pre>
         *
         * <code>uint32 sequence_id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearSequenceId() {
          
          sequenceId_ = 0;
          onChanged();
          return this;
        }

        private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult loginoutResult_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResultOrBuilder> loginoutResultBuilder_;
        /**
         * <pre>
         *登入/登出结果message
         * </pre>
         *
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.CommonResult loginout_result = 2;</code>
         * @return Whether the loginoutResult field is set.
         */
        public boolean hasLoginoutResult() {
          return loginoutResultBuilder_ != null || loginoutResult_ != null;
        }
        /**
         * <pre>
         *登入/登出结果message
         * </pre>
         *
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.CommonResult loginout_result = 2;</code>
         * @return The loginoutResult.
         */
        public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult getLoginoutResult() {
          if (loginoutResultBuilder_ == null) {
            return loginoutResult_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult.getDefaultInstance() : loginoutResult_;
          } else {
            return loginoutResultBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         *登入/登出结果message
         * </pre>
         *
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.CommonResult loginout_result = 2;</code>
         */
        public Builder setLoginoutResult(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult value) {
          if (loginoutResultBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            loginoutResult_ = value;
            onChanged();
          } else {
            loginoutResultBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         *登入/登出结果message
         * </pre>
         *
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.CommonResult loginout_result = 2;</code>
         */
        public Builder setLoginoutResult(
            com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult.Builder builderForValue) {
          if (loginoutResultBuilder_ == null) {
            loginoutResult_ = builderForValue.build();
            onChanged();
          } else {
            loginoutResultBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         *登入/登出结果message
         * </pre>
         *
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.CommonResult loginout_result = 2;</code>
         */
        public Builder mergeLoginoutResult(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult value) {
          if (loginoutResultBuilder_ == null) {
            if (loginoutResult_ != null) {
              loginoutResult_ =
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult.newBuilder(loginoutResult_).mergeFrom(value).buildPartial();
            } else {
              loginoutResult_ = value;
            }
            onChanged();
          } else {
            loginoutResultBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         *登入/登出结果message
         * </pre>
         *
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.CommonResult loginout_result = 2;</code>
         */
        public Builder clearLoginoutResult() {
          if (loginoutResultBuilder_ == null) {
            loginoutResult_ = null;
            onChanged();
          } else {
            loginoutResult_ = null;
            loginoutResultBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         *登入/登出结果message
         * </pre>
         *
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.CommonResult loginout_result = 2;</code>
         */
        public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult.Builder getLoginoutResultBuilder() {
          
          onChanged();
          return getLoginoutResultFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         *登入/登出结果message
         * </pre>
         *
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.CommonResult loginout_result = 2;</code>
         */
        public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResultOrBuilder getLoginoutResultOrBuilder() {
          if (loginoutResultBuilder_ != null) {
            return loginoutResultBuilder_.getMessageOrBuilder();
          } else {
            return loginoutResult_ == null ?
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult.getDefaultInstance() : loginoutResult_;
          }
        }
        /**
         * <pre>
         *登入/登出结果message
         * </pre>
         *
         * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.CommonResult loginout_result = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResultOrBuilder> 
            getLoginoutResultFieldBuilder() {
          if (loginoutResultBuilder_ == null) {
            loginoutResultBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResultOrBuilder>(
                    getLoginoutResult(),
                    getParentForChildren(),
                    isClean());
            loginoutResult_ = null;
          }
          return loginoutResultBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutResponse)
      }

      // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutResponse)
      private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse();
      }

      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<LoginoutResponse>
          PARSER = new com.google.protobuf.AbstractParser<LoginoutResponse>() {
        @java.lang.Override
        public LoginoutResponse parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new LoginoutResponse(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<LoginoutResponse> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<LoginoutResponse> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface CommonResultOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.CommonResult)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       *0:无意义
       *1：成功
       *2：失败
       * </pre>
       *
       * <code>uint32 status = 1;</code>
       * @return The status.
       */
      int getStatus();

      /**
       * <pre>
       *code: 异常状态码：待定
       * </pre>
       *
       * <code>uint32 code = 2;</code>
       * @return The code.
       */
      int getCode();

      /**
       * <pre>
       *msg: 消息
       * </pre>
       *
       * <code>string msg = 3;</code>
       * @return The msg.
       */
      java.lang.String getMsg();
      /**
       * <pre>
       *msg: 消息
       * </pre>
       *
       * <code>string msg = 3;</code>
       * @return The bytes for msg.
       */
      com.google.protobuf.ByteString
          getMsgBytes();
    }
    /**
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.CommonResult}
     */
    public static final class CommonResult extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.CommonResult)
        CommonResultOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use CommonResult.newBuilder() to construct.
      private CommonResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private CommonResult() {
        msg_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new CommonResult();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private CommonResult(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                status_ = input.readUInt32();
                break;
              }
              case 16: {

                code_ = input.readUInt32();
                break;
              }
              case 26: {
                java.lang.String s = input.readStringRequireUtf8();

                msg_ = s;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Loginout_CommonResult_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Loginout_CommonResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult.Builder.class);
      }

      public static final int STATUS_FIELD_NUMBER = 1;
      private int status_;
      /**
       * <pre>
       *0:无意义
       *1：成功
       *2：失败
       * </pre>
       *
       * <code>uint32 status = 1;</code>
       * @return The status.
       */
      @java.lang.Override
      public int getStatus() {
        return status_;
      }

      public static final int CODE_FIELD_NUMBER = 2;
      private int code_;
      /**
       * <pre>
       *code: 异常状态码：待定
       * </pre>
       *
       * <code>uint32 code = 2;</code>
       * @return The code.
       */
      @java.lang.Override
      public int getCode() {
        return code_;
      }

      public static final int MSG_FIELD_NUMBER = 3;
      private volatile java.lang.Object msg_;
      /**
       * <pre>
       *msg: 消息
       * </pre>
       *
       * <code>string msg = 3;</code>
       * @return The msg.
       */
      @java.lang.Override
      public java.lang.String getMsg() {
        java.lang.Object ref = msg_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          msg_ = s;
          return s;
        }
      }
      /**
       * <pre>
       *msg: 消息
       * </pre>
       *
       * <code>string msg = 3;</code>
       * @return The bytes for msg.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getMsgBytes() {
        java.lang.Object ref = msg_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (status_ != 0) {
          output.writeUInt32(1, status_);
        }
        if (code_ != 0) {
          output.writeUInt32(2, code_);
        }
        if (!getMsgBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, msg_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (status_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, status_);
        }
        if (code_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, code_);
        }
        if (!getMsgBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, msg_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult)) {
          return super.equals(obj);
        }
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult) obj;

        if (getStatus()
            != other.getStatus()) return false;
        if (getCode()
            != other.getCode()) return false;
        if (!getMsg()
            .equals(other.getMsg())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + STATUS_FIELD_NUMBER;
        hash = (53 * hash) + getStatus();
        hash = (37 * hash) + CODE_FIELD_NUMBER;
        hash = (53 * hash) + getCode();
        hash = (37 * hash) + MSG_FIELD_NUMBER;
        hash = (53 * hash) + getMsg().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.CommonResult}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.CommonResult)
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResultOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Loginout_CommonResult_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Loginout_CommonResult_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult.Builder.class);
        }

        // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          status_ = 0;

          code_ = 0;

          msg_ = "";

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Loginout_CommonResult_descriptor;
        }

        @java.lang.Override
        public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult getDefaultInstanceForType() {
          return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult.getDefaultInstance();
        }

        @java.lang.Override
        public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult build() {
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult buildPartial() {
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult(this);
          result.status_ = status_;
          result.code_ = code_;
          result.msg_ = msg_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult) {
            return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult other) {
          if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult.getDefaultInstance()) return this;
          if (other.getStatus() != 0) {
            setStatus(other.getStatus());
          }
          if (other.getCode() != 0) {
            setCode(other.getCode());
          }
          if (!other.getMsg().isEmpty()) {
            msg_ = other.msg_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int status_ ;
        /**
         * <pre>
         *0:无意义
         *1：成功
         *2：失败
         * </pre>
         *
         * <code>uint32 status = 1;</code>
         * @return The status.
         */
        @java.lang.Override
        public int getStatus() {
          return status_;
        }
        /**
         * <pre>
         *0:无意义
         *1：成功
         *2：失败
         * </pre>
         *
         * <code>uint32 status = 1;</code>
         * @param value The status to set.
         * @return This builder for chaining.
         */
        public Builder setStatus(int value) {
          
          status_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *0:无意义
         *1：成功
         *2：失败
         * </pre>
         *
         * <code>uint32 status = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearStatus() {
          
          status_ = 0;
          onChanged();
          return this;
        }

        private int code_ ;
        /**
         * <pre>
         *code: 异常状态码：待定
         * </pre>
         *
         * <code>uint32 code = 2;</code>
         * @return The code.
         */
        @java.lang.Override
        public int getCode() {
          return code_;
        }
        /**
         * <pre>
         *code: 异常状态码：待定
         * </pre>
         *
         * <code>uint32 code = 2;</code>
         * @param value The code to set.
         * @return This builder for chaining.
         */
        public Builder setCode(int value) {
          
          code_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *code: 异常状态码：待定
         * </pre>
         *
         * <code>uint32 code = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearCode() {
          
          code_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object msg_ = "";
        /**
         * <pre>
         *msg: 消息
         * </pre>
         *
         * <code>string msg = 3;</code>
         * @return The msg.
         */
        public java.lang.String getMsg() {
          java.lang.Object ref = msg_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            msg_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         *msg: 消息
         * </pre>
         *
         * <code>string msg = 3;</code>
         * @return The bytes for msg.
         */
        public com.google.protobuf.ByteString
            getMsgBytes() {
          java.lang.Object ref = msg_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            msg_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         *msg: 消息
         * </pre>
         *
         * <code>string msg = 3;</code>
         * @param value The msg to set.
         * @return This builder for chaining.
         */
        public Builder setMsg(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          msg_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *msg: 消息
         * </pre>
         *
         * <code>string msg = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearMsg() {
          
          msg_ = getDefaultInstance().getMsg();
          onChanged();
          return this;
        }
        /**
         * <pre>
         *msg: 消息
         * </pre>
         *
         * <code>string msg = 3;</code>
         * @param value The bytes for msg to set.
         * @return This builder for chaining.
         */
        public Builder setMsgBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          msg_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.CommonResult)
      }

      // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.CommonResult)
      private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult();
      }

      public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<CommonResult>
          PARSER = new com.google.protobuf.AbstractParser<CommonResult>() {
        @java.lang.Override
        public CommonResult parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CommonResult(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<CommonResult> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<CommonResult> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.CommonResult getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <pre>
     *version：协议版本号
     * </pre>
     *
     * <code>uint32 version = 1;</code>
     * @return The version.
     */
    @java.lang.Override
    public int getVersion() {
      return version_;
    }

    public static final int BUSINESS_TYPE_FIELD_NUMBER = 2;
    private int businessType_;
    /**
     * <pre>
     *business_type: 业务类型
     *0：无意义
     *1：登入请求
     *2：登出请求
     *3：登入响应
     *4：登出响应
     * </pre>
     *
     * <code>uint32 business_type = 2;</code>
     * @return The businessType.
     */
    @java.lang.Override
    public int getBusinessType() {
      return businessType_;
    }

    public static final int LOGINOUT_REQUEST_FIELD_NUMBER = 3;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest loginoutRequest_;
    /**
     * <pre>
     *loginout_request: 登入/登出请求message
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutRequest loginout_request = 3;</code>
     * @return Whether the loginoutRequest field is set.
     */
    @java.lang.Override
    public boolean hasLoginoutRequest() {
      return loginoutRequest_ != null;
    }
    /**
     * <pre>
     *loginout_request: 登入/登出请求message
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutRequest loginout_request = 3;</code>
     * @return The loginoutRequest.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest getLoginoutRequest() {
      return loginoutRequest_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest.getDefaultInstance() : loginoutRequest_;
    }
    /**
     * <pre>
     *loginout_request: 登入/登出请求message
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutRequest loginout_request = 3;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequestOrBuilder getLoginoutRequestOrBuilder() {
      return getLoginoutRequest();
    }

    public static final int LOGINOUT_RESPONSE_FIELD_NUMBER = 4;
    private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse loginoutResponse_;
    /**
     * <pre>
     *loginout_response: 登入/登出请求回复message
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutResponse loginout_response = 4;</code>
     * @return Whether the loginoutResponse field is set.
     */
    @java.lang.Override
    public boolean hasLoginoutResponse() {
      return loginoutResponse_ != null;
    }
    /**
     * <pre>
     *loginout_response: 登入/登出请求回复message
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutResponse loginout_response = 4;</code>
     * @return The loginoutResponse.
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse getLoginoutResponse() {
      return loginoutResponse_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse.getDefaultInstance() : loginoutResponse_;
    }
    /**
     * <pre>
     *loginout_response: 登入/登出请求回复message
     * </pre>
     *
     * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutResponse loginout_response = 4;</code>
     */
    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponseOrBuilder getLoginoutResponseOrBuilder() {
      return getLoginoutResponse();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (version_ != 0) {
        output.writeUInt32(1, version_);
      }
      if (businessType_ != 0) {
        output.writeUInt32(2, businessType_);
      }
      if (loginoutRequest_ != null) {
        output.writeMessage(3, getLoginoutRequest());
      }
      if (loginoutResponse_ != null) {
        output.writeMessage(4, getLoginoutResponse());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (version_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, version_);
      }
      if (businessType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, businessType_);
      }
      if (loginoutRequest_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getLoginoutRequest());
      }
      if (loginoutResponse_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getLoginoutResponse());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout)) {
        return super.equals(obj);
      }
      com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout other = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout) obj;

      if (getVersion()
          != other.getVersion()) return false;
      if (getBusinessType()
          != other.getBusinessType()) return false;
      if (hasLoginoutRequest() != other.hasLoginoutRequest()) return false;
      if (hasLoginoutRequest()) {
        if (!getLoginoutRequest()
            .equals(other.getLoginoutRequest())) return false;
      }
      if (hasLoginoutResponse() != other.hasLoginoutResponse()) return false;
      if (hasLoginoutResponse()) {
        if (!getLoginoutResponse()
            .equals(other.getLoginoutResponse())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion();
      hash = (37 * hash) + BUSINESS_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getBusinessType();
      if (hasLoginoutRequest()) {
        hash = (37 * hash) + LOGINOUT_REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getLoginoutRequest().hashCode();
      }
      if (hasLoginoutResponse()) {
        hash = (37 * hash) + LOGINOUT_RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + getLoginoutResponse().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *############################################################################
     * </pre>
     *
     * Protobuf type {@code com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout)
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.LoginoutOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Loginout_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Loginout_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.class, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.Builder.class);
      }

      // Construct using com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        version_ = 0;

        businessType_ = 0;

        if (loginoutRequestBuilder_ == null) {
          loginoutRequest_ = null;
        } else {
          loginoutRequest_ = null;
          loginoutRequestBuilder_ = null;
        }
        if (loginoutResponseBuilder_ == null) {
          loginoutResponse_ = null;
        } else {
          loginoutResponse_ = null;
          loginoutResponseBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.internal_static_com_hx_platformnetty_iotdevice_body_Loginout_descriptor;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout getDefaultInstanceForType() {
        return com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.getDefaultInstance();
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout build() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout buildPartial() {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout result = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout(this);
        result.version_ = version_;
        result.businessType_ = businessType_;
        if (loginoutRequestBuilder_ == null) {
          result.loginoutRequest_ = loginoutRequest_;
        } else {
          result.loginoutRequest_ = loginoutRequestBuilder_.build();
        }
        if (loginoutResponseBuilder_ == null) {
          result.loginoutResponse_ = loginoutResponse_;
        } else {
          result.loginoutResponse_ = loginoutResponseBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout) {
          return mergeFrom((com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout other) {
        if (other == com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.getDefaultInstance()) return this;
        if (other.getVersion() != 0) {
          setVersion(other.getVersion());
        }
        if (other.getBusinessType() != 0) {
          setBusinessType(other.getBusinessType());
        }
        if (other.hasLoginoutRequest()) {
          mergeLoginoutRequest(other.getLoginoutRequest());
        }
        if (other.hasLoginoutResponse()) {
          mergeLoginoutResponse(other.getLoginoutResponse());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int version_ ;
      /**
       * <pre>
       *version：协议版本号
       * </pre>
       *
       * <code>uint32 version = 1;</code>
       * @return The version.
       */
      @java.lang.Override
      public int getVersion() {
        return version_;
      }
      /**
       * <pre>
       *version：协议版本号
       * </pre>
       *
       * <code>uint32 version = 1;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(int value) {
        
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *version：协议版本号
       * </pre>
       *
       * <code>uint32 version = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = 0;
        onChanged();
        return this;
      }

      private int businessType_ ;
      /**
       * <pre>
       *business_type: 业务类型
       *0：无意义
       *1：登入请求
       *2：登出请求
       *3：登入响应
       *4：登出响应
       * </pre>
       *
       * <code>uint32 business_type = 2;</code>
       * @return The businessType.
       */
      @java.lang.Override
      public int getBusinessType() {
        return businessType_;
      }
      /**
       * <pre>
       *business_type: 业务类型
       *0：无意义
       *1：登入请求
       *2：登出请求
       *3：登入响应
       *4：登出响应
       * </pre>
       *
       * <code>uint32 business_type = 2;</code>
       * @param value The businessType to set.
       * @return This builder for chaining.
       */
      public Builder setBusinessType(int value) {
        
        businessType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *business_type: 业务类型
       *0：无意义
       *1：登入请求
       *2：登出请求
       *3：登入响应
       *4：登出响应
       * </pre>
       *
       * <code>uint32 business_type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBusinessType() {
        
        businessType_ = 0;
        onChanged();
        return this;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest loginoutRequest_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequestOrBuilder> loginoutRequestBuilder_;
      /**
       * <pre>
       *loginout_request: 登入/登出请求message
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutRequest loginout_request = 3;</code>
       * @return Whether the loginoutRequest field is set.
       */
      public boolean hasLoginoutRequest() {
        return loginoutRequestBuilder_ != null || loginoutRequest_ != null;
      }
      /**
       * <pre>
       *loginout_request: 登入/登出请求message
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutRequest loginout_request = 3;</code>
       * @return The loginoutRequest.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest getLoginoutRequest() {
        if (loginoutRequestBuilder_ == null) {
          return loginoutRequest_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest.getDefaultInstance() : loginoutRequest_;
        } else {
          return loginoutRequestBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *loginout_request: 登入/登出请求message
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutRequest loginout_request = 3;</code>
       */
      public Builder setLoginoutRequest(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest value) {
        if (loginoutRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          loginoutRequest_ = value;
          onChanged();
        } else {
          loginoutRequestBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *loginout_request: 登入/登出请求message
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutRequest loginout_request = 3;</code>
       */
      public Builder setLoginoutRequest(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest.Builder builderForValue) {
        if (loginoutRequestBuilder_ == null) {
          loginoutRequest_ = builderForValue.build();
          onChanged();
        } else {
          loginoutRequestBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *loginout_request: 登入/登出请求message
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutRequest loginout_request = 3;</code>
       */
      public Builder mergeLoginoutRequest(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest value) {
        if (loginoutRequestBuilder_ == null) {
          if (loginoutRequest_ != null) {
            loginoutRequest_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest.newBuilder(loginoutRequest_).mergeFrom(value).buildPartial();
          } else {
            loginoutRequest_ = value;
          }
          onChanged();
        } else {
          loginoutRequestBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *loginout_request: 登入/登出请求message
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutRequest loginout_request = 3;</code>
       */
      public Builder clearLoginoutRequest() {
        if (loginoutRequestBuilder_ == null) {
          loginoutRequest_ = null;
          onChanged();
        } else {
          loginoutRequest_ = null;
          loginoutRequestBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *loginout_request: 登入/登出请求message
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutRequest loginout_request = 3;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest.Builder getLoginoutRequestBuilder() {
        
        onChanged();
        return getLoginoutRequestFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *loginout_request: 登入/登出请求message
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutRequest loginout_request = 3;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequestOrBuilder getLoginoutRequestOrBuilder() {
        if (loginoutRequestBuilder_ != null) {
          return loginoutRequestBuilder_.getMessageOrBuilder();
        } else {
          return loginoutRequest_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest.getDefaultInstance() : loginoutRequest_;
        }
      }
      /**
       * <pre>
       *loginout_request: 登入/登出请求message
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutRequest loginout_request = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequestOrBuilder> 
          getLoginoutRequestFieldBuilder() {
        if (loginoutRequestBuilder_ == null) {
          loginoutRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequest.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutRequestOrBuilder>(
                  getLoginoutRequest(),
                  getParentForChildren(),
                  isClean());
          loginoutRequest_ = null;
        }
        return loginoutRequestBuilder_;
      }

      private com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse loginoutResponse_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponseOrBuilder> loginoutResponseBuilder_;
      /**
       * <pre>
       *loginout_response: 登入/登出请求回复message
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutResponse loginout_response = 4;</code>
       * @return Whether the loginoutResponse field is set.
       */
      public boolean hasLoginoutResponse() {
        return loginoutResponseBuilder_ != null || loginoutResponse_ != null;
      }
      /**
       * <pre>
       *loginout_response: 登入/登出请求回复message
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutResponse loginout_response = 4;</code>
       * @return The loginoutResponse.
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse getLoginoutResponse() {
        if (loginoutResponseBuilder_ == null) {
          return loginoutResponse_ == null ? com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse.getDefaultInstance() : loginoutResponse_;
        } else {
          return loginoutResponseBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *loginout_response: 登入/登出请求回复message
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutResponse loginout_response = 4;</code>
       */
      public Builder setLoginoutResponse(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse value) {
        if (loginoutResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          loginoutResponse_ = value;
          onChanged();
        } else {
          loginoutResponseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *loginout_response: 登入/登出请求回复message
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutResponse loginout_response = 4;</code>
       */
      public Builder setLoginoutResponse(
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse.Builder builderForValue) {
        if (loginoutResponseBuilder_ == null) {
          loginoutResponse_ = builderForValue.build();
          onChanged();
        } else {
          loginoutResponseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *loginout_response: 登入/登出请求回复message
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutResponse loginout_response = 4;</code>
       */
      public Builder mergeLoginoutResponse(com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse value) {
        if (loginoutResponseBuilder_ == null) {
          if (loginoutResponse_ != null) {
            loginoutResponse_ =
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse.newBuilder(loginoutResponse_).mergeFrom(value).buildPartial();
          } else {
            loginoutResponse_ = value;
          }
          onChanged();
        } else {
          loginoutResponseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *loginout_response: 登入/登出请求回复message
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutResponse loginout_response = 4;</code>
       */
      public Builder clearLoginoutResponse() {
        if (loginoutResponseBuilder_ == null) {
          loginoutResponse_ = null;
          onChanged();
        } else {
          loginoutResponse_ = null;
          loginoutResponseBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *loginout_response: 登入/登出请求回复message
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutResponse loginout_response = 4;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse.Builder getLoginoutResponseBuilder() {
        
        onChanged();
        return getLoginoutResponseFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *loginout_response: 登入/登出请求回复message
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutResponse loginout_response = 4;</code>
       */
      public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponseOrBuilder getLoginoutResponseOrBuilder() {
        if (loginoutResponseBuilder_ != null) {
          return loginoutResponseBuilder_.getMessageOrBuilder();
        } else {
          return loginoutResponse_ == null ?
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse.getDefaultInstance() : loginoutResponse_;
        }
      }
      /**
       * <pre>
       *loginout_response: 登入/登出请求回复message
       * </pre>
       *
       * <code>.com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout.LoginoutResponse loginout_response = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponseOrBuilder> 
          getLoginoutResponseFieldBuilder() {
        if (loginoutResponseBuilder_ == null) {
          loginoutResponseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponse.Builder, com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout.LoginoutResponseOrBuilder>(
                  getLoginoutResponse(),
                  getParentForChildren(),
                  isClean());
          loginoutResponse_ = null;
        }
        return loginoutResponseBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout)
    }

    // @@protoc_insertion_point(class_scope:com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.Loginout)
    private static final com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout();
    }

    public static com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Loginout>
        PARSER = new com.google.protobuf.AbstractParser<Loginout>() {
      @java.lang.Override
      public Loginout parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Loginout(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Loginout> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Loginout> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.elinxer.springcloud.platform.mqtt.broker.iotdevice.body.LoginoutProtoc.Loginout getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_Loginout_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_Loginout_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_Loginout_LoginoutRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_Loginout_LoginoutRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_Loginout_LoginoutResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_Loginout_LoginoutResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hx_platformnetty_iotdevice_body_Loginout_CommonResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hx_platformnetty_iotdevice_body_Loginout_CommonResult_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017Loginout .proto\022#com.elinxer.springcloud.platform.mqtt.broker." +
      "iotdevice.body\"\307\003\n\010Loginout\022\017\n\007version\030\001" +
      " \001(\r\022\025\n\rbusiness_type\030\002 \001(\r\022W\n\020loginout_" +
      "request\030\003 \001(\0132=.com.elinxer.springcloud.platform.mqtt.broker.iot" +
      "device.body.Loginout.LoginoutRequest\022Y\n\021" +
      "loginout_response\030\004 \001(\0132>.com.hx.platfor" +
      "mnetty.iotdevice.body.Loginout.LoginoutR" +
      "esponse\032&\n\017LoginoutRequest\022\023\n\013sequence_i" +
      "d\030\001 \001(\r\032|\n\020LoginoutResponse\022\023\n\013sequence_" +
      "id\030\001 \001(\r\022S\n\017loginout_result\030\002 \001(\0132:.com." +
      "hx.platformnetty.iotdevice.body.Loginout" +
      ".CommonResult\0329\n\014CommonResult\022\016\n\006status\030" +
      "\001 \001(\r\022\014\n\004code\030\002 \001(\r\022\013\n\003msg\030\003 \001(\tB\022B\016Logi" +
      "noutProtocH\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_com_hx_platformnetty_iotdevice_body_Loginout_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_hx_platformnetty_iotdevice_body_Loginout_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_Loginout_descriptor,
        new java.lang.String[] { "Version", "BusinessType", "LoginoutRequest", "LoginoutResponse", });
    internal_static_com_hx_platformnetty_iotdevice_body_Loginout_LoginoutRequest_descriptor =
      internal_static_com_hx_platformnetty_iotdevice_body_Loginout_descriptor.getNestedTypes().get(0);
    internal_static_com_hx_platformnetty_iotdevice_body_Loginout_LoginoutRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_Loginout_LoginoutRequest_descriptor,
        new java.lang.String[] { "SequenceId", });
    internal_static_com_hx_platformnetty_iotdevice_body_Loginout_LoginoutResponse_descriptor =
      internal_static_com_hx_platformnetty_iotdevice_body_Loginout_descriptor.getNestedTypes().get(1);
    internal_static_com_hx_platformnetty_iotdevice_body_Loginout_LoginoutResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_Loginout_LoginoutResponse_descriptor,
        new java.lang.String[] { "SequenceId", "LoginoutResult", });
    internal_static_com_hx_platformnetty_iotdevice_body_Loginout_CommonResult_descriptor =
      internal_static_com_hx_platformnetty_iotdevice_body_Loginout_descriptor.getNestedTypes().get(2);
    internal_static_com_hx_platformnetty_iotdevice_body_Loginout_CommonResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hx_platformnetty_iotdevice_body_Loginout_CommonResult_descriptor,
        new java.lang.String[] { "Status", "Code", "Msg", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
